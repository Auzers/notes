{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>\u6885\u556e\u5bd2\u5c81 \u821f\u9006\u6e4d\u5ddd</p> <ul> <li> <p> \u672c\u7ad9\u4ecb\u7ecd</p> <p></p> </li> </ul> <ul> <li> <p> Recommend pages</p> <ul> <li>\u5434\u6069\u8fbecoursera\u673a\u5668\u5b66\u4e60\u7b14\u8bb0</li> <li>CS61A\u7b14\u8bb0 </li> <li>git\u6574\u7406</li> <li>C++</li> <li>\u57fa\u4e8eautohotkey\u5b9e\u73b0\u7684\u6781\u7b80\u952e\u4f4d\u6620\u5c04</li> </ul> </li> <li> <p> Else</p> <ul> <li>\u672c\u7ad9\u5185\u5bb9\uff08\u9664\u7279\u522b\u58f0\u660e\u5916\uff09\u91c7\u7528\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u4fdd\u6301\u4e00\u81f4 4.0 \u56fd\u9645 (CC BY-NC-SA 4.0) \u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</li> <li>\u5982\u6709\u52a0\u8f7d\u95ee\u9898\uff0c\u8bf7\u4f7f\u7528\u9b54\u6cd5</li> <li>\u6837\u5f0f\u53c2\u8003<ul> <li>Wcowin</li> <li>TonyCrane</li> </ul> </li> </ul> </li> </ul> <p>  Statistics   My friends! </p> <p>\u7f51\u7ad9\u8fd0\u884c\u65f6\u95f4\uff1a </p> <p>\u603b\u8bbf\u95ee\u6b21\u6570\uff1a\u6b21 <p>\u90ae\u4ef6(1) \u5fae\u4fe1(2) </p> <ol> <li> amaranth2082@gmail.com || 1058564630@qq.com</li> <li>\u53f3\u4e0b\u89d2\u5fae\u4fe1\u56fe\u6807 || \u5fae\u4fe1\u53f7: w1058564630</li> </ol>"},{"location":"introduction/","title":"Introduction","text":"<p> \u7ea6 376 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"introduction/#_1","title":"\u5173\u4e8e\u6211","text":"<ul> <li>24 \u7ea7 ZJUer</li> <li>intp</li> <li>\u4e3a\u4ec0\u4e48\u53eb amaranth\uff1f<ul> <li>\u4ece\u5c0f\u5b66\u5230\u9ad8\u4e2d\uff0c\u8eab\u8fb9\u7684\u719f\u4eba\u51e0\u4e4e\u90fd\u53eb\u6211\u7684\u5916\u53f7\uff0c\u800c\u8fd9\u4e2a\u5916\u53f7\u7684\u9996\u5b57\u6bcd\u662f am\u3002  </li> <li>amaranth \u8fd9\u4e2a\u5355\u8bcd\u4e0d\u4ec5\u5305\u542b am\uff0c\u5176\u672c\u610f\u662f\u201c\u4e0d\u51cb\u82b1\u201d\uff0c\u5bd3\u610f\u5f88\u597d\u3002</li> </ul> </li> </ul>"},{"location":"introduction/#_2","title":"\u4f60\u80fd\u5728\u8fd9\u91cc\u770b\u5230\u4ec0\u4e48","text":"<ul> <li>CS \u76f8\u5173<ul> <li>\u7531\u4e8e\u6211\u7684\u80fd\u529b\u6709\u9650\uff0c\u76ee\u524d\u8fd8\u65e0\u6cd5\u4ea7\u51fa\u9ad8\u8d28\u91cf\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u672c\u7f51\u7ad9\u4e0a\u7684 CS \u76f8\u5173\u5185\u5bb9\uff0c\u5728\u7f51\u4e0a\u4e00\u5b9a\u80fd\u627e\u5230\u66f4\u597d\u7684\u8d44\u6599\u3002</li> <li>\u8fd9\u4e9b\u7b14\u8bb0\u4e3b\u8981\u662f\u4e3a\u6211\u81ea\u5df1\u6574\u7406\u7684\uff0c\u867d\u7136\u4f60\u53ef\u4ee5\u53c2\u8003\uff0c\u4f46\u6211\u8ba4\u4e3a\u66f4\u6709\u4ef7\u503c\u7684\u90e8\u5206\u662f\u6bcf\u7bc7\u7b14\u8bb0\u5f00\u5934\u7684 callout \u548c\u7ed3\u5c3e\u7684\u53c2\u8003\u8d44\u6599\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002</li> </ul> </li> <li>Blog<ul> <li>\u8bb0\u5f55\u6211\u7684\u4e00\u4e9b\u601d\u8003\u548c\u603b\u7ed3\u3002</li> </ul> </li> <li>Summary<ul> <li>\u7531\u4e8e\u5199\u65e5\u8bb0\u7684\u65f6\u95f4\u6210\u672c\u8f83\u9ad8\uff0c\u6211\u9009\u62e9\u4e86\u5468\u7ed3\u7684\u5f62\u5f0f\uff0c\u8bb0\u5f55\u6bcf\u5468\u7684\u7ecf\u5386\u548c\u4e00\u4e9b\u53cd\u601d\u3002\u6211\u5f88\u597d\u5947\u51e0\u5e74\u540e\u518d\u56de\u987e\u8fd9\u4e9b\u5185\u5bb9\u65f6\u4f1a\u662f\u4ec0\u4e48\u611f\u89c9\u3002</li> </ul> </li> </ul>"},{"location":"introduction/#_3","title":"\u5176\u4ed6","text":"<ul> <li>\u5982\u679c\u4f60\u53d1\u73b0\u7f51\u7ad9\u4e0a\u7684\u5185\u5bb9\u6709\u9519\u8bef\uff0c\u53ef\u4ee5\u63d0 issue\u3001PR\uff0c\u6216\u8005\u901a\u8fc7 vx \u8054\u7cfb\u6211\u3002</li> <li>\u5982\u679c\u4f60\u80fd\u7ed9\u6211\u63d0\u4f9b\u4efb\u4f55\u5b9d\u8d35\u7684\u5efa\u8bae\uff08\u4f8b\u5982\u5b66\u4e60\u8def\u7ebf\u4f18\u5316\uff0c\u6216\u8005\u6307\u6b63\u6211\u7684\u67d0\u4e9b\u60f3\u6cd5\uff09\uff0c\u6211\u5c06\u4e0d\u80dc\u611f\u6fc0\uff01</li> <li>\u5982\u679c\u4f60\u89c9\u5f97\u6211\u80fd\u5e2e\u5230\u4f60\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 vx \u8054\u7cfb\u6211\u3002</li> </ul> <p>\u90ae\u4ef6(1) \u5fae\u4fe1(2) \u5982\u679c\u4f60\u60f3\u8bf7\u6211\u559d\u676f\u5496\u5561(3)</p> <ol> <li> amaranth2082@gmail.com || 1058564630@qq.com</li> <li></li> <li></li> </ol>"},{"location":"Blogs/","title":"Blog","text":"<p>{{ blog_content }}</p>"},{"location":"Blogs/posts/info/","title":"\u6784\u5efa\u4f18\u8d28\u7684\u4fe1\u606f\u6811","text":"<p> \u7ea6 1076 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <code>#\u4fe1\u606f</code> <p>\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\u770b\u4e86\u5f88\u591a\u522b\u4eba\u7684\u603b\u7ed3\u548c\u65b9\u6cd5\uff0c\u53d7\u76ca\u9887\u591a\uff0c\u5c1d\u8bd5\u4e00\u4e0b\u901a\u8fc7\u8f93\u51fa\u7684\u65b9\u5f0f\u5185\u5316\u3002</p> <p>\u4fe1\u606f\u6df1\u523b\u5f71\u54cd\u6211\u4eec\u7684\u51b3\u7b56\u548c\u8ba4\u77e5\u3002\u957f\u671f\u88ab\u4f4e\u8d28\u3001\u65e0\u6548\u7684\u4fe1\u606f\u88f9\u631f\uff0c\u4e0d\u4ec5\u4f1a\u663e\u8457\u63d0\u9ad8\u505a\u51fa\u9519\u8bef\u51b3\u7b56\u7684\u6982\u7387\uff0c\u8fd8\u53ef\u80fd\u524a\u5f31\u6211\u4eec\u5bf9\u9ad8\u8d28\u91cf\u4fe1\u606f\u7684\u654f\u611f\u5ea6\u3002\u800c\u4f18\u8d28\u7684\u4fe1\u606f\u8f93\u5165\uff0c\u662f\u63d0\u5347\u8ba4\u77e5\u3001\u505a\u51fa\u6b63\u786e\u51b3\u7b56\u7684\u57fa\u7840\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u503c\u5f97\u6df1\u5165\u601d\u8003\u7684\u95ee\u9898\u662f\uff1a\u5982\u4f55\u83b7\u53d6\u9ad8\u8d28\u91cf\u4fe1\u606f\uff1f</p>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/info/#_1","title":"\u7b56\u7565","text":"<p>\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230\uff0c\u65f6\u95f4\u662f\u6709\u9650\u7684\uff0c\u63d0\u5347\u4fe1\u606f\u8f93\u5165\u8d28\u91cf\u7684\u5173\u952e\u5728\u4e8e\u51cf\u5c11\u4f4e\u8d28\u91cf\u7684\u4fe1\u606f\u6765\u6e90\u3002</p> <ol> <li> <p>\u901a\u8fc7\u6548\u5ea6\u6d4b\u8bd5\uff08\u8212\u9002\u5ea6\u3001\u4fe1\u5ea6\u3001\u6548\u5ea6\uff09\u7504\u522b\u4fe1\u606f\u8d28\u91cf\uff1a</p> <ul> <li>\u8bb8\u591a\u8ba9\u6211\u4eec\u611f\u5230\u8212\u9002\u7684\u4fe1\u606f\uff0c\u5f80\u5f80\u4f1a\u88ab\u9ed8\u8ba4\u8d4b\u4e88\u8f83\u9ad8\u7684\u4fe1\u5ea6\u548c\u6548\u5ea6\u3002\u4f46\u5f53\u6211\u4eec\u5bf9\u67d0\u4e2a\u89c2\u70b9\u9ad8\u5ea6\u8ba4\u53ef\u65f6\uff0c\u9700\u8b66\u60d5\u662f\u5426\u53d7\u5230\u60c5\u7eea\u717d\u52a8\u3002</li> <li>\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u8bc4\u4f30\u4fe1\u606f\u7684\u4fe1\u5ea6\u3002\u5982\u679c\u67d0\u6761\u4fe1\u606f\u65e0\u6cd5\u5728\u591a\u4e2a\u72ec\u7acb\u6765\u6e90\u4e2d\u5f97\u5230\u9a8c\u8bc1\uff0c\u90a3\u5b83\u5927\u6982\u7387\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u800c\u4e0d\u5177\u5907\u4fe1\u5ea6\u7684\u4fe1\u606f\u5fc5\u7136\u4e0d\u5177\u5907\u6548\u5ea6\u3002</li> <li>\u5177\u5907\u4fe1\u5ea6\u7684\u4fe1\u606f\u4e0d\u4e00\u5b9a\u6709\u4ef7\u503c\u3002\u8fd9\u5f80\u5f80\u662f\u4e00\u4e9b\u8425\u9500\u53f7\u7231\u73a9\u7684\u628a\u620f\uff0c\u4ec0\u4e48\u5341\u4e2a\u4f60\u80af\u5b9a\u4e0d\u77e5\u9053\u7684\u5c0f\u77e5\u8bc6\u3002</li> <li>\u5f53\u4fe1\u606f\u6765\u6e90\u4e8e\u4e2a\u4eba\u65f6\uff0c\u53ef\u4ee5\u5bf9\u5176\u80cc\u666f\u3001\u4e13\u4e1a\u80fd\u529b\u8fdb\u884c\u57fa\u672c\u8003\u5bdf\uff0c\u4ee5\u5224\u65ad\u5176\u53ef\u9760\u6027\u3002</li> </ul> </li> <li> <p>\u51cf\u5c11\u751a\u81f3\u5b8c\u5168\u907f\u514d\u88ab\u52a8\u83b7\u53d6\uff1a</p> <ul> <li>\u6253\u5f00\u5fae\u535a\u3001\u6296\u97f3\u3001B \u7ad9\u3001\u5c0f\u7ea2\u4e66\u8fd9\u7c7b\u8f6f\u4ef6\u65f6\uff0c\u7b97\u6cd5\u63a8\u8350\u7684\u901a\u5e38\u662f\u5927\u4f17\u504f\u597d\u7684\u5185\u5bb9\uff0c\u800c\u8fd9\u4e9b\u5185\u5bb9\u5f80\u5f80\u5177\u6709\u9ad8\u5a31\u4e50\u6027\u548c\u5f3a\u717d\u52a8\u6027\uff0c\u5374\u7f3a\u4e4f\u6df1\u5ea6\u548c\u4ef7\u503c\u3002</li> <li>\u957f\u671f\u4f9d\u8d56\u7b97\u6cd5\u63a8\u8350\uff0c\u5fc5\u7136\u65e0\u6cd5\u83b7\u53d6\u4f18\u8d28\u4fe1\u606f\u3002\u5982\u679c\u603b\u662f\u88ab\u52a8\u83b7\u53d6\uff0c\u90a3\u4e48\u770b\u4e0d\u89c1\u4f18\u8d28\u4fe1\u606f\u5c31\u6210\u4e3a\u4e86\u4e00\u79cd\u6570\u5b66\u4e0a\u7684\u5fc5\u7136\u3002</li> </ul> </li> <li> <p>\u4e3b\u52a8\u83b7\u53d6\uff1a</p> <ul> <li>\u4e3b\u52a8\u83b7\u53d6\u4fe1\u606f\u662f\u4e00\u79cd\u9700\u6c42\u9a71\u52a8\u7684\u884c\u4e3a\uff0c\u6709\u52a9\u4e8e\u964d\u4f4e\u4fe1\u606f\u7684\u968f\u673a\u6027\uff0c\u63d0\u9ad8\u4fe1\u606f\u7684\u53ef\u63a7\u6027\u548c\u8d28\u91cf\u3002</li> <li>\u4e0d\u8bba\u4fe1\u606f\u5185\u5316\u7684\u6210\u672c\u9ad8\u4f4e\uff0c\u9700\u6c42\u5bfc\u5411\u7684\u4fe1\u606f\u81f3\u5c11\u4e0d\u4f1a\u5bf9\u4f60\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u3002</li> </ul> </li> <li> <p>\u62e9\u4f18\u83b7\u53d6\uff1a</p> <ul> <li>\u59cb\u7ec8\u9009\u62e9\u83b7\u53d6\u4fe1\u606f\u7684\u6700\u4f73\u9014\u5f84\u3002\u4f8b\u5982\uff0c\u4f60\u4e0d\u80fd\u6307\u671b\u901a\u8fc7\u5237\u6296\u97f3\u6765\u5b66\u4e60--\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u53bb\u5404\u79cd\u77e5\u8bc6\u5e73\u53f0\u5462\uff1f</li> </ul> </li> <li> <p>\u4e0d\u6392\u65a5\u77e5\u8bc6\u4ed8\u8d39\uff1a</p> <ul> <li>\u4e00\u4e9b\u9ad8\u8d28\u91cf\u7684\u535a\u5ba2\u3001\u671f\u520a\u548c\u8bfe\u7a0b\u53ef\u80fd\u9700\u8981\u4ed8\u8d39\uff0c\u800c\u8fd9\u4e9b\u5185\u5bb9\u901a\u5e38\u7ecf\u8fc7\u4e13\u4e1a\u6574\u7406\u548c\u7b5b\u9009\uff0c\u6216\u8005\u5305\u542b\u8f83\u9ad8\u7684\u4fe1\u606f\u58c1\u5792\uff0c\u80fd\u63d0\u4f9b\u66f4\u6709\u4ef7\u503c\u7684\u4fe1\u606f\u3002</li> </ul> </li> </ol>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/info/#_2","title":"\u6784\u5efa\u9ad8\u6548\u7684\u4fe1\u606f\u83b7\u53d6\u7cfb\u7edf","text":"<p>\u6267\u884c\u4e0a\u8ff0\u7b56\u7565\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4f60\u4f1a\u9010\u6e10\u5efa\u7acb\u8d77\u4e00\u5957\u5e38\u7528\u7684\u4fe1\u606f\u6e90\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u6821\u5185\u8d44\u8baf\uff1aCC98\u3001\u6735\u6735\u3001\u5b66\u957f\u5b66\u59d0</li> <li>\u8ba1\u7b97\u673a\u6280\u672f\uff1aStack Overflow\u3001CSDN\u3001GitHub</li> <li>\u5176\u4ed6\u4e13\u4e1a\u9886\u57df\uff1a\u6743\u5a01\u671f\u520a\u3001\u5b66\u672f\u6570\u636e\u5e93</li> </ul> <p>\u5f53\u4f60\u9700\u8981\u67d0\u7c7b\u4fe1\u606f\u65f6\uff0c\u53ef\u4ee5\u4f18\u5148\u5728\u79ef\u6512\u7684\u76f8\u5173\u4fe1\u606f\u6e90\u5185\u68c0\u7d22.</p>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/info/#_3","title":"\u6211\u7684\u5b9e\u8df5\u7ecf\u9a8c","text":"<ul> <li>\u4e0d\u6f2b\u65e0\u76ee\u7684\u5730\u5237\u77ed\u89c6\u9891\uff1a\u8bf4\u96be\u542c\u70b9\uff0c\u65e0\u5e8f\u83b7\u53d6\u4fe1\u606f\u5728\u6211\u770b\u6765\u65e0\u5f02\u4e8e<sub>~\u5403*</sub>~\u3002</li> <li>\u4f18\u5316\u670b\u53cb\u5708\u548c\u516c\u4f17\u53f7\u8ba2\u9605\uff1a\u5927\u591a\u6570\u4eba\u5206\u4eab\u7684\u4fe1\u606f\u4e0e\u4e2a\u4eba\u9700\u6c42\u65e0\u5173\uff0c\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u5c4f\u853d\u6216\u53d6\u5173\u3002</li> <li>\u5173\u6ce8\u5c0f\u4f17\u5708\u5b50\uff1a\u5c0f\u4f17\u5708\u5b50\u901a\u5e38\u5177\u5907\u4e00\u5b9a\u7684\u95e8\u69db\uff0c\u80fd\u6709\u6548\u8fc7\u6ee4\u6389\u4f4e\u8d28\u91cf\u4fe1\u606f\u3002\u4e4b\u524d\u52a0\u5165\u7684\u4e00\u4e2a\u5173\u4e8e\u8fa9\u8bba\u8d5b\u7684\u7fa4\u804a\u8ba8\u8bba\u6c1b\u56f4\u5947\u597d\u65e0\u6bd4\uff0c\u7ecf\u5e38\u80fd\u5b66\u4e60\u5230\u4e00\u4e9b\u6df1\u523b\u7684\u89c1\u89e3\u548c\u8868\u8fbe\u7684\u6280\u5de7\u3002\u53e6\u5916\u5206\u4eab\u4e00\u4e2a\u8bba\u575b--Lesswrong</li> </ul>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/info/#_4","title":"\u5176\u4ed6\u5efa\u8bae","text":"<ul> <li>\u4e0d\u8981\u8fc7\u5ea6\u7ea0\u7ed3\u662f\u5426\u9009\u62e9\u4e86\u6700\u4f73\u7684\u4fe1\u606f\u6e20\u9053\uff0c\u7ecf\u8fc7\u9002\u5f53\u659f\u914c\u5373\u53ef\u3002\u53ef\u4ee5\u53c2\u8003\u9ea6\u7a57\u7406\u8bba,\u8fd9\u662f\u4e00\u4e2a\u8ba9\u6211\u53d7\u76ca\u7ec8\u8eab\u7684\u65b9\u6cd5\u8bba(\u8fd8\u8bb0\u5f97\u4e00\u6b21\u89c1\u5230\u8fd9\u4e2a\u4e1c\u897f\u662f\u5728\u6570\u5b66\u9898\u578b\u5927\u6539\u4e4b\u540e\u7684\u67d0\u4e00\u5957\u6a21\u62df\u5377)</li> </ul>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/info/#reference","title":"Reference","text":"<ul> <li>\u5982\u4f55\u63d0\u9ad8\u4fe1\u606f\u83b7\u53d6\u8d28\u91cf\uff1f</li> <li>\u5982\u4f55\u5efa\u7acb\u81ea\u5df1\u7684\u4fe1\u606f\u7b5b\u9009\u4f53\u7cfb\uff1f</li> <li>wnc \u7684 \u5496\u5561\u9986 -- \u4fe1\u606f</li> </ul>","tags":["\u4fe1\u606f"]},{"location":"Blogs/posts/socialthink/","title":"\u4e00\u6bb5\u5173\u7cfb\u53d8\u5316\u5e26\u7ed9\u6211\u7684\u601d\u8003","text":"<code>#\u793e\u4ea4</code>","tags":["\u793e\u4ea4"]},{"location":"Blogs/posts/socialthink/#_1","title":"\u8bb0\u4e00\u6bb5\u5173\u7cfb\u53d8\u5316\u5e26\u7ed9\u6211\u7684\u601d\u8003","text":"<p> \u7ea6 1004 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>\u67d0\u5929\uff0c\u4e00\u4f4d\u670b\u53cb\u7ed9\u6211\u53d1\u6d88\u606f\uff0c\u5927\u81f4\u610f\u601d\u662f\uff1a\u201c\u6211\u770b\u5230\u4f60\u7684\u535a\u5ba2\u4e86\uff0c\u4f60\u73b0\u5728\u597d\u5389\u5bb3\uff0c\u6211\u6709\u70b9\u81ea\u5351\uff0c\u611f\u89c9\u6211\u4eec\u5df2\u7ecf\u4e0d\u662f\u4e00\u4e2a level\u4e86\u3002\u201d</p> <p>\u6211\u968f\u624b\u56de\u590d\u4e86\u51e0\u4e2a\u8868\u60c5\uff0c\u5e76\u6ca1\u6709\u591a\u60f3\uff0c\u4ee5\u4e3a\u53ea\u662f\u548c\u4ee5\u524d\u4e00\u6837\u7684\u968f\u610f\u8c03\u4f83\u3002\u7136\u800c\uff0c\u4ece\u90a3\u4e4b\u540e\uff0c\u6211\u4eec\u4e4b\u95f4\u539f\u672c\u5b09\u76ae\u7b11\u8138\u3001\u65e0\u8bdd\u4e0d\u8c08\u7684\u4ea4\u6d41\u6a21\u5f0f\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\u3002\u6211\u53ef\u4ee5\u611f\u89c9\u5230\u4ed6\u6709\u610f\u6216\u65e0\u610f\u5730\u653e\u4f4e\u4e86\u81ea\u5df1\u7684\u59ff\u6001\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u6211\u603b\u89c9\u5f97\u81ea\u5df1\u8bf4\u7684\u8bdd\u50cf\u5728\u8bf4\u6559\uff0c\u8fd9\u8ba9\u6211\u5341\u5206\u4e0d\u81ea\u7136\uff0c\u53ef\u6211\u4eec\u660e\u660e\u662f\u5f88\u597d\u7684\u670b\u53cb\u3002</p> <p>\u4e0d\u4ec5\u662f\u4ea4\u6d41\u65b9\u5f0f\u7684\u53d8\u5316\uff0c\u6211\u4eec\u7684\u4ea4\u6d41\u9891\u7387\u4e5f\u660e\u663e\u4e0b\u964d\u4e86\u3002\u8fc7\u53bb\uff0c\u4ed6\u4f1a\u968f\u53e3\u548c\u6211\u804a\u4e9b\u7410\u788e\u7684\u8bdd\u9898\uff0c\u6bd4\u5982\u201c\u8fd9\u8001\u5e08\u8bb2\u8bdd\u771f\u9006\u5929\u201d\u6216\u8005\u201c\u8fd9\u9898\u9634\u7684\u6ca1\u8fb9\u4e86\u201d\u6700\u8fd1\u5374\u5f88\u5c11\u518d\u89c1\u5230\u8fd9\u6837\u7684\u5bf9\u8bdd\u3002</p> <p>\u6211\u4e00\u76f4\u77e5\u9053\uff0c\u81ea\u5df1\u4e0a\u5927\u5b66\u540e\u7684\u793e\u4ea4\u6a21\u5f0f\u672c\u8eab\u5c31\u4e0d\u5065\u5eb7\uff0c\u51e0\u4e4e\u6ca1\u6709\u53d1\u5c55\u4efb\u4f55\u6df1\u5c42\u6b21\u7684\u793e\u4ea4\u5173\u7cfb\uff0c\u5927\u591a\u6570\u4ea4\u6d41\u90fd\u53ea\u662f\u6d45\u5c1d\u8f84\u6b62\u3002\u56e0\u6b64\uff0c\u6211\u683c\u5916\u73cd\u60dc\u73b0\u6709\u7684\u670b\u53cb\u3002\u800c\u8fd9\u6bb5\u5173\u7cfb\u7684\u53d8\u5316\u8ba9\u6211\u610f\u8bc6\u5230\uff0c\u6211\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u884c\u52a8\u3002</p> <p>\u4ece\u539f\u56e0\u6765\u770b\uff0c\u5176\u5b9e\u5e76\u4e0d\u96be\u7406\u89e3\u3002\u6211\u81ea\u5df1\u4e5f\u66fe\u7ecf\u5386\u8fc7\u7c7b\u4f3c\u7684\u5fc3\u7406\u72b6\u6001\uff0c\u672c\u8d28\u4e0a\u662f\u6210\u957f\u901f\u5ea6\u7684\u4e0d\u5bf9\u7b49\u5e26\u6765\u7684\u5fc3\u7406\u843d\u5dee\u3002\u4ed6\u81ea\u5c0a\u5fc3\u8f83\u5f3a\uff0c\u53ef\u80fd\u62c5\u5fc3\u81ea\u5df1\u8bf4\u7684\u8bdd\u201c\u6c34\u5e73\u4e0d\u591f\u201d\uff0c\u6216\u8005\u5bb3\u6015\u663e\u5f97\u5e7c\u7a1a\u3002\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u6211\u6839\u672c\u4e0d\u4f1a\u4ecb\u610f\u8fd9\u4e9b\u3002</p> <p>\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u540e\uff0c\u6211\u9009\u62e9\u76f4\u63a5\u548c\u4ed6\u804a\u804a\u6211\u4eec\u7684\u5173\u7cfb\u53d8\u5316\u3002\u6211\u7528\u4e00\u53e5\u201c\u6700\u8fd1\u548b\u56de\u4e8b\u554a\uff0c\u611f\u89c9\u4f60\u90fd\u4e0d\u4f1a\u8bf4\u8bdd\u4e86\u201d\u4f5c\u4e3a\u5f00\u573a\uff0c\u5f88\u987a\u5229\u5730\u8868\u8fbe\u4e86\u6211\u7684\u60f3\u6cd5\u3002\u4ea4\u6d41\u4e4b\u540e\uff0c\u6211\u89c9\u5f97\u6211\u4eec\u7684\u5173\u7cfb\u5e94\u8be5\u4f1a\u6709\u6240\u6539\u5584\u3002</p> <p>\u5bf9\u4e8e\u90a3\u4e9b\u5bb9\u6613\u9677\u5165\u201c\u4e0b\u4f4d\u8005\u82e6\u607c\u201d\uff08\u6682\u4e14\u8fd9\u4e48\u547d\u540d\uff09\u7684\u4eba\uff0c\u6211\u60f3\u8bf4\uff0c\u4e0d\u7ba1\u548c\u8c01\u4ea4\u6d41\uff0c\u90fd\u5e94\u8be5\u628a\u81ea\u5df1\u653e\u5728\u4e00\u4e2a\u5e73\u7b49\u7684\u5730\u4f4d\u3002\u9996\u5148\uff0c\u523b\u610f\u8d2c\u4f4e\u81ea\u5df1\u6765\u62ac\u9ad8\u522b\u4eba\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5148\u5165\u4e3a\u4e3b\u7684\u504f\u89c1\uff0c\u6216\u8bb8\u5bf9\u65b9\u6839\u672c\u4e0d\u4f1a\u5728\u610f\u4f60\u6240\u8c13\u7684\u201c\u5dee\u8ddd\u201d\u3002\u5176\u6b21\uff0c\u4ee5\u4e00\u79cd\u4f4e\u59ff\u6001\u53bb\u6c9f\u901a\uff0c\u5f80\u5f80\u4f1a\u5bfc\u81f4\u6c9f\u901a\u6548\u7387\u4e0b\u964d\u3002\u5982\u679c\u4e0d\u80fd\u8868\u73b0\u771f\u5b9e\u7684\u81ea\u5df1\uff0c\u53c8\u5982\u4f55\u53d1\u73b0\u95ee\u9898\u5e76\u4e0d\u65ad\u8fed\u4ee3\u63d0\u5347\u5462\uff1f\u5982\u679c\u4f60\u89c9\u5f97\u5bf9\u65b9\u7684\u6001\u5ea6\u786e\u5b9e\u8ba9\u4f60\u611f\u5230\u4e0d\u9002\uff0c\u90a3\u4f60\u4e5f\u503c\u5f97\u601d\u8003\u2014\u2014\u8fd9\u4e2a\u4eba\u771f\u7684\u503c\u5f97\u6df1\u4ea4\u5417\uff1f</p> <p>\u540c\u6837\u5730\uff0c\u82e5\u56e0\u4e3a\u81ea\u5df1\u5728\u67d0\u4e9b\u65b9\u9762\u80fd\u529b\u3001\u8ba4\u77e5\u6216\u773c\u754c\u4f18\u4e8e\u5bf9\u65b9\uff0c\u5c31\u81ea\u89c9\u5904\u4e8e\u201c\u4e0a\u4f4d\u8005\u201d\u7684\u59ff\u6001\uff0c\u4e5f\u5e76\u975e\u5065\u5eb7\u7684\u505a\u6cd5\u3002\u957f\u671f\u5982\u6b64\uff0c\u793e\u4ea4\u5708\u5c42\u6216\u8bb8\u4f1a\u4e0d\u65ad\u4e0a\u5347\uff0c\u4f46\u5374\u96be\u4ee5\u771f\u6b63\u62d3\u5c55\uff0c\u751a\u81f3\u53ef\u80fd\u5bfc\u81f4\u5708\u5c42\u7684\u56fa\u5316\u3002</p> <p>\u5199\u5230\u8fd9\u91cc\uff0c\u6211\u53c8\u8054\u60f3\u5230\u73b0\u5728\u8bb8\u591a\u793e\u4ea4\u5e73\u53f0\u4e0a\u6076\u81ed\u7684\u8bc4\u8bba\u98ce\u6c14\u3002\u5f88\u591a\u4eba\u770b\u5230\u522b\u4eba\u53d1\u8868\u89c2\u70b9\u65f6\uff0c\u7b2c\u4e00\u53cd\u5e94\u4e0d\u662f\u601d\u8003\u89c2\u70b9\u672c\u8eab\u662f\u5426\u5408\u7406\uff0c\u800c\u662f\u5148\u53bb\u5ba1\u89c6\u5bf9\u65b9\u7684\u80cc\u666f\uff0c\u7136\u540e\u518d\u4e3b\u89c2\u5224\u65ad\u4ed6\u662f\u5426\u201c\u6709\u8d44\u683c\u201d\u53d1\u8868\u610f\u89c1\u3002\u5982\u679c\u5bf9\u65b9\u7684\u80cc\u666f\u7b26\u5408\u9884\u671f\uff0c\u5c31\u9009\u62e9\u65e0\u89c6\uff0c\u5fc3\u91cc\u53ef\u80fd\u60f3\u7684\u662f\u201c\u54e6\uff0c\u4f60\u5f88\u5f3a\uff0c\u8bf4\u5427\u201d\uff1b\u4f46\u5982\u679c\u89c9\u5f97\u5bf9\u65b9\u201c\u8d44\u5386\u4e0d\u591f\u201d\uff0c\u5c31\u4f1a\u5f00\u59cb\u653b\u51fb\uff0c\u6bd4\u5982\u201c\u73a9\u539f\u795e\u7684\uff1f\u90a3\u6ca1\u4e8b\u4e86\u201d\u201c\u4f60\u7684\u5f53\u52a1\u4e4b\u6025\u662f\u5148\u628a\u4f5c\u4e1a\u5199\u5b8c\u201d\u3002\u6211\u5f88\u8be7\u5f02\uff0c\u4ec0\u4e48\u65f6\u5019\u8d77\uff0c\u53ea\u6709\u80cc\u666f\u8db3\u591f\u5f3a\u7684\u4eba\u624d\u914d\u53d1\u8868\u610f\u89c1\u4e86\uff1f</p> <p>\u6211\u89c9\u5f97\u5065\u5eb7\u7684\u793e\u4ea4\u5173\u7cfb\u5e94\u8be5\u57fa\u4e8e\u4eba\u4e0e\u4eba\u4e4b\u95f4\u5e73\u7b49\u7684\u4e92\u52a8\uff0c\u800c\u4e0d\u8be5\u6709\u201c\u4e0a\u4f4d\u8005\u201d\u4e0e\u201c\u4e0b\u4f4d\u8005\u201d\u4e4b\u5206\u3002\u505a\u5230\u5e73\u7b49\u4ea4\u6d41\uff0c\u624d\u80fd\u5efa\u7acb\u66f4\u52a0\u5065\u5eb7\u3001\u6df1\u5165\u7684\u5173\u7cfb'_'\u3002</p>","tags":["\u793e\u4ea4"]},{"location":"ai/","title":"Index","text":""},{"location":"ai/#computer-science","title":"Computer Science","text":"Ng-Machine Learning          <ul> <li> \u8bfe\u7a0b\u7b14\u8bb0  4948  306  20 mins              1742825051 </li> </ul> Deep Learning          <ul> <li> \u673a\u5668\u5b66\u4e60\u8865\u5145  1120  4 mins              1744291514 </li> </ul> prompt          <ul> <li> \u5434\u6069\u8fbe Prompt_Engineering  1612  166  7 mins              1742177197 </li> </ul> Tools          <ul> <li> Jupyter notebook \u5feb\u6377\u952e  508  2 mins              1744291489 </li> <li> Numpy  536  119  3 mins              1741611781 </li> </ul>"},{"location":"ai/aitools/jupyter_hotkey/","title":"Jupyter hotkey","text":"<code>#tools</code>","tags":["tools"]},{"location":"ai/aitools/jupyter_hotkey/#jupyter-notebook","title":"Jupyter notebook \u5feb\u6377\u952e","text":"<p> \u7ea6 536 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>","tags":["tools"]},{"location":"ai/aitools/jupyter_hotkey/#esc","title":"\u547d\u4ee4\u6a21\u5f0f (\u6309\u952e Esc \u5f00\u542f)","text":"<ul> <li>Enter : \u8f6c\u5165\u7f16\u8f91\u6a21\u5f0f</li> <li>Shift-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e2a\u5355\u5143</li> <li>Ctrl-Enter : \u8fd0\u884c\u672c\u5355\u5143</li> <li>Alt-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u5176\u4e0b\u63d2\u5165\u65b0\u5355\u5143</li> <li>Y : \u5355\u5143\u8f6c\u5165\u4ee3\u7801\u72b6\u6001</li> <li>M :\u5355\u5143\u8f6c\u5165markdown\u72b6\u6001</li> <li>R : \u5355\u5143\u8f6c\u5165raw\u72b6\u6001</li> <li>1 : \u8bbe\u5b9a 1 \u7ea7\u6807\u9898</li> <li>2 : \u8bbe\u5b9a 2 \u7ea7\u6807\u9898</li> <li>3 : \u8bbe\u5b9a 3 \u7ea7\u6807\u9898</li> <li>4 : \u8bbe\u5b9a 4 \u7ea7\u6807\u9898</li> <li>5 : \u8bbe\u5b9a 5 \u7ea7\u6807\u9898</li> <li>6 : \u8bbe\u5b9a 6 \u7ea7\u6807\u9898</li> <li>Up : \u9009\u4e2d\u4e0a\u65b9\u5355\u5143</li> <li>K : \u9009\u4e2d\u4e0a\u65b9\u5355\u5143</li> <li>Down : \u9009\u4e2d\u4e0b\u65b9\u5355\u5143</li> <li>J : \u9009\u4e2d\u4e0b\u65b9\u5355\u5143</li> <li>Shift-K : \u6269\u5927\u9009\u4e2d\u4e0a\u65b9\u5355\u5143</li> <li>Shift-J : \u6269\u5927\u9009\u4e2d\u4e0b\u65b9\u5355\u5143</li> <li>A : \u5728\u4e0a\u65b9\u63d2\u5165\u65b0\u5355\u5143</li> <li>B : \u5728\u4e0b\u65b9\u63d2\u5165\u65b0\u5355\u5143</li> <li>X : \u526a\u5207\u9009\u4e2d\u7684\u5355\u5143</li> <li>C : \u590d\u5236\u9009\u4e2d\u7684\u5355\u5143</li> <li>Shift-V : \u7c98\u8d34\u5230\u4e0a\u65b9\u5355\u5143</li> <li>V : \u7c98\u8d34\u5230\u4e0b\u65b9\u5355\u5143</li> <li>Z : \u6062\u590d\u5220\u9664\u7684\u6700\u540e\u4e00\u4e2a\u5355\u5143</li> <li>D,D : \u5220\u9664\u9009\u4e2d\u7684\u5355\u5143</li> <li>Shift-M : \u5408\u5e76\u9009\u4e2d\u7684\u5355\u5143</li> <li>Ctrl-S : \u6587\u4ef6\u5b58\u76d8</li> <li>S : \u6587\u4ef6\u5b58\u76d8</li> <li>L : \u8f6c\u6362\u884c\u53f7</li> <li>O : \u8f6c\u6362\u8f93\u51fa</li> <li>Shift-O : \u8f6c\u6362\u8f93\u51fa\u6eda\u52a8</li> <li>Esc : \u5173\u95ed\u9875\u9762</li> <li>Q : \u5173\u95ed\u9875\u9762</li> <li>H : \u663e\u793a\u5feb\u6377\u952e\u5e2e\u52a9</li> <li>I,I : \u4e2d\u65adNotebook\u5185\u6838</li> <li>0,0 : \u91cd\u542fNotebook\u5185\u6838</li> <li>Shift : \u5ffd\u7565</li> <li>Shift-Space : \u5411\u4e0a\u6eda\u52a8</li> <li>Space : \u5411\u4e0b\u6eda\u52a8</li> </ul>","tags":["tools"]},{"location":"ai/aitools/jupyter_hotkey/#enter","title":"\u7f16\u8f91\u6a21\u5f0f ( Enter \u952e\u542f\u52a8)","text":"<ul> <li>Tab : \u4ee3\u7801\u8865\u5168\u6216\u7f29\u8fdb</li> <li>Shift-Tab : \u63d0\u793a</li> <li>Ctrl-] : \u7f29\u8fdb</li> <li>Ctrl-[ : \u89e3\u9664\u7f29\u8fdb</li> <li>Ctrl-A : \u5168\u9009</li> <li>Ctrl-Z : \u590d\u539f</li> <li>Ctrl-Shift-Z : \u518d\u505a</li> <li>Ctrl-Y : \u518d\u505a</li> <li>Ctrl-Home : \u8df3\u5230\u5355\u5143\u5f00\u5934</li> <li>Ctrl-Up : \u8df3\u5230\u5355\u5143\u5f00\u5934</li> <li>Ctrl-End : \u8df3\u5230\u5355\u5143\u672b\u5c3e</li> <li>Ctrl-Down : \u8df3\u5230\u5355\u5143\u672b\u5c3e</li> <li>Ctrl-Left : \u8df3\u5230\u5de6\u8fb9\u4e00\u4e2a\u5b57\u9996</li> <li>Ctrl-Right : \u8df3\u5230\u53f3\u8fb9\u4e00\u4e2a\u5b57\u9996</li> <li>Ctrl-Backspace : \u5220\u9664\u524d\u9762\u4e00\u4e2a\u5b57</li> <li>Ctrl-Delete : \u5220\u9664\u540e\u9762\u4e00\u4e2a\u5b57</li> <li>Esc : \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f</li> <li>Ctrl-M : \u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f</li> <li>Shift-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u9009\u4e2d\u4e0b\u4e00\u5355\u5143</li> <li>Ctrl-Enter : \u8fd0\u884c\u672c\u5355\u5143</li> <li>Alt-Enter : \u8fd0\u884c\u672c\u5355\u5143\uff0c\u5728\u4e0b\u9762\u63d2\u5165\u4e00\u5355\u5143</li> <li>Ctrl-Shift-- : \u5206\u5272\u5355\u5143</li> <li>Ctrl-Shift-Subtract : \u5206\u5272\u5355\u5143</li> <li>Ctrl-S : \u6587\u4ef6\u5b58\u76d8</li> <li>Shift : \u5ffd\u7565</li> <li>Up : \u5149\u6807\u4e0a\u79fb\u6216\u8f6c\u5165\u4e0a\u4e00\u5355\u5143</li> <li>Down :\u5149\u6807\u4e0b\u79fb\u6216\u8f6c\u5165\u4e0b\u4e00\u5355\u5143</li> </ul>","tags":["tools"]},{"location":"ai/aitools/numpy/","title":"Numpy","text":"<code>#tools</code>","tags":["tools"]},{"location":"ai/aitools/numpy/#numpy","title":"Numpy","text":"<p> \u7ea6 564 \u4e2a\u5b57  119 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <ul> <li>\u4ecd\u5728\u63a2\u7d22\uff01</li> </ul>","tags":["tools"]},{"location":"ai/aitools/numpy/#_1","title":"\u5411\u91cf","text":"","tags":["tools"]},{"location":"ai/aitools/numpy/#_2","title":"\u521d\u59cb\u5316","text":"Python<pre><code># NumPy routines which allocate memory and fill arrays with value\na = np.zeros(4);                print(f\"np.zeros(4) :   a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\na = np.zeros((4,));             print(f\"np.zeros(4,) :  a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\na = np.random.random_sample(4); print(f\"np.random.random_sample(4): a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\n</code></pre> Text Only<pre><code>np.zeros(4) :   a = [0. 0. 0. 0.], a shape = (4,), a data type = float64\nnp.zeros(4,) :  a = [0. 0. 0. 0.], a shape = (4,), a data type = float64\nnp.random.random_sample(4): a = [0.16054681 0.65264985 0.98302218 0.29864795], a shape = (4,), a data type = float64\n</code></pre> Python<pre><code># NumPy routines which allocate memory and fill arrays with value but do not accept shape as input argument\na = np.arange(4.);              print(f\"np.arange(4.):     a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\na = np.random.rand(4);          print(f\"np.random.rand(4): a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\n</code></pre> Text Only<pre><code>np.arange(4.):     a = [0. 1. 2. 3.], a shape = (4,), a data type = float64\nnp.random.rand(4): a = [0.04467047 0.14854614 0.24949402 0.02417095], a shape = (4,), a data type = float64\n</code></pre> Python<pre><code># NumPy routines which allocate memory and fill with user specified values\na = np.array([5,4,3,2]);  print(f\"np.array([5,4,3,2]):  a = {a},     a shape = {a.shape}, a data type = {a.dtype}\")\na = np.array([5.,4,3,2]); print(f\"np.array([5.,4,3,2]): a = {a}, a shape = {a.shape}, a data type = {a.dtype}\")\n</code></pre> Text Only<pre><code>np.array([5,4,3,2]):  a = [5 4 3 2],     a shape = (4,), a data type = int64\nnp.array([5.,4,3,2]): a = [5. 4. 3. 2.], a shape = (4,), a data type = float64\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_3","title":"\u7d22\u5f15","text":"Python<pre><code>#vector indexing operations on 1-D vectors\na = np.arange(10)\nprint(a)\n\n#access an element\nprint(f\"a[2].shape: {a[2].shape} a[2]  = {a[2]}, Accessing an element returns a scalar\")\n\n# access the last element, negative indexes count from the end\nprint(f\"a[-1] = {a[-1]}\")\n\n#indexs must be within the range of the vector or they will produce and error\ntry:\n    c = a[10]\nexcept Exception as e:\n    print(\"The error message you'll see is:\")\n    print(e)\n</code></pre> Text Only<pre><code>[0 1 2 3 4 5 6 7 8 9]\na[2].shape: () a[2]  = 2, Accessing an element returns a scalar\na[-1] = 9\nThe error message you'll see is:\nindex 10 is out of bounds for axis 0 with size 10\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_4","title":"\u5207\u7247","text":"Python<pre><code>#vector slicing operations\na = np.arange(10)\nprint(f\"a         = {a}\")\n\n#access 5 consecutive elements (start:stop:step)\nc = a[2:7:1];     print(\"a[2:7:1] = \", c)\n\n# access 3 elements separated by two \nc = a[2:7:2];     print(\"a[2:7:2] = \", c)\n\n# access all elements index 3 and above\nc = a[3:];        print(\"a[3:]    = \", c)\n\n# access all elements below index 3\nc = a[:3];        print(\"a[:3]    = \", c)\n\n# access all elements\nc = a[:];         print(\"a[:]     = \", c)\n</code></pre> Text Only<pre><code>a         = [0 1 2 3 4 5 6 7 8 9]\na[2:7:1] =  [2 3 4 5 6]\na[2:7:2] =  [2 4 6]\na[3:]    =  [3 4 5 6 7 8 9]\na[:3]    =  [0 1 2]\na[:]     =  [0 1 2 3 4 5 6 7 8 9]\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_5","title":"\u4e00\u4e9b\u64cd\u4f5c","text":"Python<pre><code>a = np.array([1,2,3,4])\nprint(f\"a             : {a}\")\n# negate elements of a\nb = -a \nprint(f\"b = -a        : {b}\")\n\n# sum all elements of a, returns a scalar\nb = np.sum(a) \nprint(f\"b = np.sum(a) : {b}\")\n\nb = np.mean(a)\nprint(f\"b = np.mean(a): {b}\")\n\nb = a**2\nprint(f\"b = a**2      : {b}\")\n</code></pre> Text Only<pre><code>a             : [1 2 3 4]\nb = -a        : [-1 -2 -3 -4]\nb = np.sum(a) : 10\nb = np.mean(a): 2.5\nb = a**2      : [ 1  4  9 16]\n</code></pre> Python<pre><code>a = np.array([ 1, 2, 3, 4])\nb = np.array([-1,-2, 3, 4])\nprint(f\"Binary operators work element wise: {a + b}\")\n</code></pre> Text Only<pre><code>Binary operators work element wise: [0 0 6 8]\n</code></pre> Python<pre><code>#try a mismatched vector operation\nc = np.array([1, 2])\ntry:\n    d = a + c\nexcept Exception as e:\n    print(\"The error message you'll see is:\")\n    print(e)\n</code></pre> Text Only<pre><code>The error message you'll see is:\noperands could not be broadcast together with shapes (4,) (2,)\n</code></pre> Python<pre><code>a = np.array([1, 2, 3, 4])\n\n# multiply a by a scalar\nb = 5 * a \nprint(f\"b = 5 * a : {b}\")\n</code></pre> Text Only<pre><code>b = 5 * a : [ 5 10 15 20]\n</code></pre> Python<pre><code># test 1-D\na = np.array([1, 2, 3, 4])\nb = np.array([-1, 4, 3, 2])\nc = np.dot(a, b)\nprint(f\"NumPy 1-D np.dot(a, b) = {c}, np.dot(a, b).shape = {c.shape} \") \nc = np.dot(b, a)\nprint(f\"NumPy 1-D np.dot(b, a) = {c}, np.dot(a, b).shape = {c.shape} \")\n</code></pre> Text Only<pre><code>NumPy 1-D np.dot(a, b) = 24, np.dot(a, b).shape = () \nNumPy 1-D np.dot(b, a) = 24, np.dot(a, b).shape = ()\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_6","title":"\u5411\u91cf\u70b9\u4e58\u548c\u5faa\u73af\u65f6\u95f4\u6bd4\u8f83","text":"Text Only<pre><code>np.random.seed(1)\na = np.random.rand(10000000)  # very large arrays\nb = np.random.rand(10000000)\n\ntic = time.time()  # capture start time\nc = np.dot(a, b)\ntoc = time.time()  # capture end time\n\nprint(f\"np.dot(a, b) =  {c:.4f}\")\nprint(f\"Vectorized version duration: {1000*(toc-tic):.4f} ms \")\n\ntic = time.time()  # capture start time\nc = my_dot(a,b)\ntoc = time.time()  # capture end time\n\nprint(f\"my_dot(a, b) =  {c:.4f}\")\nprint(f\"loop version duration: {1000*(toc-tic):.4f} ms \")\n\ndel(a);del(b)  #remove these big arrays from memory\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_7","title":"\u77e9\u9635","text":"","tags":["tools"]},{"location":"ai/aitools/numpy/#_8","title":"\u521d\u59cb\u5316","text":"Python<pre><code>a = np.zeros((1, 5))                                       \nprint(f\"a shape = {a.shape}, a = {a}\")                     \n\na = np.zeros((2, 1))                                                                   \nprint(f\"a shape = {a.shape}, a = {a}\") \n\na = np.random.random_sample((1, 1))  \nprint(f\"a shape = {a.shape}, a = {a}\") \n</code></pre> Text Only<pre><code>a shape = (1, 5), a = [[0. 0. 0. 0. 0.]]\na shape = (2, 1), a = [[0.]\n [0.]]\na shape = (1, 1), a = [[0.44236513]]\n</code></pre> Python<pre><code># NumPy routines which allocate memory and fill with user specified values\na = np.array([[5], [4], [3]]);   print(f\" a shape = {a.shape}, np.array: a = {a}\")\na = np.array([[5],   # One can also\n              [4],   # separate values\n              [3]]); #into separate rows\nprint(f\" a shape = {a.shape}, np.array: a = {a}\")\n</code></pre>","tags":["tools"]},{"location":"ai/aitools/numpy/#_9","title":"\u7d22\u5f15","text":"Python<pre><code># NumPy routines which allocate memory and fill with user specified values\na = np.array([[5], [4], [3]]);   print(f\" a shape = {a.shape}, np.array: a = {a}\")\na = np.array([[5],   # One can also\n              [4],   # separate values\n              [3]]); #into separate rows\nprint(f\" a shape = {a.shape}, np.array: a = {a}\")\n</code></pre> Text Only<pre><code>a.shape: (3, 2), \na= [[0 1]\n [2 3]\n [4 5]]\n\na[2,0].shape:   (), a[2,0] = 4,     type(a[2,0]) = &lt;class 'numpy.int64'&gt; Accessing an element returns a scalar\n\na[2].shape:   (2,), a[2]   = [4 5], type(a[2])   = &lt;class 'numpy.ndarray'&gt;\n</code></pre> <ul> <li>\u5173\u4e8e reshape<ul> <li>2 \u8868\u793a\u5206\u5272\u6210\u4e8c\u7ef4\u5411\u91cf</li> <li>-1 \u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u884c\u6570</li> <li>\u8fd9\u91cc <code>reshape(-1,2)</code> \u7684\u6548\u679c\u548c <code>reshape(3,2)</code> \u76f8\u540c </li> </ul> </li> </ul>","tags":["tools"]},{"location":"ai/aitools/numpy/#_10","title":"\u5207\u7247","text":"Python<pre><code>#vector 2-D slicing operations\na = np.arange(20).reshape(-1, 10)\nprint(f\"a = \\n{a}\")\n\n#access 5 consecutive elements (start:stop:step)\nprint(\"a[0, 2:7:1] = \", a[0, 2:7:1], \",  a[0, 2:7:1].shape =\", a[0, 2:7:1].shape, \"a 1-D array\")\n\n#access 5 consecutive elements (start:stop:step) in two rows\nprint(\"a[:, 2:7:1] = \\n\", a[:, 2:7:1], \",  a[:, 2:7:1].shape =\", a[:, 2:7:1].shape, \"a 2-D array\")\n\n# access all elements\nprint(\"a[:,:] = \\n\", a[:,:], \",  a[:,:].shape =\", a[:,:].shape)\n\n# access all elements in one row (very common usage)\nprint(\"a[1,:] = \", a[1,:], \",  a[1,:].shape =\", a[1,:].shape, \"a 1-D array\")\n# same as\nprint(\"a[1]   = \", a[1],   \",  a[1].shape   =\", a[1].shape, \"a 1-D array\")\n</code></pre> Text Only<pre><code>a = \n[[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]]\na[0, 2:7:1] =  [2 3 4 5 6] ,  a[0, 2:7:1].shape = (5,) a 1-D array\na[:, 2:7:1] = \n [[ 2  3  4  5  6]\n [12 13 14 15 16]] ,  a[:, 2:7:1].shape = (2, 5) a 2-D array\na[:,:] = \n [[ 0  1  2  3  4  5  6  7  8  9]\n [10 11 12 13 14 15 16 17 18 19]] ,  a[:,:].shape = (2, 10)\na[1,:] =  [10 11 12 13 14 15 16 17 18 19] ,  a[1,:].shape = (10,) a 1-D array\na[1]   =  [10 11 12 13 14 15 16 17 18 19] ,  a[1].shape   = (10,) a 1-D array\n</code></pre>","tags":["tools"]},{"location":"ai/dl/dl/","title":"\u673a\u5668\u5b66\u4e60\u8865\u5145","text":"<code>#course_notes</code>","tags":["course_notes"]},{"location":"ai/dl/dl/#_1","title":"\u673a\u5668\u5b66\u4e60\u8fdb\u9636","text":"<p> \u7ea6 1148 \u4e2a\u5b57  16 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <ul> <li>\u5bf9\u8fd9\u7bc7\u7b14\u8bb0\u7684\u8865\u5145--Machine Learning</li> </ul>","tags":["course_notes"]},{"location":"ai/dl/dl/#_2","title":"\u6ed1\u52a8\u7a97\u53e3\u76ee\u6807\u68c0\u6d4b","text":"<p>\u4e0d\u540c\u5927\u5c0f\u65b9\u683c\u5747\u5300\u5207\u7247\uff0c\u68c0\u6d4b\u8fd9\u4e9b\u5207\u7247\u4e0a\u6709\u65e0\u6c7d\u8f66</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_3","title":"\u5377\u79ef\u5b9e\u73b0","text":"<p>\u4e0a\u8ff0\u7b97\u6cd5\uff0c\u5207\u7247\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u5bfc\u81f4\u8ba1\u7b97\u6027\u80fd\u4e25\u91cd\u6d6a\u8d39 \u6539\u8fdb\uff1a </p> <p>\u4ee5\u7b2c\u4e8c\u5e45\u56fe\u4e3a\u4f8b\uff0c\u6700\u540e\u5f97\u5230\u7684\u6bcf\u4e2a 1x1x4 \u7684\u5f20\u91cf\u5c31\u5305\u542b\u4e86\u56db\u4e2a\u4f4d\u7f6e\u7684\u56fe\u50cf\u4fe1\u606f</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#bouding-box","title":"Bouding Box \u9884\u6d4b","text":"","tags":["course_notes"]},{"location":"ai/dl/dl/#yolo","title":"YOLO","text":"<p>Means \"you only look once\"</p> <p>\u8bad\u7ec3\u96c6\uff1a\u628a\u56fe\u50cf\u5747\u5300\u5207\u7247\uff0c\u6807\u51fa\u5f85\u68c0\u6d4b\u76ee\u6807\u7684\u4e2d\u5fc3\uff0c\u6839\u636e\u4e2d\u5fc3\u786e\u8ba4\u56fe\u50cf\u5c5e\u4e8e\u54ea\u4e2a\u65b9\u683c\uff0c\u6807\u51fa\u8fb9\u6846\u6570\u636e\uff0c</p> <p>\u6784\u9020\u795e\u7ecf\u7f51\u7edc, \u4e0b\u56fe\u4e3a\u4f8b\uff0c\u6700\u540e\u8981\u5f97\u5230 3x3x8 \u7684\u5f20\u91cf</p> <p></p>","tags":["course_notes"]},{"location":"ai/dl/dl/#iou","title":"\u4ea4\u5e76\u6bd4 (IoU)","text":"<p>intersection over union</p> <p>\u5b9e\u9645\u9884\u6d4b\u65f6\uff0c\u5f80\u5f80\u4f1a\u5f97\u5230\u591a\u4e2a\u9884\u6d4b\u7ed3\u679c   IoU \u8ba1\u7b97\u7684\u662f\u8fb9\u754c\u6846\u4ea4\u96c6\u548c\u5e76\u96c6\u4e4b\u6bd4\uff0c\u901a\u5e38 IoU &gt;=0.5 \u8ba4\u4e3a\u68c0\u6d4b\u6709\u6548</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_4","title":"\u975e\u6781\u5927\u503c\u6291\u5236","text":"<p>\u76ee\u6807\uff1a\u786e\u4fdd YOLO \u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u53ea\u68c0\u6d4b\u4e00\u6b21</p> <p> \u5148\u627e\u51fa \\(P_{c}\\) \u6700\u9ad8\u7684\u8fb9\u6846\uff0c\u968f\u540e\u68c0\u67e5\u5176\u5b83\u7684\u8fb9\u754c\u6846\uff0c\u548c\u8fd9\u4e2a\u8fb9\u754c\u6846\u6709\u5f88\u5927\u7684\u4ea4\u5e76\u6bd4\u5e76\u4e14\u9ad8\u5ea6\u91cd\u53e0\u7684\u5176\u5b83\u8fb9\u754c\u6846\u88ab\u6291\u5236</p> <p>\u53e6\u5916\uff0c\u5982\u679c\u9700\u8981\u540c\u65f6\u68c0\u6d4b\u591a\u4e2a\u76ee\u6807\uff0c\u6700\u597d\u5206\u522b\u4f7f\u7528\u975e\u6781\u5927\u503c\u6291\u5236</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#anchor-boxes","title":"Anchor Boxes","text":"<p>\u76ee\u7684\uff1a\u8ba9 YOLO \u4e2d\u7684\u4e00\u4e2a\u683c\u5b50\u53ef\u4ee5\u68c0\u6d4b\u51fa\u591a\u4e2a\u5bf9\u8c61 \u65b9\u6cd5\uff1a\u6269\u5145\u5f20\u91cf\uff0c\u5982\u4e0b\u56fe  \u540c\u6837\u8fdb\u884c\u9608\u503c\u8fc7\u6ee4\uff0c\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u7136\u540e\u8f93\u51fa</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_5","title":"\u4eba\u8138\u8bc6\u522b","text":"<p>\u96be\u70b9\uff1a\u53ea\u6709\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c</p> <p>Siamase network  \u8ba1\u7b97\u8f93\u51fa\u5f20\u91cf\u7684\u5dee\u5f02\u5224\u65ad\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u4eba</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#triplet-loss","title":"Triplet Loss","text":"<p>\u635f\u5931\u51fd\u6570\uff1a </p> <p>$$ d(A,B) = \\mid\\mid(f(A)-f(B)\\mid\\mid^{2} $$ \u6210\u672c\u51fd\u6570\uff1a </p> \\[ \\mathcal{J} = -\\sum^{}_{} L(A,P,N) \\] <p>\u6211\u4eec\u5e0c\u671b\u5728\u6784\u5efa\u4e09\u5143\u7ec4\u8bad\u7ec3\u96c6\u7684\u65f6\u5019\u9009\u4e00\u4e9b\u66f4\u96be\u5224\u65ad\u7684\u4f8b\u5b50\uff0c\u63d0\u9ad8\u5b66\u4e60\u6548\u679c</p> <p>\u8fd9\u4e2a\u635f\u5931\u6709\u4ec0\u4e48\u7528\u5462\uff1a\u5728\u6d4b\u8bd5\u9636\u6bb5\uff0c\u6a21\u578b\u4f1a\u5c06\u8f93\u5165\u7684\u4eba\u8138\u56fe\u50cf\u6620\u5c04\u5230\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\uff08\u4eba\u8138\u5d4c\u5165\uff09\uff0c\u7136\u540e\u901a\u8fc7\u8ba1\u7b97\u8fd9\u4e2a\u5411\u91cf\u4e0e\u6570\u636e\u5e93\u4e2d\u5df2\u77e5\u7528\u6237\u7684\u7279\u5f81\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6765\u5224\u65ad\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u4eba\u3002</p> <p>\u5173\u7cfb\uff1a\u4e09\u5143\u635f\u5931\u5728\u8bad\u7ec3\u65f6\u4f18\u5316\u4e86\u8fd9\u4e2a\u7279\u5f81\u5411\u91cf\u7684\u7a7a\u95f4\u5e03\u5c40\uff0c\u4f7f\u5f97\u76f8\u540c\u4eba\u7684\u4eba\u8138\u7279\u5f81\u5411\u91cf\u5c3d\u91cf\u63a5\u8fd1\uff0c\u4e0d\u540c\u4eba\u7684\u4eba\u8138\u7279\u5f81\u5411\u91cf\u5c3d\u91cf\u8fdc\u79bb\u3002\u8fd9\u6837\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u8ddd\u79bb\u6bd4\u8f83\u51c6\u786e\u5730\u5224\u65ad\u4eba\u8138\u7684\u76f8\u4f3c\u5ea6\uff0c\u4ece\u800c\u5b9e\u73b0\u8bc6\u522b\u6216\u9a8c\u8bc1\u3002</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_6","title":"\u4e8c\u5206\u7c7b\u89e3\u51b3\u9762\u90e8\u8bc6\u522b","text":"<p>\u4e00\u5f20\u56fe\u80af\u5b9a\u6e05\u695a\u4e86 </p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_7","title":"\u98ce\u683c\u8fc1\u79fb","text":"<p>\u6210\u672c\u51fd\u6570\uff1a</p> <p>$$ J(G) = \\alpha J_{content}(C,G) + \\beta J_{style}(S,G) $$  \u6d41\u7a0b\uff1a\u968f\u673a\u521d\u59cb\u5316 G (generate)-&gt;\u68af\u5ea6\u4e0b\u964d\u6700\u5c0f\u5316 J(G)</p> <p>\u5185\u5bb9\u4ee3\u4ef7\u51fd\u6570\uff1a</p> <p>$$ J_{content}(C,G) =  \\frac{1}{4 \\times n_H \\times n_W \\times n_C}\\sum _{ \\text{all entries}} (a^{(C)} - a^{(G)})^2  $$ \u5982\u679c\u628a\u5185\u5bb9\u4ee3\u4ef7\u51fd\u6570\u653e\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u6d45\u5c42\u8ba1\u7b97\uff0c\u4f1a\u5bfc\u81f4\u9897\u7c92\u5ea6\u592a\u5c0f\uff0c\u53cd\u4e4b\u9897\u7c92\u5ea6\u592a\u5927\uff0c\u6240\u4ee5\u4e00\u822c\u5728\u4e2d\u7b49\u5c42\u6b21\u8fdb\u884c\u8bc4\u4f30</p> <p>\u98ce\u683c\u4ee3\u4ef7\u51fd\u6570(\u5355\u5c42):</p> <p>$$ J_{style}^{[l]}(S,G) = \\frac{1}{4 \\times {n_C}^2 \\times (n_H \\times n_W)^2} \\sum {i=1}^{n_C}\\sum}^{n_C}(G^{(S){ij} - G^{(G)})^2 $$ \u6bcf\u4e2a channel \u90fd\u5bf9\u5e94\u7740\u4e00\u79cd\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u53ea\u8981\u628a S \u548c G \u5206\u522b\u8ba1\u7b97\u98ce\u683c\u77e9\u9635\u5e76\u8fdb\u884c\u6bd4\u8f83</p> <p>\u591a\u5c42\u6574\u5408\uff1a</p> \\[ J_{style}(S,G) = \\sum_{l} \\lambda^{[l]} J^{[l]}_{style}(S,G) \\]","tags":["course_notes"]},{"location":"ai/dl/dl/#rnn","title":"RNN","text":"<p>\u8fd9\u91cc\u611f\u89c9\u56fe\u6bd4\u6587\u5b57\u7ba1\u7528 \u5efa\u7acb\u76f4\u89c9\uff1a\u3002RNN \u7684\u672c\u8d28\u662f \u8bb0\u5fc6\u4e0e\u9884\u6d4b\u7684\u5faa\u73af\u3002\u5b83\u901a\u8fc7\u4e0d\u65ad\u5730\u5c06\u5386\u53f2\u4fe1\u606f\u4f20\u9012\u5230\u4e0b\u4e00\u65f6\u95f4\u6b65\uff0c\u4ece\u800c\u589e\u5f3a\u4e86\u6a21\u578b\u7684\u8bb0\u5fc6\u80fd\u529b\uff0c\u80fd\u591f\u505a\u51fa\u57fa\u4e8e\u5386\u53f2\u7684\u66f4\u7cbe\u51c6\u7684\u9884\u6d4b\u3002 \u4e0b\u9762\u6765\u770b\u7ec6\u8282</p> <p>simple(standard) RNN </p> <p>\u6bcf\u4e00\u4e2a cell \u7684\u7ec6\u8282\u90e8\u5206 </p> <p>RNN \u7684\u53cd\u5411\u4f20\u64ad  \u5176\u5b83\u5404\u79cd\u5404\u6837\u7684\u6a21\u578b \u4e0d\u662f\u6240\u6709\u5e94\u7528\u90fd\u662f\u8f93\u5165\u8f93\u51fa\u5e8f\u5217\u76f8\u540c\u7684\uff0c\u7ffb\u8bd1-\u591a\u5bf9\u591a\uff0c\u6253\u5206-\u4e00\u5bf9\u591a </p>","tags":["course_notes"]},{"location":"ai/dl/dl/#lstm","title":"LSTM","text":"<p>\u957f\u77ed\u65f6\u8bb0\u5fc6(long short-term memory) \u4e3a\u4ec0\u4e48\u8981\u6709\u8fd9\u4e2a\u673a\u5236\uff1a\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u4f60\u9700\u8981\u6a21\u578b\u751f\u6210\u4e00\u6bb5\u82f1\u8bed\uff0c\u53ef\u80fd\u524d\u9762\u5df2\u6709\u7684\u4e3b\u8bed\u662f cats, \u82e5\u5e72\u5355\u8bcd\u4e4b\u540e\u9700\u8981\u751f\u6210 was \u6216\u8005 were\uff0c\u6b64\u65f6\u6a21\u578b\u6709\u9057\u5fd8\u7684\u53ef\u80fd (\u56e0\u4e3a\u76f8\u5dee\u592a\u8fdc\u4e86)\uff0c\u6b64\u65f6\u5f15\u5165 LSTM \u7684\u95e8\u673a\u5236\uff0c\u6765\u5e2e\u52a9\u6a21\u578b\u8bb0\u5fc6\u4e00\u4e9b\u91cd\u8981\u5185\u5bb9\u3002</p> <p></p> <p>LSTM \u7684\u524d\u5411\u4f20\u64ad </p>","tags":["course_notes"]},{"location":"ai/dl/dl/#brnn","title":"BRNN","text":"<p>\u7f3a\u70b9\u662f\u8981\u5168\u90e8\u8f93\u5165\u5b8c\u6210\u624d\u80fd\u5f97\u5230\u7ed3\u679c</p>","tags":["course_notes"]},{"location":"ai/dl/dl/#_8","title":"\u6df1\u5c42\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":"","tags":["course_notes"]},{"location":"ai/ml/wedml/","title":"\u8bfe\u7a0b\u7b14\u8bb0","text":"<code>#AI</code> <code>#course_notes</code>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#ng-machine-learning","title":"Ng-Machine learning \u8bfe\u7a0b\u7b14\u8bb0","text":"<p> \u7ea6 4976 \u4e2a\u5b57  306 \u884c\u4ee3\u7801  18 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p> <ul> <li>@start 2025.3.9  </li> <li>@end 2025.3.15  </li> <li>\u76f8\u5173\u8d44\u6e90  <ul> <li>\u8bfe\u7a0b\u89c6\u9891 </li> <li>\u8bfe\u7a0b\u4ed3\u5e93 </li> <li>\u5434\u6069\u8fbe\u300a\u673a\u5668\u5b66\u4e60\u300b\u8bfe\u7a0b\u7b14\u8bb0 </li> </ul> </li> <li>\u6211\u91c7\u7528\u7684\u65b9\u5f0f\u662f\u8bfe\u7a0b\u4ed3\u5e93 + vscode jupyter notebook plugin  </li> <li>\u653e\u4e2a\u6b63\u7248\u8bfe\u94fe\u63a5\uff1ahttps://www.coursera.org/specializations/machine-learning-introduction</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#0","title":"0 \u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60","text":"<ul> <li>\u673a\u5668\u5b66\u4e60<ul> <li>\u76d1\u7763\u5b66\u4e60 (supervised learning)</li> <li>\u65e0\u76d1\u7763\u5b66\u4e60 (unsupervised learning)</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_1","title":"\u76d1\u7763\u5b66\u4e60","text":"<ul> <li>\u76d1\u7763\u5b66\u4e60<ul> <li>\u56de\u5f52 (regression): \u901a\u8fc7\u8f93\u5165\u9884\u6d4b\u4e00\u4e2a\u8fde\u7eed\u503c (\u7ed3\u679c\u6709\u65e0\u9650\u591a\u4e2a\u53ef\u80fd)</li> <li>\u5206\u7c7b (classification): \u901a\u8fc7\u8f93\u5165\u9884\u6d4b\u4e00\u4e2a\u79bb\u6563\u503c (\u4ece\u6709\u9650\u7684\u53ef\u80fd\u4e2d\u9009\u62e9)</li> </ul> </li> <li>\u603b\u7ed3\uff1a\u6295\u5582\u7684\u6570\u636e\u96c6\u6709\u6807\u7b7e\uff0c\u8ba9\u673a\u5668\u4ece\u4e2d\u5b66\u4e60\u6620\u5c04\u5173\u7cfb</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_2","title":"\u65e0\u76d1\u7763\u5b66\u4e60","text":"<ul> <li>\u6295\u5582\u7684\u6570\u636e\u96c6\u6ca1\u6709\u6807\u7b7e\uff0c\u673a\u5668\u9760\u6570\u636e\u7684\u7279\u5f81\u5206\u6790\u6a21\u5f0f\uff0c\u53d1\u73b0\u9690\u85cf\u7684\u7ed3\u6784\uff0c\u4e0d\u4f1a\u50cf\u76d1\u7763\u5b66\u4e60\u4ea7\u751f\u9884\u6d4b\u503c\u3002\u6bd4\u5982\u6295\u5582\u4e00\u4e9b\u52a8\u7269\u56fe\u7247\uff0c\u673a\u5668\u6839\u636e\u56fe\u7247\u7279\u5f81\u628a\u8fd9\u4e9b\u56fe\u7247\u5206\u6210\u51e0\u7c7b (\u805a\u7c7b\u7b97\u6cd5-clustering)\u3002</li> <li>\u53e6\u5916\u7684\u7b97\u6cd5\u8fd8\u6709\u964d\u7ef4 (PCA)\u3001\u5f02\u5e38\u68c0\u6d4b\u7b49</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#1","title":"1 \u7ebf\u6027\u56de\u5f52","text":"<ul> <li>\u5efa\u7acb\u76f4\u89c9\uff1a\u7ebf\u6027\u56de\u5f52\u901a\u8fc7\u627e\u51fa\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u6700\u4f73\u76f4\u7ebf\u5173\u7cfb\u6765\u8fdb\u884c\u9884\u6d4b\u3002\u5b83\u5047\u8bbe\u8f93\u5165\u548c\u8f93\u51fa\u6709\u7ebf\u6027\u5173\u7cfb\uff0c\u5148\u968f\u673a\u521d\u59cb\u5316\u4e00\u4e2a\u7ebf\u6027\u5173\u7cfb\uff0c\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u4e0d\u65ad\u8c03\u6574\u53c2\u6570\u6765\u6700\u5c0f\u5316\u8bef\u5dee\u3002</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#11","title":"1.1 \u6210\u672c\u51fd\u6570","text":"<ul> <li>\u5f15\u5165\u8fd9\u4e2a\u51fd\u6570\u7684\u76ee\u7684\uff1a\u7528\u4e8e\u8861\u91cf\u6a21\u578b\u9884\u6d4b\u7684\u597d\u574f</li> </ul> \\[ J(w, b) = \\frac{1}{2m} \\sum_{i=1}^{m} \\left( f_{w,b}(x^{(i)}) - y^{(i)} \\right)^2 \\]","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#12","title":"1.2 \u68af\u5ea6\u4e0b\u964d","text":"<ul> <li>\u672c\u8282\u8ba8\u8bba\u7684\u5b9e\u9645\u662f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d (\"Batch\" gradient descent)</li> <li>\u8ba1\u7b97\u4ece \\(j\\) \u503c\u9ad8\u70b9\u5230 \\(j\\) \u503c\u4f4e\u70b9\u6240\u8d70\u7684\u6700\u4f18\u8def\u5f84</li> </ul> \\[ \\begin{equation*} \\left\\{ \\begin{aligned} tmp\\_w &amp;= w - \\alpha \\frac{\\partial}{\\partial w} J(w, b) \\\\ tmp\\_b &amp;= b - \\alpha \\frac{\\partial}{\\partial b} J(w, b) \\\\ w &amp;= tmp\\_w \\\\ b &amp;= tmp\\_b \\end{aligned} \\right. \\end{equation*} \\] \\[ \\begin{align*} \\text{repeat}&amp;\\text{ until convergence:} \\; \\lbrace \\newline \\;  w &amp;= w -  \\alpha \\frac{\\partial J(w,b)}{\\partial w}  \\; \\newline   b &amp;= b -  \\alpha \\frac{\\partial J(w,b)}{\\partial b}  \\newline \\rbrace \\end{align*} \\] <ul> <li>\u4e0b\u9762\u662f\u6c42\u504f\u5bfc\u7684\u7ed3\u679c</li> </ul> \\[ \\begin{align} \\frac{\\partial J(w,b)}{\\partial w}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)})x^{(i)}\\\\   \\frac{\\partial J(w,b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{w,b}(x^{(i)}) - y^{(i)}) \\\\ \\end{align} \\] <ul> <li>\u8d8a\u63a5\u8fd1 \\(j(w, b)\\) \u7684\u6700\u5c0f\u503c\uff0c\u68af\u5ea6\u4e0b\u964d\u8d8a\u6162</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#learing-rate","title":"\u5b66\u4e60\u7387 (learing rate)","text":"<ul> <li>\u5982\u679c \\(\\alpha\\) \u8fc7\u5c0f\uff0c\u6240\u9700\u7684\u8c03\u6574\u6b21\u6570\u4f1a\u589e\u52a0</li> <li>\u5982\u679c \\(\\alpha\\) \u8fc7\u5927\uff0c\u68af\u5ea6\u4e0b\u964d\u53ef\u80fd\u65e0\u6cd5\u6536\u655b </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_3","title":"\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898","text":"<ul> <li>\u5c40\u90e8\u6700\u5c0f\u4e0d\u662f\u5168\u5c40\u6700\u5c0f </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_4","title":"\u62df\u5408\u8fc7\u7a0b","text":"","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#13","title":"1.3 \u68af\u5ea6\u4e0b\u964d\u4ee3\u7801\u5b9e\u73b0","text":"Python<pre><code>import math, copy\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('./deeplearning.mplstyle')\nfrom lab_utils_uni import plt_house_x, plt_contour_wgrad, plt_divergence, plt_gradients\n\n# Load our data set\nx_train = np.array([1.0, 2.0])   # features\ny_train = np.array([300.0, 500.0])   #target value\n\n#Function to calculate the cost\ndef compute_cost(x, y, w, b):\n\n    m = x.shape[0] \n    cost = 0\n\n    for i in range(m):\n        f_wb = w * x[i] + b\n        cost = cost + (f_wb - y[i])**2\n    total_cost = 1 / (2 * m) * cost\n\n    return total_cost\n\ndef compute_gradient(x, y, w, b): \n    # Number of training examples\n    m = x.shape[0]    \n    dj_dw = 0\n    dj_db = 0\n\n    for i in range(m):  \n        f_wb = w * x[i] + b \n        dj_dw_i = (f_wb - y[i]) * x[i] \n        dj_db_i = f_wb - y[i] \n        dj_db += dj_db_i\n        dj_dw += dj_dw_i \n    dj_dw = dj_dw / m \n    dj_db = dj_db / m \n\n    return dj_dw, dj_db\n\n\ndef gradient_descent(x, y, w_in, b_in, alpha, num_iters, cost_function, gradient_function): \n    w = copy.deepcopy(w_in) # avoid modifying global w_in\n    # An array to store cost J and w's at each iteration primarily for graphing later\n    J_history = []\n    p_history = []\n    b = b_in\n    w = w_in\n\n    for i in range(num_iters):\n        # Calculate the gradient and update the parameters using gradient_function\n        dj_dw, dj_db = gradient_function(x, y, w , b)     \n\n        # Update Parameters using equation (3) above\n        b = b - alpha * dj_db                            \n        w = w - alpha * dj_dw                            \n\n        # Save cost J at each iteration\n        if i&lt;100000:      # prevent resource exhaustion \n            J_history.append( cost_function(x, y, w , b))\n            p_history.append([w,b])\n        # Print cost every at intervals 10 times or as many iterations if &lt; 10\n        if i% math.ceil(num_iters/10) == 0:\n            print(f\"Iteration {i:4}: Cost {J_history[-1]:0.2e} \",\n                  f\"dj_dw: {dj_dw: 0.3e}, dj_db: {dj_db: 0.3e}  \",\n                  f\"w: {w: 0.3e}, b:{b: 0.5e}\")\n\n    return w, b, J_history, p_history #return w and J,w history for graphing\n\n# initialize parameters\nw_init = 0\nb_init = 0\n# some gradient descent settings\niterations = 10000\ntmp_alpha = 1.0e-2\n# run gradient descent\nw_final, b_final, J_hist, p_hist = gradient_descent(x_train ,y_train, w_init, b_init, tmp_alpha, \n                                                    iterations, compute_cost, compute_gradient)\n</code></pre>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#2","title":"2 \u591a\u5143\u7ebf\u6027\u56de\u5f52","text":"","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#21","title":"2.1 \u5411\u91cf\u5316","text":"<ul> <li>\u539f\u65b9\u6cd5</li> </ul> \\[ f_{\\vec{w},b}(\\vec{x})=\\sum_{j=1}^{n}w_{j}x_{j}+b \\] Python<pre><code>f = 0\nfor j in range(n):\n    f = f + w[j] * x[j]\nf = f + b\n</code></pre> <ul> <li>\u5411\u91cf\u5316</li> </ul> \\[ f_{\\vec{w},b}(\\vec{x})=\\vec{w}\\dot{\\vec{x}}+b \\] Python<pre><code>f = np.dot(w,x) + b\n</code></pre> <ul> <li>\u539f\u7406</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#22","title":"2.2 \u591a\u5143\u68af\u5ea6\u4e0b\u964d","text":"\\[ \\begin{align*} \\text{repeat}&amp;\\text{ until convergence:} \\; \\lbrace \\newline\\; &amp; w_j = w_j -  \\alpha \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j}   \\; &amp; \\text{for j = 0..n-1}\\newline &amp;b\\ \\ = b -  \\alpha \\frac{\\partial J(\\mathbf{w},b)}{\\partial b}  \\newline \\rbrace \\end{align*} \\] \\[ \\begin{align} \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  \\\\ \\frac{\\partial J(\\mathbf{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)}) \\end{align} \\]","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#23","title":"2.3 \u591a\u5143\u68af\u5ea6\u4e0b\u964d\u4ee3\u7801\u5b9e\u73b0","text":"Python<pre><code>def compute_cost(X, y, w, b): \n    m = X.shape[0]\n    cost = 0.0\n    for i in range(m):                                \n        f_wb_i = np.dot(X[i], w) + b           #(n,)(n,) = scalar (see np.dot)\n        cost = cost + (f_wb_i - y[i])**2       #scalar\n    cost = cost / (2 * m)                      #scalar    \n    return cost\n\ndef compute_gradient(X, y, w, b): \n    m,n = X.shape           #(number of examples, number of features)\n    dj_dw = np.zeros((n,))\n    dj_db = 0.\n\n    for i in range(m):                             \n        err = (np.dot(X[i], w) + b) - y[i]   \n        for j in range(n):                         \n            dj_dw[j] = dj_dw[j] + err * X[i, j]    \n        dj_db = dj_db + err                        \n    dj_dw = dj_dw / m                                \n    dj_db = dj_db / m                                \n\n    return dj_db, dj_dw\n\ndef gradient_descent(X, y, w_in, b_in, cost_function, \n    # An array to store cost J and w's at each iteration primarily for graphing later\n    J_history = []\n    w = copy.deepcopy(w_in)  #avoid modifying global w within function\n    b = b_in\n\n    for i in range(num_iters):\n\n        # Calculate the gradient and update the parameters\n        dj_db,dj_dw = gradient_function(X, y, w, b)   ##None\n\n        # Update Parameters using w, b, alpha and gradient\n        w = w - alpha * dj_dw               ##None\n        b = b - alpha * dj_db               ##None\n\n        # Save cost J at each iteration\n        if i&lt;100000:      # prevent resource exhaustion \n            J_history.append( cost_function(X, y, w, b))\n\n        # Print cost every at intervals 10 times or as many iterations if &lt; 10\n        if i% math.ceil(num_iters / 10) == 0:\n            print(f\"Iteration {i:4d}: Cost {J_history[-1]:8.2f}   \")\n\n    return w, b, J_history #return final w,b and J history for graphing\n\n# initialize parameters\nX_train = np.array([[2104, 5, 1, 45], [1416, 3, 2, 40], [852, 2, 1, 35]])\ny_train = np.array([460, 232, 178])\ninitial_w = np.zeros_like(w_init)\ninitial_b = 0.\n# some gradient descent settings\niterations = 1000\nalpha = 5.0e-7\n# run gradient descent \nw_final, b_final, J_hist = gradient_descent(X_train, y_train, initial_w, initial_b,\n                                                    compute_cost, compute_gradient, \n                                                    alpha, iterations)\n</code></pre>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#24","title":"2.4 \u7279\u5f81\u7f29\u653e","text":"<ul> <li>\u76ee\u7684\u662f\u52a0\u901f\u68af\u5ea6\u4e0b\u964d\u7684\u6536\u655b<ul> <li>\u7531\u4e8e\u4e0d\u540c\u7279\u5f81\u7684\u6570\u91cf\u7ea7\u53ef\u80fd\u4f1a\u6709\u5dee\u5f02\uff0c\u5bfc\u81f4\u5bf9\u5e94\u7684 \\(w_{i}\\) \u6743\u91cd\u66f4\u9ad8\uff0c\u540e\u679c\u662f\u68af\u5ea6\u4e0b\u964d\u8d70 Z \u5b57\u3002</li> </ul> </li> </ul> <ul> <li>\u5747\u503c\u5f52\u4e00\u5316 </li> </ul> \\[ x_i := \\dfrac{x_i - \\mu_i}{max - min} \\] <ul> <li>z-score \u5f52\u4e00\u5316<ul> <li>\u5f52\u4e00\u5316\uff0c\u6240\u6709\u8981\u7d20\u5e73\u5747\u503c\u4e3a 0\uff0c\u6807\u51c6\u5dee\u4e3a 1</li> </ul> </li> </ul> \\[ x^{(i)}_j = \\dfrac{x^{(i)}_j - \\mu_j}{\\sigma_j} \\] \\[ \\begin{align} \\mu_j &amp;= \\frac{1}{m} \\sum_{i=0}^{m-1} x^{(i)}_j\\\\ \\sigma^2_j &amp;= \\frac{1}{m} \\sum_{i=0}^{m-1} (x^{(i)}_j - \\mu_j)^2  \\end{align} \\]","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#25-z-score","title":"2.5 z-score \u5f52\u4e00\u5316\u4ee3\u7801\u5b9e\u73b0","text":"Python<pre><code>def zscore_normalize_features(X):\n    \"\"\"\n    computes  X, zcore normalized by column\n\n    Args:\n      X (ndarray (m,n))     : input data, m examples, n features\n\n    Returns:\n      X_norm (ndarray (m,n)): input normalized by column\n      mu (ndarray (n,))     : mean of each feature\n      sigma (ndarray (n,))  : standard deviation of each feature\n    \"\"\"\n    # find the mean of each column/feature\n    mu     = np.mean(X, axis=0)                 # mu will have shape (n,)\n    # find the standard deviation of each column/feature\n    sigma  = np.std(X, axis=0)                  # sigma will have shape (n,)\n    # element-wise, subtract mu for that column from each example, divide by std for that column\n    X_norm = (X - mu) / sigma      \n\n    return (X_norm, mu, sigma)\n</code></pre> <ul> <li>axis=0 \u8868\u793a\u9010\u5217\u6c42\u5747\u503c\uff0caxis=1 \u8868\u793a\u9010\u884c\u6c42\u5747\u503c</li> <li>\u4e0b\u9762\u662f\u4e09\u79cd\u7279\u5f81\u7f29\u653e\u7684\u5bf9\u6bd4\u56fe</li> </ul> <p>\u8fdb\u884c\u9884\u6d4b</p> Python<pre><code>#predict target using normalized features\nm = X_norm.shape[0]\nyp = np.zeros(m)\nfor i in range(m):\n    yp[i] = np.dot(X_norm[i], w_norm) + b_norm\n\n    # plot predictions and targets versus original features    \nfig,ax=plt.subplots(1,4,figsize=(12, 3),sharey=True)\nfor i in range(len(ax)):\n    ax[i].scatter(X_train[:,i],y_train, label = 'target')\n    ax[i].set_xlabel(X_features[i])\n    ax[i].scatter(X_train[:,i],yp,color=dlc[\"dlorange\"], label = 'predict')\nax[0].set_ylabel(\"Price\"); ax[0].legend();\nfig.suptitle(\"target versus prediction using z-score normalized model\")\nplt.show()\n</code></pre> <p></p> <ul> <li>\u7528\u4e8e\u9884\u6d4b\u7684 input \u4e5f\u5fc5\u987b\u6807\u51c6\u5316</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_5","title":"\u600e\u4e48\u9009\u62e9\u5408\u9002\u7684\u5b66\u4e60\u7387","text":"<ul> <li>\u5c1d\u8bd5\u5e76\u89c2\u5bdf\u53c2\u6570\u53d8\u5316</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#26","title":"2.6 \u7279\u5f81\u5de5\u7a0b\u548c\u591a\u9879\u5f0f\u56de\u5f52","text":"<ul> <li>\u7279\u5f81\u5de5\u7a0b:\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u63d0\u53d6\u3001\u8f6c\u6362\u6216\u521b\u5efa\u66f4\u6709\u610f\u4e49\u7684\u7279\u5f81\uff0c\u4ee5\u63d0\u9ad8\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u8868\u73b0,\u80fd\u591f\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u6027<ul> <li>\u5982\u53d1\u73b0 \\(wx+b\\) \u62df\u5408\u6548\u679c\u4e0d\u597d\uff0c\u521b\u5efa\u4e00\u4e2a\u7279\u5f81 \\(x^2\\) ,\u5c1d\u8bd5\u7528 \\(w_{0}x_{0}+w_{1}x_{1}^2\\)</li> </ul> </li> <li>\u6ca1\u6709\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u4e4b\u524d\u5c31\u53ef\u4ee5\u4f7f\u7528\u66ff\u4ee3\u89c6\u56fe\u8fdb\u884c\u62df\u5408\u6548\u679c\u5206\u6790</li> </ul> Python<pre><code># create target data\nx = np.arange(0, 20, 1)\ny = x**2\n\n# engineer features .\nX = np.c_[x, x**2, x**3]   #&lt;-- added engineered feature\nX_features = ['x','x^2','x^3']\n\nfig,ax=plt.subplots(1, 3, figsize=(12, 3), sharey=True)\nfor i in range(len(ax)):\n    ax[i].scatter(X[:,i],y)\n    ax[i].set_xlabel(X_features[i])\nax[0].set_ylabel(\"y\")\nplt.show()\n</code></pre> <ul> <li>\u4e00\u4e2a\u95ee\u9898\u662f \\(x,x^2,x^3\\) \u7684\u5c3a\u5ea6\u53ef\u80fd\u4f1a\u6709\u8f83\u5927\u5dee\u5f02\uff0c\u53ef\u4ee5\u4f7f\u7528 z-score \u5f52\u4e00\u5316\u6765\u89e3\u51b3 </li> </ul> Python<pre><code>x = np.arange(0,20,1)\ny = x**2\n\nX = np.c_[x, x**2, x**3]\nX = zscore_normalize_features(X) \n\nmodel_w, model_b = run_gradient_descent_feng(X, y, iterations=100000, alpha=1e-1)\n</code></pre> <ul> <li>\u53ef\u4ee5\u5e94\u7528\u7279\u5f81\u5de5\u7a0b\u5bf9\u76f8\u5bf9\u590d\u6742\u7684\u51fd\u6570\u5efa\u6a21\uff0c\u6cf0\u52d2\u5df2\u7ecf\u544a\u8bc9\u4e86\u6211\u4eec\u8fd9\u4e2a\u7ed3\u8bba</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#3","title":"3 \u903b\u8f91\u56de\u5f52","text":"<ul> <li>\u4e00\u79cd\u7528\u4e8e\u4e8c\u5206\u7c7b\u7684\u7b97\u6cd5</li> <li>\u539f\u5148\u7684\u7ebf\u6027\u65b9\u7a0b\u4e0d\u80fd\u5f88\u597d\u5730\u62df\u5408\u4e8c\u5206\u7c7b\u7684\u56fe\u50cf</li> <li>\u4e8e\u662f\u8fdb\u884c\u4e86\u5de7\u5999\u7684\u6620\u5c04\uff0c\u5982\u4e0b</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#31","title":"3.1 \u51b3\u7b56\u8fb9\u754c","text":"<p>\u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 Sigmoid \u51fd\u6570 \u8ba1\u7b97\u6982\u7387\uff1a \u4e00\u822c\u5f53 \\(g(z) = \\frac{1}{1+e^{-z}}&gt;0.5\\) \u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a y = 1, \u800c\u8fd9\u4e2a\u70b9\u6070\u597d\u5bf9\u5e94 \\(\\vec{w}\\vec{x}+b=0\\)</p> <p></p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#32","title":"3.2 \u903b\u8f91\u56de\u5f52\u7684\u6210\u672c\u51fd\u6570","text":"<p>\u5982\u679c\u8fd8\u662f\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u7684\u6210\u672c\u51fd\u6570\uff0c\u5f97\u5230\u7684\u66f2\u7ebf\u6709\u591a\u4e2a\u5c40\u90e8\u6700\u5c0f\u503c\u3002\u6240\u4ee5\u9700\u8981\u53e6\u5916\u5b9a\u4e49\u4e00\u4e2a\u6210\u672c\u51fd\u6570\u3002</p> <ul> <li>\u903b\u8f91\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u5982\u4e0b\uff0c\u53ea\u9488\u5bf9\u4e00\u4e2a\u6837\u672c</li> </ul> \\[ \\begin{equation}   loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)}) = \\begin{cases}     - \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) &amp; \\text{if $y^{(i)}=1$}\\\\     - \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) &amp; \\text{if $y^{(i)}=0$}   \\end{cases} \\end{equation} \\] <p>\u4e5f\u53ef\u4ee5\u7b80\u5199\u4e3a</p> \\[ loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)}) = (-y^{(i)} \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) \\] <p>\u5408\u7406\u4e4b\u5904\u5728\u4e8e\u5982\u679c\u9884\u6d4b\u503c\u63a5\u8fd1\u6b63\u786e\u7c7b\u522b\u635f\u5931\u8f83\u5c0f\uff0c\u5982\u679c\u9884\u6d4b\u503c\u63a5\u8fd1\u9519\u8bef\u7c7b\u522b\u635f\u5931\u8f83\u5927\uff0c\u540c\u65f6\u8fde\u7eed\u4e14\u53ef\u5fae\uff0c\u4fbf\u4e8e\u68af\u5ea6\u4e0b\u964d\u4f18\u5316</p> <ul> <li>\u6210\u672c\u51fd\u6570\u5982\u4e0b</li> </ul> \\[ J(\\mathbf{w},b) = \\frac{1}{m} \\sum_{i=0}^{m-1} \\left[ loss(f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}), y^{(i)}) \\right]  \\] <ul> <li>\u4ee3\u7801\u5b9e\u73b0</li> </ul> Python<pre><code>def compute_cost_logistic(X, y, w, b):\n    m = X.shape[0]\n    cost = 0.0\n    for i in range(m):\n        z_i = np.dot(X[i],w) + b\n        f_wb_i = sigmoid(z_i)\n        cost +=  -y[i]*np.log(f_wb_i) - (1-y[i])*np.log(1-f_wb_i)\n\n    cost = cost / m\n    return cost\n</code></pre>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#33","title":"3.3 \u5c06\u68af\u5ea6\u4e0b\u964d\u5e94\u7528\u5230\u903b\u8f91\u56de\u5f52","text":"<p>\u903b\u8f91\u56de\u5f52\u7684\u68af\u5ea6\u4e0b\u964d\u4ecd\u7136\u6ee1\u8db3\u4e0b\u5f0f</p> \\[ \\begin{align} \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)})x_{j}^{(i)} \\\\ \\frac{\\partial J(\\mathbf{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)}) \\end{align} \\] <ul> <li>\u4ee3\u7801\u5b9e\u73b0</li> </ul> Python<pre><code>def compute_gradient_logistic(X, y, w, b): \n\n    m,n = X.shape\n    dj_dw = np.zeros((n,))                           #(n,)\n    dj_db = 0.\n\n    for i in range(m):\n        f_wb_i = sigmoid(np.dot(X[i],w) + b)          #(n,)(n,)=scalar\n        err_i  = f_wb_i  - y[i]                       #scalar\n        for j in range(n):\n            dj_dw[j] = dj_dw[j] + err_i * X[i,j]      #scalar\n        dj_db = dj_db + err_i\n    dj_dw = dj_dw/m                                   #(n,)\n    dj_db = dj_db/m                                   #scalar\n\n    return dj_db, dj_dw\n\ndef gradient_descent(X, y, w_in, b_in, alpha, num_iters): \n    # An array to store cost J and w's at each iteration primarily for graphing later\n    J_history = []\n    w = copy.deepcopy(w_in)  #avoid modifying global w within function\n    b = b_in\n\n    for i in range(num_iters):\n        # Calculate the gradient and update the parameters\n        dj_db, dj_dw = compute_gradient_logistic(X, y, w, b)   \n\n        # Update Parameters using w, b, alpha and gradient\n        w = w - alpha * dj_dw               \n        b = b - alpha * dj_db               \n\n        # Save cost J at each iteration\n        if i&lt;100000:      # prevent resource exhaustion \n            J_history.append( compute_cost_logistic(X, y, w, b) )\n\n        # Print cost every at intervals 10 times or as many iterations if &lt; 10\n        if i% math.ceil(num_iters / 10) == 0:\n            print(f\"Iteration {i:4d}: Cost {J_history[-1]}   \")\n\n    return w, b, J_history         #return final w,b and J history for graphing\n</code></pre>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#34","title":"3.4 \u8fc7\u62df\u5408","text":"<p>\u5bf9\u7ed9\u51fa\u7684\u6837\u672c\u62df\u5408\u6548\u679c\u5f88\u597d\u4f46\u662f\u9884\u6d4b\u6548\u679c\u4e0d\u4f73</p> <p></p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#35","title":"3.5 \u89e3\u51b3\u8fc7\u62df\u5408","text":"<ul> <li>\u66f4\u591a\u7684\u8bad\u7ec3\u6570\u636e</li> <li>\u51cf\u5c11\u7279\u5f81\u6570\u91cf</li> <li>\u6b63\u5219\u5316</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_6","title":"\u6b63\u5219\u5316","text":"<ul> <li>\u5bf9\u4e8e\u9ad8\u9636\u7684\u7279\u5f81\u9879\uff0c\u6211\u4eec\u901a\u5e38\u5e0c\u671b\u5b83\u4eec\u7684\u7cfb\u6570\u8f83\u5c0f\uff0c\u4ee5\u51cf\u5c11\u6a21\u578b\u590d\u6742\u5ea6\uff0c\u9632\u6b62\u8fc7\u62df\u5408</li> </ul> <p>\u5bf9\u6b64\u6211\u4eec\u9700\u8981\u66f4\u6539\u6210\u672c\u51fd\u6570\u8868\u8fbe\u5f0f</p> <p>\u5bf9\u4e8e\u7ebf\u6027\u56de\u5f52</p> \\[ J(\\mathbf{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2  \\] <p>\u5bf9\u4e8e\u903b\u8f91\u56de\u5f52</p> \\[ J(\\mathbf{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\mathbf{w},b}\\left( \\mathbf{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2 \\] <p>\u68af\u5ea6\u4e0b\u964d\u5b9e\u73b0\u76f8\u540c</p> \\[ \\begin{align*} \\frac{\\partial J(\\mathbf{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j\\\\ \\frac{\\partial J(\\mathbf{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\mathbf{w},b}(\\mathbf{x}^{(i)}) - y^{(i)})  \\end{align*} \\] <p>\u4e0d\u5c55\u793a\u5b9e\u73b0\u4e86\uff0c\u591a\u4e86\u51e0\u9879\u800c\u5df2</p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#4","title":"4 \u795e\u7ecf\u7f51\u7edc","text":"<ul> <li>\u5efa\u7acb\u76f4\u89c9\uff1a\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u5165\uff0c\u6700\u540e\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5c31\u662f\u9884\u6d4b\u7ed3\u679c. \u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u90fd\u6709\u81ea\u5df1\u7684 w \u548c b, \u5f00\u59cb\u65f6\u968f\u673a\u521d\u59cb\u5316\u6bcf\u4e00\u7ec4 w \u548c b \u7684\u503c\uff0c\u901a\u8fc7\u8fed\u4ee3\u8bad\u7ec3\u8c03\u6574 w \u548c b \u4f7f\u6210\u672c\u6700\u5c0f\u3002\u5982\u679c\u795e\u7ecf\u7f51\u7edc\u5f88\u590d\u6742\uff0c\u90a3\u4e48 w \u548c b \u7684\u53d8\u5316\u5f80\u5f80\u662f\u4eba\u7c7b\u4e0d\u80fd\u7406\u89e3\u7684\u3002</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#41","title":"4.1 \u6d41\u7a0b","text":"<ul> <li>\u524d\u5411\u4f20\u64ad</li> <li>\u8ba1\u7b97\u635f\u5931</li> <li>\u53cd\u5411\u4f20\u64ad\u66f4\u65b0\u53c2\u6570</li> <li>\u8fed\u4ee3\u8bad\u7ec3</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#42","title":"4.2 \u591a\u7c7b\u522b","text":"<p>\u653e\u4e00\u4e2a\u4ee3\u7801\u5b9e\u73b0\uff1a</p> Python<pre><code># explanation\nclasses = 4 # number of classes\nm = 100 # number of samples\ncenters = [[-5, 2], [-2, -2], [1, 2], [5, -2]] # centers of the clusters\nstd = 1.0 # standard deviation of the clusters\nX_train, y_train = make_blobs(n_samples=m, centers=centers, cluster_std=std,random_state=30) # generate training data\n\ntf.random.set_seed(1234)  # Set the seed for reproducibility \nmodel = Sequential(\n    [\n        Dense(2, activation = 'relu',   name = \"L1\"),\n        Dense(4, activation = 'linear', name = \"L2\")\n    ]\n)\n# Compile the model\nmodel.compile(\n    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), # SparseCategoricalCrossentropy is used because the labels are integers\n    optimizer=tf.keras.optimizers.Adam(0.01), # use Adom optimizer with learning rate of 0.01\n)\n\nmodel.fit(\n    X_train,y_train,\n    epochs=200\n)\n</code></pre>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#43","title":"4.3 \u5176\u5b83\u6fc0\u6d3b\u51fd\u6570","text":"","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#relu","title":"ReLU","text":"\\[ a=max(0,z) \\]","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#relu_1","title":"ReLU \u7684\u5408\u7406\u6027","text":"<ul> <li>\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u8f93\u51fa\uff0c\u63d0\u9ad8\u8bad\u7ec3\u6548\u7387</li> <li>\u89e3\u51b3\u68af\u5ea6\u6d88\u5931\u7684\u95ee\u9898</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#softmax","title":"softmax","text":"\\[ a_j = \\frac{e^{z_j}}{ \\sum_{k=1}^{N}{e^{z_k} }} \\] \\[ \\begin{align} \\mathbf{a}(x) = \\begin{bmatrix} P(y = 1 | \\mathbf{x}; \\mathbf{w},b) \\\\ \\vdots \\\\ P(y = N | \\mathbf{x}; \\mathbf{w},b) \\end{bmatrix} = \\frac{1}{ \\sum_{k=1}^{N}{e^{z_k} }} \\begin{bmatrix} e^{z_1} \\\\ \\vdots \\\\ e^{z_{N}} \\\\ \\end{bmatrix} \\end{align} \\] <ul> <li>softmax \u7684\u635f\u5931\u51fd\u6570</li> </ul> \\[ \\begin{equation}   L(\\mathbf{a},y)=\\begin{cases}     -log(a_1), &amp; \\text{if $y=1$}.\\\\         &amp;\\vdots\\\\      -log(a_N), &amp; \\text{if $y=N$}   \\end{cases} \\end{equation} \\] <ul> <li>softmax \u7684\u6210\u672c\u51fd\u6570</li> </ul> \\[ \\begin{align} J(\\mathbf{w},b) = -\\frac{1}{m} \\left[ \\sum_{i=1}^{m} \\sum_{j=1}^{N}  1\\left\\{y^{(i)} == j\\right\\} \\log \\frac{e^{z^{(i)}_j}}{\\sum_{k=1}^N e^{z^{(i)}_k} }\\right] \\end{align} \\] <ul> <li>Tensorflow \u5b9e\u73b0\u7a00\u758f\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a</li> </ul> <p>way 1</p> Python<pre><code>model = Sequential(\n    [ \n        Dense(25, activation = 'relu'),\n        Dense(15, activation = 'relu'),\n        Dense(4, activation = 'softmax')    # &lt; softmax activation here\n    ]\n)\nmodel.compile(\n    loss=tf.keras.losses.SparseCategoricalCrossentropy(),\n    optimizer=tf.keras.optimizers.Adam(0.001),\n)\n\nmodel.fit(\n    X_train,y_train,\n    epochs=10\n)\n</code></pre> <p>way 2</p> Python<pre><code>preferred_model = Sequential(\n    [ \n        Dense(25, activation = 'relu'),\n        Dense(15, activation = 'relu'),\n        Dense(4, activation = 'linear')   #&lt;-- Note\n    ]\n)\npreferred_model.compile(\n    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),  #&lt;-- Note\n    optimizer=tf.keras.optimizers.Adam(0.001),\n)\n\npreferred_model.fit(\n    X_train,y_train,\n    epochs=10\n)\n</code></pre> <ul> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u4f18\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6cd5<ul> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5c06 softmax \u64cd\u4f5c\u5305\u542b\u5728\u635f\u5931\u8ba1\u7b97\u4e2d\uff0c\u8fd9\u4e2a\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u673a\u4f1a\u91c7\u53d6\u66f4\u597d\u7684\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\u4ece\u800c\u5f97\u5230\u66f4\u51c6\u786e\u7684\u7ed3\u679c</li> <li>\u8bfe\u7a0b\u4e2d\u7684\u4f8b\u5b50\uff1apython \u4e2d\u8ba1\u7b97 \\(1+\\frac{1}{1000000}-(1-\\frac{1}{1000000})\\) \u548c \\(\\frac{1}{1000000}+\\frac{1}{1000000}\\) \u65f6\u5f97\u5230\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#_7","title":"\u7a00\u758f\u5206\u7c7b\u4ea4\u53c9\u71b5\u548c\u5206\u7c7b\u4ea4\u53c9\u71b5","text":"<ul> <li>SparseCategorialCrossentropy\uff1a\u671f\u671b\u76ee\u6807\u662f\u4e0e\u7d22\u5f15\u5bf9\u5e94\u7684\u6574\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709 10 \u4e2a\u53ef\u80fd\u7684\u76ee\u6807\u503c\uff0c\u5219 y \u5c06\u4ecb\u4e8e 0 \u548c 9 \u4e4b\u95f4\u3002</li> <li>CategoricalCrossEntropy\uff1a\u9884\u671f\u793a\u4f8b\u7684\u76ee\u6807\u503c\u4e3a one-hot \u7f16\u7801\uff0c\u5176\u4e2d\u76ee\u6807\u7d22\u5f15\u7684\u503c\u4e3a 1\uff0c\u800c\u5176\u4ed6 N-1 \u4e2a\u6761\u76ee\u4e3a\u96f6\u3002\u5177\u6709 10 \u4e2a\u6f5c\u5728\u76ee\u6807\u503c\u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u76ee\u6807\u4e3a 2\uff0c\u5219\u4e3a[0,0,1,0,0,0,0,0,0,0]\u3002</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#5","title":"5 \u6a21\u578b\u8bc4\u4f30","text":"","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#51","title":"5.1 \u6982\u5ff5\u6c47\u603b","text":"<ul> <li>\u6570\u636e\u96c6<ul> <li>\u8bad\u7ec3\u96c6 (training set)\uff1a\u7528\u4e8e\u6a21\u578b\u8bad\u7ec3</li> <li>\u4ea4\u53c9\u9a8c\u8bc1\u96c6 (dev set)\uff1a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u6a21\u578b\u9009\u62e9\u548c\u8d85\u53c2\u6570\u8c03\u4f18\uff0c\u5e2e\u52a9\u786e\u5b9a\u6700\u4f73\u7684\u6a21\u578b\u914d\u7f6e</li> <li>\u6d4b\u8bd5\u96c6 (test set)\uff1a\u7528\u4e8e\u8bc4\u4f30\u6a21\u578b\u5728\u65b0\u6570\u636e\u4e0a\u7684\u8868\u73b0\uff0c\u53cd\u5e94\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u6d4b\u8bd5\u96c6\u7684\u6570\u636e\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u89c1<ul> <li>\u5982\u679c\u91c7\u7528\u6d4b\u8bd5\u96c6\u8fdb\u884c\u6a21\u578b\u9009\u62e9\u4f1a\u5bfc\u81f4\u5b9e\u9645\u8bef\u5dee\u5927\u4e8e\u6cdb\u5316\u8bef\u5dee\uff0c\u56e0\u4e3a\u6d4b\u8bd5\u96c6\u5b9e\u9645\u4e0a\u4ecb\u5165\u4e86\u6a21\u578b\u9009\u62e9\u7684\u8fc7\u7a0b\u3002</li> </ul> </li> </ul> </li> <li>\u8bef\u5dee<ul> <li>\u5b9e\u9645\u8bef\u5dee\uff1a\u6a21\u578b\u62df\u5408\u6570\u636e\u7684\"\u73b0\u72b6\"\u53cd\u6620</li> <li>\u6cdb\u5316\u8bef\u5dee\uff1a\u6a21\u578b\u5728\u6240\u6709\u53ef\u80fd\u7684\u65b0\u6837\u672c\u4e0a\u7684\u9884\u671f\u8bef\u5dee</li> <li>\u57fa\u51c6\u6027\u80fd\u6c34\u5e73\uff1a\u4e3a\u8861\u91cf\u6a21\u578b\u6c34\u5e73\u8bbe\u5b9a\u7684\u53c2\u8003\u6807\u51c6\uff0c\u6bd4\u5982\u4eba\u7c7b\u9884\u6d4b\u7684\u51c6\u786e\u7387</li> </ul> </li> <li>\u6b63\u5219\u5316<ul> <li>\u76ee\u7684\uff1a\u901a\u8fc7\u589e\u52a0\u6b63\u5219\u5316\u9879\u6765\u9632\u6b62\u6a21\u578b\u8fc7\u62df\u5408</li> </ul> </li> <li>\u504f\u5dee\u4e0e\u65b9\u5dee\uff1a<ul> <li>\u9ad8\u504f\u5dee\uff1a\u6a21\u578b\u8fc7\u4e8e\u7b80\u5355\uff0c\u4e0d\u80fd\u6355\u6349\u6570\u636e\u89c4\u5f8b</li> <li>\u9ad8\u65b9\u5dee\uff1a\u6a21\u578b\u8fc7\u4e8e\u590d\u6742\uff0c\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u5ea6\u62df\u5408\uff0c\u5728\u65b0\u6570\u636e\u4e0a\u8868\u73b0\u8fc7\u5dee</li> </ul> </li> </ul> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u9a8c\u8bc1\u96c6\u7684\u6210\u672c\u51fd\u6570\u548c\u8bad\u7ec3\u96c6\u7684\u6210\u672c\u51fd\u6570\u6709\u5982\u4e0b\u5173\u7cfb</p> <p></p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#52","title":"5.2 \u504f\u5dee\u65b9\u5dee\u548c\u795e\u7ecf\u7f51\u7edc","text":"<p>\u89e3\u51b3\u504f\u5dee\u548c\u65b9\u5dee\u95ee\u9898\u7684\u7b56\u7565\u5982\u4e0b</p> <p></p> <p>\u7406\u8bba\u4e0a\uff0c\u91c7\u7528\u66f4\u52a0\u5e9e\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u53ea\u8981\u6070\u5f53\u5730\u6b63\u5219\u5316\uff0c\u90a3\u4e48\u81f3\u5c11\u62e5\u6709\u548c\u5c0f\u578b\u795e\u7ecf\u7f51\u7edc\u76f8\u4eff\u7684\u62df\u5408\u7ed3\u679c</p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#53","title":"5.3 \u6570\u636e\u6269\u5145","text":"<ul> <li>\u9519\u8bef\u5206\u6790\uff1a</li> <li>\u6570\u636e\u6269\u5145\uff1a\u5f53\u6570\u636e\u91cf\u6709\u9650\u65f6\u91c7\u7528\u6570\u636e\u6269\u5145\u6765\u83b7\u53d6\u65b0\u6570\u636e<ul> <li>\u6570\u636e\u589e\u5f3a\uff1a\u6539\u9020\u73b0\u6709\u6570\u636e\uff0c\u751f\u6210\u65b0\u7684\u6837\u672c\uff0c\u5982\u56fe\u50cf\u8bc6\u522b\u4e2d\u5bf9\u5df2\u6709\u56fe\u50cf\u8fdb\u884c\u65cb\u8f6c\uff0c\u88c1\u526a\uff0c\u626d\u66f2\u5f97\u5230\u65b0\u56fe\u50cf</li> <li>\u6570\u636e\u5408\u6210\uff1a\u5229\u7528\u7b97\u6cd5\u5408\u6210\u65b0\u7684\u6570\u636e</li> </ul> </li> <li>\u8fc1\u79fb\u5b66\u4e60\uff1a\u5f53\u6ca1\u6709\u8db3\u591f\u6570\u636e\u65f6\uff0c\u5229\u7528\u76f8\u4f3c\u7684\u5df2\u7ecf\u7ecf\u8fc7\u9884\u8bad\u7ec3\u7684\u6a21\u578b\u5f97\u5230\u76f8\u5bf9\u5408\u7406\u7684 w \u548c b \u4f5c\u4e3a\u521d\u59cb\u503c\u800c\u4e0d\u662f\u91c7\u7528\u968f\u673a\u503c<ul> <li>\u53ea\u8bad\u7ec3\u6700\u540e\u4e00\u5c42\uff1a\u5f53\u6570\u636e\u91cf\u4e0d\u8db3\u65f6</li> <li>\u5168\u90e8\u8bad\u7ec3\uff1a\u5728\u9884\u8bad\u7ec3\u7684\u57fa\u7840\u4e0a\uff0c\u5bf9\u6240\u6709\u5c42\u8fdb\u884c\u8c03\u6574</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#54","title":"5.4 \u673a\u5668\u5b66\u4e60\u9879\u76ee\u7684\u5b8c\u6574\u5468\u671f","text":"<p>\u51b3\u5b9a\u9879\u76ee\u5185\u5bb9\u548c\u4f60\u8981\u89e3\u51b3\u7684\u95ee\u9898-&gt;\u6536\u96c6\u6570\u636e-&gt;\u8bad\u7ec3\u6a21\u578b-&gt;\u6a21\u578b\u8bc4\u4f30\u8003\u8651\u4f18\u5316\u8bad\u7ec3\u65b9\u5f0f-&gt;\u90e8\u7f72\uff0c\u76d1\u89c6\uff0c\u7ef4\u62a4\u6a21\u578b</p> <p></p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#55","title":"5.5 \u5904\u7406\u503e\u659c\u6570\u636e\u96c6\u4e0e\u8bc4\u4ef7\u6307\u6807","text":"<ul> <li>\u503e\u659c\u6570\u636e\u96c6\uff1a\u6570\u636e\u96c6\u7c7b\u522b\u5206\u5e03\u6781\u4e0d\u5e73\u8861\uff0c\u6bd4\u5982\u9884\u6d4b\u7f55\u89c1\u75c5</li> <li>\u8bc4\u4ef7\u6307\u6807<ul> <li>\u7cbe\u786e\u7387: true pos / pre pos </li> <li>\u53ec\u56de\u7387: true pos /act pos (\u80fd\u5728\u60a3\u75c5\u7fa4\u4f53\u4e2d\u7504\u522b\u51fa\u591a\u5c11\u4eba)</li> <li>F1-score: \u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747 \\(\\frac{PR}{P+R}\\)</li> </ul> </li> </ul> <p>\u4e0b\u9762\u662f\u5bf9\u9634\u9633\u6027\u7684\u5b9a\u4e49 </p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#6","title":"6 \u51b3\u7b56\u6811","text":"<ul> <li>\u5efa\u7acb\u76f4\u89c9\uff1a\u62ff\u5230\u4e00\u4efd\u6570\u636e\u96c6\u540e\uff0c\u51b3\u7b56\u6811\u901a\u8fc7\u4e00\u7cfb\u5217\u7684 \u6761\u4ef6\u5224\u65ad\uff08\u4f8b\u5982\uff1a\u67d0\u7279\u5f81\u662f\u5426\u5927\u4e8e\u67d0\u4e2a\u503c\uff09\u5c06\u6570\u636e\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u5b50\u96c6\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u96c6\u7684\u6837\u672c\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6(\u6b64\u65f6\u4f60\u8ba4\u4e3a\u5b83\u5206\u51b3\u7b56\u5f97\u4e0d\u9519)\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u8868\u793a\u9884\u6d4b\u7ed3\u679c\u3002\u51b3\u7b56\u6811\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\u6784\u5efa\u3002</li> <li>\u6784\u5efa\u4e00\u68f5\u51b3\u7b56\u6811\u7684\u6d41\u7a0b<ul> <li>\u6570\u636e\u51c6\u5907</li> <li>\u9009\u62e9\u5206\u88c2\u6807\u51c6</li> <li>\u8d85\u53c2\u6570\u8c03\u4f18</li> </ul> </li> <li>\u72ec\u70ed\u7f16\u7801\u7684\u5206\u7c7b\u7279\u5f81\uff1a\u5c06\u6bcf\u4e00\u4e2a\u5206\u7c7b\u7684\u503c\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u5411\u91cf\u3002</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#61","title":"6.1 \u4ee5\u4fe1\u606f\u589e\u76ca\u4f5c\u4e3a\u5206\u88c2\u6807\u51c6\u793a\u4f8b","text":"<p>\u4fe1\u606f\u589e\u76ca (\u71b5\u51cf\u7a0b\u5ea6):</p> \\[ \\text{Information Gain} = H(p_1^\\text{node})- \\left(w^{\\text{left}}H\\left(p_1^\\text{left}\\right) + w^{\\text{right}}H\\left(p_1^\\text{right}\\right)\\right) \\] \\[ H(p_1) = -p_1 \\text{log}_2(p_1) - (1- p_1) \\text{log}_2(1- p_1) \\] <p></p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#62","title":"6.2 \u56de\u5f52\u6811","text":"<ul> <li>\u548c\u51b3\u7b56\u6811\u5bf9\u6bd4<ul> <li>\u56de\u5f52\u6811\u9884\u6d4b\u8fde\u7eed\u6570\u503c</li> <li>\u51b3\u7b56\u6811\u9884\u6d4b\u79bb\u6563\u7684\u6807\u7b7e</li> <li>\u56de\u5f52\u6811\u4f7f\u7528\u5747\u65b9\u8bef\u5dee\u4f5c\u4e3a\u5206\u88c2\u6807\u51c6</li> <li>\u51b3\u7b56\u6811\u901a\u5e38\u4f7f\u7528\u4fe1\u606f\u589e\u76ca\u6216\u57fa\u5c3c\u7cfb\u6570\u4f5c\u4e3a\u5206\u88c2\u6807\u51c6</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#63","title":"6.3 \u968f\u673a\u68ee\u6797","text":"<ul> <li>\u5355\u68f5\u51b3\u7b56\u6811\u9c81\u68d2\u6027\u5dee\u7684\u539f\u56e0<ul> <li>\u5bf9\u6570\u636e\u96c6\u7684\u7ec6\u5fae\u53d8\u5316\u5f88\u654f\u611f, \u6709\u65f6\u5982\u679c\u53ea\u662f\u65b0\u589e\u52a0\u4e86\u4e00\u4e2a\u6570\u636e, \u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u68f5\u6811\u7684\u7ed3\u6784\u88ab\u91cd\u6784 (\u5982\u679c\u6070\u597d\u6539\u53d8\u4e86\u6839\u8282\u70b9\u7684\u7279\u5f81)</li> </ul> </li> <li>\u968f\u673a\u68ee\u6797\u673a\u5236\uff1a\u968f\u673a\u9009\u53d6\u6570\u636e\u96c6\u7684\u5b50\u96c6\u6784\u5efa\u6811\u96c6\u6210\uff0c\u591a\u68f5\u6811\u6295\u7968\u51b3\u5b9a\u6700\u7ec8\u7ed3\u679c</li> <li>\u968f\u673a\u68ee\u6797\u673a\u5236\u7684\u5408\u7406\u6027:<ul> <li>\u6811\u4e4b\u95f4\u76f8\u5bf9\u72ec\u7acb, \u800c VB \u53ef\u80fd\u4f1a\u5bfc\u81f4\u6240\u6709\u6811\u5171\u4eab\u76f8\u4f3c\u7684\u6570\u636e\u5b57\u96c6, \u4ece\u800c\u5728\u76f8\u4f3c\u7684\u7279\u5f81\u505a\u51b3\u7b56, \u5bfc\u81f4\u6cdb\u5316\u80fd\u529b\u4e0b\u964d</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#64-xg-boost","title":"6.4 XG Boost","text":"<p>\u6784\u5efa\u4e86\u4e00\u68f5\u51b3\u7b56\u6811\u540e, \u7b2c\u4e8c\u68f5\u51b3\u7b56\u6811\u7684\u6570\u636e\u96c6\u4e0d\u518d\u968f\u673a, \u800c\u662f\u66f4\u503e\u5411\u4e8e\u9009\u62e9\u7b2c\u4e00\u68f5\u51b3\u7b56\u6811\u5206\u7c7b\u9519\u8bef\u7684\u6570\u636e (\u523b\u610f\u7ec3\u4e60)</p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#7","title":"7 \u9009\u62e9\u54ea\u79cd\u6a21\u578b?","text":"<ul> <li>\u51b3\u7b56\u6811 (\u6811\u96c6\u6210)<ul> <li>\u9002\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u636e</li> <li>\u89c4\u6a21\u5c0f\u7684\u51b3\u7b56\u6811\u5bb9\u6613\u88ab\u4eba\u7c7b\u7406\u89e3</li> </ul> </li> <li>\u795e\u7ecf\u7f51\u7edc<ul> <li>\u9002\u7528\u4e8e\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e</li> <li>\u8bad\u7ec3\u5468\u671f\u957f</li> <li>\u9002\u7528\u4e8e\u8fc1\u79fb\u5b66\u4e60</li> <li>\u5bb9\u6613\u7ec4\u5408\u4f7f\u7528</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#8-k-means","title":"8 K-Means","text":"<ul> <li>\u5efa\u7acb\u76f4\u89c9\uff1aK-Means \u662f\u4e00\u79cd\u7528\u805a\u7c7b\u7684\u7b97\u6cd5\uff0c\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a K \u4e2a\u7c07\uff0c\u4f7f\u540c\u7c07\u6570\u636e\u70b9\u66f4\u76f8\u4f3c\uff0c\u4e0d\u540c\u7c07\u7684\u6570\u636e\u70b9\u5dee\u5f02\u66f4\u5927\u3002</li> </ul> <p>\u5176\u6210\u672c\u51fd\u6570\uff1a</p> \\[ J = \\sum_{k=1}^{K} \\sum_{x_i \\in C_k} \\| x_i - \\mu_k \\|^2 \\] <ul> <li>\u521d\u59cb\u5316\uff1a\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u9009\u62e9 K \u4e2a\u70b9\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\uff0c\u8bb0\u4f5c \\(\\mu_{i}\\sim\\mu_{k}\\)</li> <li>\u8fed\u4ee3\u4ee5\u4e0b\u6b65\u9aa4\uff1a<ul> <li>\u5bf9\u6bcf\u4e2a\u6570\u636e\u70b9 \\(x_{i}\\) \u8ba1\u7b97\u5b83\u5230\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\uff0c\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u6700\u8fd1\u7684\u90a3\u4e2a</li> </ul> </li> </ul> \\[ c_i = \\arg\\min_{k} \\| x_i - \\mu_k \\|^2 \\] <ul> <li>\u627e\u5230\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3</li> </ul> \\[ \\mu_k = \\frac{1}{|C_k|} \\sum_{x_i \\in C_k} x_i \\] <ul> <li>\u76f4\u5230\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u518d\u66f4\u65b0\u6216\u8005\u8fbe\u5230\u6700\u5927\u8fed\u4ee3\u6b21\u6570</li> <li>\u6539\u8fdb\u521d\u59cb\u5316<ul> <li>\u8fdb\u884c\u591a\u6b21\u968f\u673a\u7684\u521d\u59cb\u5316\uff0c\u9009\u62e9\u6210\u672c\u51fd\u6570\u6700\u4f4e\u7684\u90a3\u4e2a</li> <li>elbow method</li> <li>\u6839\u636e\u6240\u9700 (\u8bfe\u7a0b\u4e2d\u4ee5\u8863\u670d\u5c3a\u7801\u4e3a\u4f8b\u5b50)</li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#9","title":"9 \u5f02\u5e38\u68c0\u6d4b","text":"<ul> <li>\u5efa\u7acb\u76f4\u89c9\uff1a\u5b83\u901a\u8fc7\u5206\u6790\u6570\u636e\u5206\u5e03\u3001\u7279\u5f81\u4e4b\u95f4\u7684\u5173\u7cfb\u6216\u4f7f\u7528\u6a21\u578b\u5b66\u4e60\u6b63\u5e38\u6570\u636e\u7684\u6a21\u5f0f\uff0c\u8fdb\u800c\u53d1\u73b0\u4e0d\u7b26\u5408\u8fd9\u4e9b\u6a21\u5f0f\u7684\u5f02\u5e38\u503c</li> </ul> <ol> <li>\u8ba1\u7b97\u5747\u503c\u548c\u65b9\u5dee</li> <li>\u4f7f\u7528\u9ad8\u65af\u5206\u5e03\u5efa\u6a21\u6570\u636e</li> </ol> \\[ p(x_j) = \\frac{1}{\\sqrt{2\\pi\\sigma_j^2}} e^{\\left(-\\frac{(x_j - \\mu_j)^2}{2\\sigma_j^2} \\right)} \\] <ol> <li>\u8ba1\u7b97\u6982\u7387</li> </ol> \\[ p(x) = \\prod_{j=1}^{n} p(x_j) \\] <ol> <li>\u9009\u62e9\u5408\u7406\u7684\u9608\u503c<ul> <li>\u5728\u9a8c\u8bc1\u96c6\u4e0a\u9009\u62e9 F1-score \u6700\u4f18\u7684\u9608\u503c</li> </ul> </li> </ol>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#91","title":"9.1 \u8c03\u6574","text":"<p>\u6709\u65f6\u5019\u6570\u636e\u4e0d\u7b26\u5408\u9ad8\u65af\u5206\u5e03\uff0c\u90a3\u4e48\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u53d8\u6362\u5982 \\(x_{i}\\to\\ln{x_{i}}\\)</p>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#10","title":"10 \u534f\u540c\u8fc7\u6ee4","text":"<p>\u4ee5\u7535\u5f71\u4e3a\u4f8b\u5b50 \\(n_{m}\\) \u90e8\u7535\u5f71\uff0c \\(n_{u}\\) \u4e2a\u7528\u6237\uff0c \\(Y_{ij}\\) \u8868\u793a\u7528\u6237 j \u5bf9\u7535\u5f71 i \u7684\u8bc4\u5206 \u8bc4\u5206\u6307\u793a\u77e9\u9635 \\(R_{ij}\\) \u5982\u679c\u7528\u6237 j \u8bc4\u4ef7\u4e86\u7535\u5f71 i \u5219\u503c\u4e3a 1 \u5426\u5219\u4e3a 0 </p> <ul> <li>\u6210\u672c\u51fd\u6570</li> </ul> \\[ J({\\mathbf{x}^{(0)},...,\\mathbf{x}^{(n_m-1)},\\mathbf{w}^{(0)},b^{(0)},...,\\mathbf{w}^{(n_u-1)},b^{(n_u-1)}})=\\frac{1}{2}\\sum_{j=0}^{n_u-1} \\sum_{i=0}^{n_m-1}r(i,j)*(\\mathbf{w}^{(j)} \\cdot \\mathbf{x}^{(i)} + b^{(j)} - y^{(i,j)})^2 +\\text{regularization} \\] <ul> <li>\u5bf9\u6210\u672c\u51fd\u6570\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u53c2\u6570\u6765\u8bad\u7ec3\u6a21\u578b (\u8bfe\u7a0b\u4e2d\u91c7\u7528 tensorflow \u5e93\u51fd\u6570\u5b9e\u73b0 )</li> <li>\u63a8\u5e7f\u5230\u4e8c\u5143\u53ea\u9700\u8981\u8fdb\u884c sigmoid \u7684\u590d\u5408\uff0c\u6210\u672c\u51fd\u6570\u53d8\u6362\u4e3a\u4e8c\u5143\u4ea4\u53c9\u71b5\u5373\u53ef</li> <li>\u534f\u540c\u8fc7\u6ee4\u7684\u5c40\u9650\u6027<ul> <li>\u6570\u636e\u7a00\u758f\u65f6\u6548\u679c\u4e0d\u597d</li> <li>\u51b7\u542f\u52a8\u95ee\u9898\uff1a\u65b0\u52a0\u5165\u7684\u7528\u6237\u6ca1\u6709\u5386\u53f2\u8bc4\u5206\u6570\u636e</li> </ul> </li> <li>\u5f52\u4e00\u5316\u89e3\u51b3\u51b7\u542f\u52a8\u95ee\u9898\uff1a <ul> <li>\\(\\tilde{y}(i,j) = y(i,j) - \\mu^{(j)}\\) \u5176\u4e2d \\(\\mu^{(j)} = \\frac{\\sum_{i=1}^{n_m} r(i,j) y(i,j)}{\\sum_{i=1}^{n_m} r(i,j)}\\) \u9884\u6d4b\u9636\u6bb5\u9700\u52a0\u56de \\(\\mu^{(i)}\\) </li> </ul> </li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#11_1","title":"11 \u57fa\u4e8e\u5185\u5bb9\u7684\u8fc7\u6ee4","text":"<ul> <li>\u6982\u62ec\uff1a\u7ed3\u5408\u7269\u54c1\u7684\u7279\u5f81\u548c\u7528\u6237\u7684\u7279\u5f81 (\u5386\u53f2\u504f\u597d) \u6765\u63a8\u8350</li> <li> <p>\u4e0b\u56fe\u6e05\u6670\u5730\u5c55\u793a\u4e86\u8bad\u7ec3\u903b\u8f91 </p> </li> <li> <p>\\(x_{u}\\) \u548c \\(x_{m}\\) \u7684\u7ef4\u5ea6\u4e0d\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u53ea\u9700\u8981\u8f93\u51fa\u7684 \\(v_{u}\\) \u548c \\(v_{m}\\) \u7ef4\u5ea6\u76f8\u540c</p> </li> <li>\u6210\u672c\u51fd\u6570\uff1a</li> </ul> \\[ \\sum_{(i,j):r(i,j)=1}{(v_{u}^{(j)}\\cdot v_{m}^{(i)}-y^{(i,j)})^2}+regularizationterm \\] <ul> <li>\u4ece\u5927\u578b\u76ee\u5f55\u4e2d\u63a8\u8350: \u5148\u68c0\u7d22 (\u627e\u6700\u76f8\u5173) \u518d\u6392\u5e8f</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/ml/wedml/#12_1","title":"12 \u5f3a\u5316\u5b66\u4e60","text":"<ul> <li> <p>\u5efa\u7acb\u76f4\u89c9\uff1a\u8bbe\u5b9a\u67d0\u79cd\u53cd\u9988\u673a\u5236\uff0c\u4e0d\u65ad\u5c1d\u8bd5\u4e0d\u540c\u7684\u52a8\u4f5c\uff0c\u901a\u8fc7\u53cd\u9988\u7ed3\u679c\u6765\u6539\u8fdb\u51b3\u7b56\uff0c\u4ece\u800c\u627e\u5230\u6700\u4f18\u51b3\u7b56</p> </li> <li> <p>\u8d1d\u5c14\u66fc\u65b9\u7a0b (MDP \u7684\u601d\u60f3)</p> </li> </ul> \\[ Q_{i+1}(s,a) = R + \\gamma \\max_{a'}Q_i(s',a') \\] <ul> <li>\u5bf9 Lunar lander \u7684\u6982\u62ec\uff1a\u968f\u673a\u521d\u59cb\u5316\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e00\u7ec4 w \u548c b\uff0c\u4f7f\u964d\u843d\u5668\u968f\u673a\u8fd0\u52a8\uff0c\u5b58\u50a8 10000 \u7ec4\u6570\u636e\uff0c\u5236\u4f5c\u6210\u8f93\u5165-\u6807\u7b7e\u5bf9\uff0c\u7136\u540e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002\u5176\u4e2d\u8d1d\u5c14\u66fc\u65b9\u7a0b\u7684\u7b2c\u4e8c\u9879\u662f\u7531\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u7684\u3002\u8fd9\u79cd\u8bad\u7ec3\u65b9\u6cd5\u88ab\u79f0\u4e3a DQN \u7b97\u6cd5 (Deep Q Network)</li> <li>\u5728\u521b\u5efa\u6570\u636e\u7684\u65f6\u5019\u91c7\u7528\u4e00\u79cd\u66f4\u79d1\u5b66\u7684\u65b9\u5f0f\u2014\u2014\u2014\u2014 \\(\\epsilon\\) -\u8d2a\u5fc3\u7b97\u6cd5\uff1a\u4ee5\u4e00\u4e2a\u5c0f\u6982\u7387 \u03f5 \u9009\u62e9\u4e00\u4e2a\u968f\u673a\u7684\u52a8\u4f5c\u8fdb\u884c\u63a2\u7d22\uff0c\u800c\u4ee5 1- \\(\\epsilon\\) \u7684\u6982\u7387\u8fdb\u884c\u56de\u62a5\u6700\u5927\u7684\u63a2\u7d22\u3002<ul> <li>\u5408\u7406\u6027\uff1a\u9632\u6b62\u4e86\u5c40\u90e8\u6700\u4f18\uff0c\u610f\u601d\u662f\u53ef\u80fd\u5bfc\u81f4\u6c38\u8fdc\u4e0d\u4f1a\u63a2\u7d22\u5230\u67d0\u4e2a\u6709\u53ef\u80fd\u5f15\u53d1\u597d\u7ed3\u679c\u7684\u52a8\u4f5c</li> <li>\u4e00\u822c\u91c7\u7528\u9010\u6b65\u51cf\u5c0f \\(\\epsilon\\) \u7684\u505a\u6cd5</li> </ul> </li> </ul> <p>\u5173\u4e8e DNQ \u7684\u4e00\u4e9b\u7406\u89e3\uff1a</p> <ul> <li>\u5982\u679c\u72b6\u6001\u503c\u662f\u79bb\u6563\u7684\uff0c\u90a3\u4e48 Q \u5b66\u4e60\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u6bcf\u4e2a\u72b6\u6001\u548c\u52a8\u4f5c\u6765\u66f4\u65b0 Q \u7684\u503c\uff0c\u4f46\u662f\u5982\u679c\u72b6\u6001\u65f6\u8fde\u7eed\u7684\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u4e0d\u53ef\u884c</li> <li>\u6240\u4ee5\u5f15\u5165\u4e86 DNQ \uff0c\u901a\u8fc7\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6765\u4f7f\u5f97\u8f93\u51fa\u7684 Q (s, a) \u5c3d\u53ef\u80fd\u6700\u4f18</li> <li>\u7531\u4e8e\u6bcf\u6b21\u66f4\u65b0 Q \u7f51\u7edc\u65f6\uff0c\u76ee\u6807\u9879 y \u4f9d\u8d56\u4e8e\u5f53\u524d\u7f51\u7edc\u7684\u8f93\u51fa \\(Q(s^{'},a^{'};w)\\) \uff0c\u6240\u4ee5\u6210\u672c\u51fd\u6570\u7684\u6807\u7b7e\u548c\u9884\u6d4b\u503c\u90fd\u5728\u53d8\u5316\uff0c\u53ef\u80fd\u4f1a\u4e0d\u7a33\u5b9a (\u6211\u4e5f\u4e0d\u592a\u7406\u89e3\u8fd9\u91cc\u7684\u4e0d\u7a33\u5b9a)</li> <li>\u4e8e\u662f\u5f15\u5165\u76ee\u6807\u7f51\u7edc\uff0c\u76ee\u6807\u7f51\u7edc\u7684\u53c2\u6570\u53ea\u6709\u7ecf\u8fc7\u4e00\u5b9a\u7684\u6b65\u957f\u624d\u4f1a\u66f4\u65b0\uff0c\u5e76\u4e14\u91c7\u7528\u8f6f\u66f4\u65b0\u7684\u65b9\u5f0f\uff0c \\(w^-\\leftarrow \\tau w + (1 - \\tau) w^-\\) \u8fd9\u6837\u53ef\u4ee5\u4f7f\u66f4\u65b0\u53d8\u5f97\u66f4\u5e73\u6ed1\u3002</li> </ul>","tags":["AI","course_notes"]},{"location":"ai/prompt/method/","title":"Method","text":"<code>#AI</code>","tags":["AI"]},{"location":"ai/prompt/method/#_1","title":"\u63d0\u793a\u8bcd\u5de5\u7a0b","text":"<p> \u7ea6 1640 \u4e2a\u5b57  166 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <ul> <li>\u4ecd\u5728\u63a2\u7d22</li> <li>\u5434\u6069\u8fbe Prompt Engineering \u82f1\u6587\u539f\u7248</li> <li>Prompt Engineering Guide</li> </ul>","tags":["AI"]},{"location":"ai/prompt/method/#base-llm-and-instruction-tuned-llm","title":"Base LLM and Instruction Tuned LLM","text":"\u5bf9\u6bd4\u9879 Base LLM\uff08\u57fa\u7840\u6a21\u578b\uff09 Instruction-Tuned LLM\uff08\u6307\u4ee4\u5fae\u8c03\u6a21\u578b\uff09 \u8bad\u7ec3\u76ee\u6807 \u9884\u6d4b\u4e0b\u4e00\u4e2a\u5355\u8bcd\uff0c\u5b66\u4e60\u8bed\u8a00\u6a21\u5f0f \u7406\u89e3\u5e76\u6267\u884c\u7528\u6237\u7684\u6307\u4ee4 \u5fae\u8c03\u65b9\u5f0f \u4ec5\u57fa\u4e8e\u5927\u89c4\u6a21\u6587\u672c\u6570\u636e\u8bad\u7ec3 \u989d\u5916\u4f7f\u7528\u4eba\u7c7b\u6307\u4ee4\u6570\u636e\u96c6\u8fdb\u884c\u5fae\u8c03 \u4ea4\u4e92\u65b9\u5f0f \u9700\u8981\u975e\u5e38\u5177\u4f53\u7684 Prompt \u8bbe\u8ba1 \u76f4\u63a5\u7406\u89e3\u7528\u6237\u7684\u4efb\u52a1\u5e76\u8f93\u51fa\u7b54\u6848 \u9002\u7528\u573a\u666f \u9002\u7528\u4e8e\u81ea\u7531\u6587\u672c\u751f\u6210\uff08\u5982\u6587\u7ae0\u5199\u4f5c\u3001\u521b\u610f\u5185\u5bb9\uff09 \u9002\u7528\u4e8e\u95ee\u7b54\u3001\u4ee3\u7801\u3001\u5bf9\u8bdd\u3001\u4efb\u52a1\u6267\u884c \u8f93\u51fa\u98ce\u683c \u53ef\u80fd\u4f1a\u8f93\u51fa\u5197\u957f\u3001\u6a21\u7cca\u7684\u5185\u5bb9 \u76f4\u63a5\u56de\u7b54\u95ee\u9898\uff0c\u66f4\u7b26\u5408\u4eba\u7c7b\u671f\u671b \u662f\u5426\u7ecf\u8fc7 RLHF \u274c \u901a\u5e38\u6ca1\u6709 \u2705 \u53ef\u80fd\u4f7f\u7528\u4eba\u7c7b\u53cd\u9988\u5f3a\u5316\u5b66\u4e60\u4f18\u5316 <ul> <li>\u5982\u679c\u4f60\u95ee\u4e00\u4e2a Base LLM\uff1a</li> </ul> <p>\"What is the capital of France?\"\uff08\u6cd5\u56fd\u7684\u9996\u90fd\u662f\u54ea\u91cc\uff1f\uff09</p> <p>\u53ef\u80fd\u7684\u56de\u7b54\uff1a</p> <p>\"The capital of France is a city located in Europe. It is known for its culture and history. Many people visit it every year.\"</p> <p>\u7531\u4e8e Base LLM \u4ec5\u57fa\u4e8e\u6a21\u5f0f\u5339\u914d\uff0c\u5b83\u53ef\u80fd\u65e0\u6cd5\u76f4\u63a5\u7ed9\u51fa \"Paris\" \u8fd9\u6837\u7cbe\u51c6\u7684\u7b54\u6848\uff0c\u800c\u662f\u4f1a\u503e\u5411\u4e8e\u751f\u6210\u8f83\u4e00\u822c\u6027\u7684\u6587\u672c\u3002</p> <ul> <li>\u5982\u679c\u4f60\u95ee\u4e00\u4e2a Instruction Tund LLM \u540c\u6837\u7684\u95ee\u9898</li> </ul> <p>\u53ef\u80fd\u7684\u56de\u7b54\uff1a</p> <p>\"Paris\"</p> <p>\u5373\u4f7f\u4f60\u8f93\u5165\uff1a</p> <p>\"Give me the capital of France in one word.\"</p> <p>\u4e5f\u80fd\u6b63\u786e\u7406\u89e3\u5e76\u56de\u7b54\uff1a</p> <p>\"Paris\" </p> <ul> <li>Instruction Tuned LLM \u5728 Base LLM \u4e0a\u989d\u5916\u8bad\u7ec3</li> <li>\u73b0\u4ee3 AI \u52a9\u624b\u57fa\u672c\u90fd\u57fa\u4e8e Instruction Tuned LLM</li> <li>\u4e00\u53e5\u8bdd\u603b\u7ed3: \u5982\u679cBase LLM \u662f\u8bed\u8a00\u6a21\u5f0f\u751f\u6210\u5668\uff0c\u90a3\u4e48 Instruction Tune LLM \u5c31\u662f\u80fd\u542c\u61c2\u4eba\u8bdd\u7684\u667a\u80fd\u52a9\u624b</li> </ul>","tags":["AI"]},{"location":"ai/prompt/method/#prompt","title":"\u7f16\u5199 Prompt \u7684\u539f\u5219","text":"<p>PS: \u4e0b\u8ff0\u6240\u6709\u4ee3\u7801\u9002\u7528\u4e8e\u901a\u8fc7 API \u8fdb\u884c\u6587\u672c\u4ea4\u4e92\u7684 AI\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e GUI \u76f4\u63a5\u8f93\u5165\u7684 AI \u754c\u9762\u3002\u5728\u4e0e\u540e\u8005\u4ea4\u4e92\u65f6\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u5373\u53ef</p>","tags":["AI"]},{"location":"ai/prompt/method/#_2","title":"\u539f\u5219\u4e00\uff1a\u7f16\u5199\u6e05\u6670\u5177\u4f53\u7684\u6307\u4ee4","text":"<p>I. \u7b56\u7565\u4e00\uff1a\u4f7f\u7528\u5206\u9694\u7b26\u6e05\u6670\u5730\u8868\u793a\u8f93\u5165\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u53ef\u4ee5\u662f ```, \"\", &lt;&gt;\u7b49</p> Python<pre><code>text = f\"\"\"\n\u4f60\u5e94\u8be5\u63d0\u4f9b\u5c3d\u53ef\u80fd\u6e05\u6670\u3001\u5177\u4f53\u7684\u6307\u793a\uff0c\u4ee5\u8868\u8fbe\u4f60\u5e0c\u671b\u6a21\u578b\u6267\u884c\u7684\u4efb\u52a1\u3002\\\n\u8fd9\u5c06\u5f15\u5bfc\u6a21\u578b\u671d\u5411\u6240\u9700\u7684\u8f93\u51fa\uff0c\u5e76\u964d\u4f4e\u6536\u5230\u65e0\u5173\u6216\u4e0d\u6b63\u786e\u54cd\u5e94\u7684\u53ef\u80fd\u6027\u3002\\\n\u4e0d\u8981\u5c06\u5199\u6e05\u6670\u7684\u63d0\u793a\u4e0e\u5199\u7b80\u77ed\u7684\u63d0\u793a\u6df7\u6dc6\u3002\\\n\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u66f4\u957f\u7684\u63d0\u793a\u53ef\u4ee5\u4e3a\u6a21\u578b\u63d0\u4f9b\u66f4\u591a\u7684\u6e05\u6670\u5ea6\u548c\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u4ece\u800c\u5bfc\u81f4\u66f4\u8be6\u7ec6\u548c\u76f8\u5173\u7684\u8f93\u51fa\u3002\n\"\"\"\n# \u9700\u8981\u603b\u7ed3\u7684\u6587\u672c\u5185\u5bb9\nprompt = f\"\"\"\n\u628a\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u6587\u672c\u603b\u7ed3\u6210\u4e00\u53e5\u8bdd\u3002\n'''{text}'''\n\"\"\"\n# \u6307\u4ee4\u5185\u5bb9\uff0c\u4f7f\u7528 ``` \u6765\u5206\u9694\u6307\u4ee4\u548c\u5f85\u603b\u7ed3\u7684\u5185\u5bb9\nresponse = get_completion(prompt)\nprint(response)\n</code></pre> <ul> <li><code>response = get_completion(prompt)</code> \uff1a\u5c06 <code>prompt</code> \u4f5c\u4e3a\u8f93\u5165\uff0c\u53d1\u9001\u7ed9\u67d0\u4e2a AI \u6a21\u578b\uff08\u4f8b\u5982 GPT\uff09\uff0c\u7136\u540e\u83b7\u53d6\u5b83\u7684\u56de\u590d\uff0c\u5e76\u5b58\u50a8\u5728 <code>response</code> \u53d8\u91cf\u4e2d\u3002 </li> <li><code>print(response)</code> : \u6253\u5370\u56de\u7b54</li> </ul> <p>II. \u7b56\u7565\u4e8c\uff1a\u8981\u6c42\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u662f json\u3001HTML \u7b49\u683c\u5f0f</p> Python<pre><code>prompt = f\"\"\"\n\u8bf7\u751f\u6210\u5305\u62ec\u4e66\u540d\u3001\u4f5c\u8005\u548c\u7c7b\u522b\u7684\u4e09\u672c\u865a\u6784\u4e66\u7c4d\u6e05\u5355\uff0c\\\n\u5e76\u4ee5 JSON \u683c\u5f0f\u63d0\u4f9b\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u952e:book_id\u3001title\u3001author\u3001genre\u3002\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n</code></pre> <p>III. \u7b56\u7565\u4e09\uff1a\u8981\u6c42\u6a21\u578b\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6</p> Python<pre><code># \u6709\u6b65\u9aa4\u7684\u6587\u672c\ntext_1 = f\"\"\"\n\u6ce1\u4e00\u676f\u8336\u5f88\u5bb9\u6613\u3002\u9996\u5148\uff0c\u9700\u8981\u628a\u6c34\u70e7\u5f00\u3002\\\n\u5728\u7b49\u5f85\u671f\u95f4\uff0c\u62ff\u4e00\u4e2a\u676f\u5b50\u5e76\u628a\u8336\u5305\u653e\u8fdb\u53bb\u3002\\\n\u4e00\u65e6\u6c34\u8db3\u591f\u70ed\uff0c\u5c31\u628a\u5b83\u5012\u5728\u8336\u5305\u4e0a\u3002\\\n\u7b49\u5f85\u4e00\u4f1a\u513f\uff0c\u8ba9\u8336\u53f6\u6d78\u6ce1\u3002\u51e0\u5206\u949f\u540e\uff0c\u53d6\u51fa\u8336\u5305\u3002\\\n\u5982\u679c\u4f60\u613f\u610f\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e9b\u7cd6\u6216\u725b\u5976\u8c03\u5473\u3002\\\n\u5c31\u8fd9\u6837\uff0c\u4f60\u53ef\u4ee5\u4eab\u53d7\u4e00\u676f\u7f8e\u5473\u7684\u8336\u4e86\u3002\n\"\"\"\nprompt = f\"\"\"\n\u60a8\u5c06\u83b7\u5f97\u7531\u4e09\u4e2a\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u6587\u672c\u3002\\\n\u5982\u679c\u5b83\u5305\u542b\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\uff0c\u5219\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u91cd\u65b0\u7f16\u5199\u8fd9\u4e9b\u6307\u4ee4\uff1a\n\n\u7b2c\u4e00\u6b65 - ...\n\u7b2c\u4e8c\u6b65 - \u2026\n\u2026\n\u7b2cN\u6b65 - \u2026\n\n\u5982\u679c\u6587\u672c\u4e2d\u4e0d\u5305\u542b\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\uff0c\u5219\u76f4\u63a5\u5199\u201c\u672a\u63d0\u4f9b\u6b65\u9aa4\u201d\u3002\"\n\\\"\\\"\\\"{text_1}\\\"\\\"\\\"\n\"\"\"\nresponse = get_completion(prompt)\nprint(\"Text 1 \u7684\u603b\u7ed3:\")\nprint(response)\n</code></pre> <p>IV. \u7b56\u7565\u56db\uff1a\u63d0\u4f9b\u5c11\u91cf\u793a\u4f8b</p> Python<pre><code>prompt = f\"\"\"\n\u4f60\u7684\u4efb\u52a1\u662f\u4ee5\u4e00\u81f4\u7684\u98ce\u683c\u56de\u7b54\u95ee\u9898\u3002\n\n&lt;\u5b69\u5b50&gt;: \u6559\u6211\u8010\u5fc3\u3002\n\n&lt;\u7956\u7236\u6bcd&gt;: \u6316\u51fa\u6700\u6df1\u5ce1\u8c37\u7684\u6cb3\u6d41\u6e90\u4e8e\u4e00\u5904\u4e0d\u8d77\u773c\u7684\u6cc9\u773c\uff1b\u6700\u5b8f\u4f1f\u7684\u4ea4\u54cd\u4e50\u4ece\u5355\u4e00\u7684\u97f3\u7b26\u5f00\u59cb\uff1b\u6700\u590d\u6742\u7684\u6302\u6bef\u4ee5\u4e00\u6839\u5b64\u72ec\u7684\u7ebf\u5f00\u59cb\u7f16\u7ec7\u3002\n\n&lt;\u5b69\u5b50&gt;: \u6559\u6211\u97e7\u6027\u3002\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n</code></pre>","tags":["AI"]},{"location":"ai/prompt/method/#_3","title":"\u539f\u5219\u4e8c\uff1a\u7ed9\u6a21\u578b\u65f6\u95f4\u53bb\u601d\u8003","text":"<p>I. \u7b56\u7565\u4e00\uff1a\u6307\u5b9a\u5b8c\u6210\u4efb\u52a1\u6240\u9700\u7684\u6b65\u9aa4</p> Python<pre><code>text = f\"\"\"\n\u5728\u4e00\u4e2a\u8ff7\u4eba\u7684\u6751\u5e84\u91cc\uff0c\u5144\u59b9\u6770\u514b\u548c\u5409\u5c14\u51fa\u53d1\u53bb\u4e00\u4e2a\u5c71\u9876\u4e95\u91cc\u6253\u6c34\u3002\\\n\u4ed6\u4eec\u4e00\u8fb9\u5531\u7740\u6b22\u4e50\u7684\u6b4c\uff0c\u4e00\u8fb9\u5f80\u4e0a\u722c\uff0c\\\n\u7136\u800c\u4e0d\u5e78\u964d\u4e34\u2014\u2014\u6770\u514b\u7eca\u4e86\u4e00\u5757\u77f3\u5934\uff0c\u4ece\u5c71\u4e0a\u6eda\u4e86\u4e0b\u6765\uff0c\u5409\u5c14\u7d27\u968f\u5176\u540e\u3002\\\n\u867d\u7136\u7565\u6709\u4e9b\u6454\u4f24\uff0c\u4f46\u4ed6\u4eec\u8fd8\u662f\u56de\u5230\u4e86\u6e29\u99a8\u7684\u5bb6\u4e2d\u3002\\\n\u5c3d\u7ba1\u51fa\u4e86\u8fd9\u6837\u7684\u610f\u5916\uff0c\u4ed6\u4eec\u7684\u5192\u9669\u7cbe\u795e\u4f9d\u7136\u6ca1\u6709\u51cf\u5f31\uff0c\u7ee7\u7eed\u5145\u6ee1\u6109\u60a6\u5730\u63a2\u7d22\u3002\n\"\"\"\n# example 1\nprompt_1 = f\"\"\"\n\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n1-\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\u4e0b\u9762\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u6587\u672c\u3002\n2-\u5c06\u6458\u8981\u7ffb\u8bd1\u6210\u6cd5\u8bed\u3002\n3-\u5728\u6cd5\u8bed\u6458\u8981\u4e2d\u5217\u51fa\u6bcf\u4e2a\u4eba\u540d\u3002\n4-\u8f93\u51fa\u4e00\u4e2a JSON \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u952e\uff1aFrench_summary\uff0cnum_names\u3002\n\n\u8bf7\u7528\u6362\u884c\u7b26\u5206\u9694\u60a8\u7684\u7b54\u6848\u3002\n\nText:\n'''{text}'''\n\"\"\"\nresponse = get_completion(prompt_1)\nprint(\"prompt 1:\")\nprint(response)\n</code></pre> Python<pre><code>prompt_2 = f\"\"\"\n1-\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\u4e0b\u9762\u7528&lt;&gt;\u62ec\u8d77\u6765\u7684\u6587\u672c\u3002\n2-\u5c06\u6458\u8981\u7ffb\u8bd1\u6210\u82f1\u8bed\u3002\n3-\u5728\u82f1\u8bed\u6458\u8981\u4e2d\u5217\u51fa\u6bcf\u4e2a\u540d\u79f0\u3002\n4-\u8f93\u51fa\u4e00\u4e2a JSON \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u952e\uff1aEnglish_summary\uff0cnum_names\u3002\n\n\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u683c\u5f0f\uff1a\n\u6587\u672c\uff1a&lt;\u8981\u603b\u7ed3\u7684\u6587\u672c&gt;\n\u6458\u8981\uff1a&lt;\u6458\u8981&gt;\n\u7ffb\u8bd1\uff1a&lt;\u6458\u8981\u7684\u7ffb\u8bd1&gt;\n\u540d\u79f0\uff1a&lt;\u82f1\u8bed\u6458\u8981\u4e2d\u7684\u540d\u79f0\u5217\u8868&gt;\n\u8f93\u51fa JSON\uff1a&lt;\u5e26\u6709 English_summary \u548c num_names \u7684 JSON&gt;\n\nText: &lt;{text}&gt;\n\"\"\"\nresponse = get_completion(prompt_2)\nprint(\"\\nprompt 2:\")\nprint(response)\n</code></pre> <p>II. \u7b56\u7565\u4e8c\uff1a\u6307\u5bfc\u6a21\u578b\u5728\u4e0b\u7ed3\u8bba\u524d\u5148\u627e\u51fa\u4e00\u4e2a\u81ea\u5df1\u7684\u89e3\u6cd5</p> Python<pre><code>prompt = f\"\"\"\n\u5224\u65ad\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5426\u6b63\u786e\u3002\n\n\u95ee\u9898:\n\u6211\u6b63\u5728\u5efa\u9020\u4e00\u4e2a\u592a\u9633\u80fd\u53d1\u7535\u7ad9\uff0c\u9700\u8981\u5e2e\u52a9\u8ba1\u7b97\u8d22\u52a1\u3002\n\n    \u571f\u5730\u8d39\u7528\u4e3a 100\u7f8e\u5143/\u5e73\u65b9\u82f1\u5c3a\n    \u6211\u53ef\u4ee5\u4ee5 250\u7f8e\u5143/\u5e73\u65b9\u82f1\u5c3a\u7684\u4ef7\u683c\u8d2d\u4e70\u592a\u9633\u80fd\u7535\u6c60\u677f\n    \u6211\u5df2\u7ecf\u8c08\u5224\u597d\u4e86\u7ef4\u62a4\u5408\u540c\uff0c\u6bcf\u5e74\u9700\u8981\u652f\u4ed8\u56fa\u5b9a\u768410\u4e07\u7f8e\u5143\uff0c\u5e76\u989d\u5916\u652f\u4ed8\u6bcf\u5e73\u65b9\u82f1\u5c3a10\u7f8e\u5143\n    \u4f5c\u4e3a\u5e73\u65b9\u82f1\u5c3a\u6570\u7684\u51fd\u6570\uff0c\u9996\u5e74\u8fd0\u8425\u7684\u603b\u8d39\u7528\u662f\u591a\u5c11\u3002\n\n\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\uff1a\n\u8bbex\u4e3a\u53d1\u7535\u7ad9\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5e73\u65b9\u82f1\u5c3a\u3002\n\u8d39\u7528\uff1a\n\n    \u571f\u5730\u8d39\u7528\uff1a100x\n    \u592a\u9633\u80fd\u7535\u6c60\u677f\u8d39\u7528\uff1a250x\n    \u7ef4\u62a4\u8d39\u7528\uff1a100,000\u7f8e\u5143+100x\n    \u603b\u8d39\u7528\uff1a100x+250x+100,000\u7f8e\u5143+100x=450x+100,000\u7f8e\u5143\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n</code></pre> <p>\u63a5\u4e0b\u6765\u8981\u6c42 AI \u7ed9\u51fa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848</p> Python<pre><code>prompt = f\"\"\"\n\u8bf7\u5224\u65ad\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5426\u6b63\u786e\uff0c\u8bf7\u901a\u8fc7\u5982\u4e0b\u6b65\u9aa4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\n\u6b65\u9aa4\uff1a\n\n    \u9996\u5148\uff0c\u81ea\u5df1\u89e3\u51b3\u95ee\u9898\u3002\n    \u7136\u540e\u5c06\u4f60\u7684\u89e3\u51b3\u65b9\u6848\u4e0e\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u8bc4\u4f30\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5426\u6b63\u786e\u3002\u5728\u81ea\u5df1\u5b8c\u6210\u95ee\u9898\u4e4b\u524d\uff0c\u8bf7\u52ff\u51b3\u5b9a\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5426\u6b63\u786e\u3002\n\n\u4f7f\u7528\u4ee5\u4e0b\u683c\u5f0f\uff1a\n\n    \u95ee\u9898\uff1a\u95ee\u9898\u6587\u672c\n    \u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u6587\u672c\n    \u5b9e\u9645\u89e3\u51b3\u65b9\u6848\u548c\u6b65\u9aa4\uff1a\u5b9e\u9645\u89e3\u51b3\u65b9\u6848\u548c\u6b65\u9aa4\u6587\u672c\n    \u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\u548c\u5b9e\u9645\u89e3\u51b3\u65b9\u6848\u662f\u5426\u76f8\u540c\uff1a\u662f\u6216\u5426\n    \u5b66\u751f\u7684\u6210\u7ee9\uff1a\u6b63\u786e\u6216\u4e0d\u6b63\u786e\n\n\u95ee\u9898\uff1a\n\n    \u6211\u6b63\u5728\u5efa\u9020\u4e00\u4e2a\u592a\u9633\u80fd\u53d1\u7535\u7ad9\uff0c\u9700\u8981\u5e2e\u52a9\u8ba1\u7b97\u8d22\u52a1\u3002 \n    - \u571f\u5730\u8d39\u7528\u4e3a\u6bcf\u5e73\u65b9\u82f1\u5c3a100\u7f8e\u5143\n    - \u6211\u53ef\u4ee5\u4ee5\u6bcf\u5e73\u65b9\u82f1\u5c3a250\u7f8e\u5143\u7684\u4ef7\u683c\u8d2d\u4e70\u592a\u9633\u80fd\u7535\u6c60\u677f\n    - \u6211\u5df2\u7ecf\u8c08\u5224\u597d\u4e86\u7ef4\u62a4\u5408\u540c\uff0c\u6bcf\u5e74\u9700\u8981\u652f\u4ed8\u56fa\u5b9a\u768410\u4e07\u7f8e\u5143\uff0c\u5e76\u989d\u5916\u652f\u4ed8\u6bcf\u5e73\u65b9\u82f1\u5c3a10\u7f8e\u5143\n    \u4f5c\u4e3a\u5e73\u65b9\u82f1\u5c3a\u6570\u7684\u51fd\u6570\uff0c\u9996\u5e74\u8fd0\u8425\u7684\u603b\u8d39\u7528\u662f\u591a\u5c11\u3002\n\n\u5b66\u751f\u7684\u89e3\u51b3\u65b9\u6848\uff1a\n\n    \u8bbex\u4e3a\u53d1\u7535\u7ad9\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5e73\u65b9\u82f1\u5c3a\u3002\n    \u8d39\u7528\uff1a\n    1. \u571f\u5730\u8d39\u7528\uff1a100x\n    2. \u592a\u9633\u80fd\u7535\u6c60\u677f\u8d39\u7528\uff1a250x\n    3. \u7ef4\u62a4\u8d39\u7528\uff1a100,000+100x\n    \u603b\u8d39\u7528\uff1a100x+250x+100,000+100x=450x+100,000\n\n\u5b9e\u9645\u89e3\u51b3\u65b9\u6848\u548c\u6b65\u9aa4\uff1a\n\"\"\"\nresponse = get_completion(prompt)\nprint(response)\n</code></pre>","tags":["AI"]},{"location":"ai/prompt/method/#_4","title":"\u5c40\u9650\u6027","text":"<p><code>python  prompt = f\"\"\" \u544a\u8bc9\u6211 Boie \u516c\u53f8\u751f\u4ea7\u7684 AeroGlide UltraSlim Smart Toothbrush \u7684\u76f8\u5173\u4fe1\u606f \"\"\" response = get_completion(prompt) print(response)</code></p> <p>```</p>","tags":["AI"]},{"location":"ai/prompt/method/#response","title":"response","text":"<p>Boie\u516c\u53f8\u751f\u4ea7\u7684AeroGlide UltraSlim Smart Toothbrush\u662f\u4e00\u6b3e\u667a\u80fd\u7259\u5237\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ol> <li> <p>\u8d85\u8584\u8bbe\u8ba1\uff1a\u5237\u5934\u4ec5\u67090.8\u6beb\u7c73\u7684\u539a\u5ea6\uff0c\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u8fdb\u5165\u53e3\u8154\u6df1\u5904\uff0c\u6e05\u6d01\u66f4\u5f7b\u5e95\u3002</p> </li> <li> <p>\u667a\u80fd\u611f\u5e94\uff1a\u7259\u5237\u914d\u5907\u4e86\u667a\u80fd\u611f\u5e94\u6280\u672f\uff0c\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u5237\u5934\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u6bcf\u4e2a\u90e8\u4f4d\u90fd\u5f97\u5230\u5145\u5206\u7684\u6e05\u6d01\u3002</p> </li> <li> <p>\u9ad8\u6548\u6e05\u6d01\uff1a\u7259\u5237\u91c7\u7528\u4e86\u9ad8\u901f\u632f\u52a8\u6280\u672f\uff0c\u6bcf\u5206\u949f\u53ef\u8fbe\u523040000\u6b21\uff0c\u53ef\u4ee5\u6709\u6548\u53bb\u9664\u7259\u83cc\u6591\u548c\u6c61\u6e0d\u3002</p> </li> <li> <p>\u8f7b\u677e\u643a\u5e26\uff1a\u7259\u5237\u91c7\u7528\u4e86\u4fbf\u643a\u5f0f\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u8f7b\u677e\u653e\u5165\u53e3\u888b\u6216\u65c5\u884c\u5305\u4e2d\uff0c\u968f\u65f6\u968f\u5730\u8fdb\u884c\u53e3\u8154\u6e05\u6d01\u3002</p> </li> <li> <p>\u73af\u4fdd\u6750\u6599\uff1a\u7259\u5237\u91c7\u7528\u4e86\u73af\u4fdd\u6750\u6599\u5236\u9020\uff0c\u4e0d\u542b\u6709\u5bb3\u7269\u8d28\uff0c\u5bf9\u73af\u5883\u53cb\u597d\u3002</p> </li> </ol> <p>\u603b\u4e4b\uff0cBoie\u516c\u53f8\u751f\u4ea7\u7684AeroGlide UltraSlim Smart Toothbrush\u662f\u4e00\u6b3e\u9ad8\u6548\u3001\u667a\u80fd\u3001\u73af\u4fdd\u7684\u7259\u5237\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u8f7b\u677e\u4fdd\u6301\u53e3\u8154\u5065\u5eb7\u3002 Text Only<pre><code>\u5b9e\u9645\u4e0a Boie \u516c\u53f8\u771f\u5b9e\u5b58\u5728\uff0c\u800c AeroGlide UltraSlim Smart Toothbrush \u8fd9\u4e00\u4ea7\u54c1\u5e76\u4e0d\u5b58\u5728\uff0c\u4f46 ChatGPT \u8fd8\u662f\u4e00\u672c\u6b63\u7ecf\u5730\u7f16\u9020\u4e86\u7b54\u6848\n\n## \u8fed\u4ee3\u5f0f\u63d0\u793a\u5f00\u53d1\n### \u4efb\u52a1\u2014\u2014\u4ece\u4ea7\u54c1\u8bf4\u660e\u4e66\u751f\u6210\u4e00\u4efd\u8425\u9500\u4ea7\u54c1\u63cf\u8ff0\n- `fact_sheet_chair` \u4e2d\u5305\u542b\u7684\u662f\u4ea7\u54c1\u8bf4\u660e\u4e66\u4e2d\u7684\u5185\u5bb9\n- \u9274\u4e8e\u56de\u7b54\u592a\u957f\u5c31\u6ca1\u653e\u8fdb\u6765\uff0c\u53ea\u9610\u8ff0\u4e86\u56de\u7b54\u4e2d\u7684\u95ee\u9898\n</code></pre></p>","tags":["AI"]},{"location":"ai/prompt/method/#prompt-1","title":"prompt-1","text":"<p>\u4f60\u7684\u4efb\u52a1\u662f\u5e2e\u52a9\u8425\u9500\u56e2\u961f\u57fa\u4e8e\u6280\u672f\u8bf4\u660e\u4e66\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1\u7684\u8425\u9500\u63cf\u8ff0\u3002 \u6839\u636e<code>\u6807\u8bb0\u7684\u6280\u672f\u8bf4\u660e\u4e66\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u7f16\u5199\u4e00\u4e2a\u4ea7\u54c1\u63cf\u8ff0\u3002 \u6280\u672f\u8bf4\u660e:</code>``` Text Only<pre><code>\u95ee\u9898 1\uff1a\u751f\u6210\u6587\u672c\u592a\u957f\n</code></pre></p>","tags":["AI"]},{"location":"ai/prompt/method/#prompt-2","title":"prompt-2","text":"<p>\u60a8\u7684\u4efb\u52a1\u662f\u5e2e\u52a9\u8425\u9500\u56e2\u961f\u57fa\u4e8e\u6280\u672f\u8bf4\u660e\u4e66\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1\u7684\u96f6\u552e\u7f51\u7ad9\u63cf\u8ff0\u3002 \u6839\u636e<code>\u6807\u8bb0\u7684\u6280\u672f\u8bf4\u660e\u4e66\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u7f16\u5199\u4e00\u4e2a\u4ea7\u54c1\u63cf\u8ff0\u3002 \u4f7f\u7528\u6700\u591a50\u4e2a\u8bcd\u3002 \u6280\u672f\u89c4\u683c\uff1a</code>``` Text Only<pre><code>\u95ee\u9898 2\uff1a\u6587\u672c\u5173\u6ce8\u9519\u8bef\u7ec6\u8282\n</code></pre></p>","tags":["AI"]},{"location":"ai/prompt/method/#prompt-3","title":"prompt-3","text":"<p>\u60a8\u7684\u4efb\u52a1\u662f\u5e2e\u52a9\u8425\u9500\u56e2\u961f\u57fa\u4e8e\u6280\u672f\u8bf4\u660e\u4e66\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1\u7684\u96f6\u552e\u7f51\u7ad9\u63cf\u8ff0\u3002 \u6839\u636e```\u6807\u8bb0\u7684\u6280\u672f\u8bf4\u660e\u4e66\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u7f16\u5199\u4e00\u4e2a\u4ea7\u54c1\u63cf\u8ff0\u3002 \u8be5\u63cf\u8ff0\u9762\u5411\u5bb6\u5177\u96f6\u552e\u5546\uff0c\u56e0\u6b64\u5e94\u5177\u6709\u6280\u672f\u6027\u8d28\uff0c\u5e76\u4fa7\u91cd\u4e8e\u4ea7\u54c1\u7684\u6750\u6599\u6784\u9020\u3002 \u4f7f\u7528\u6700\u591a50\u4e2a\u5355\u8bcd\u3002 \u6280\u672f\u89c4\u683c\uff1a Text Only<pre><code>\u95ee\u9898 3\uff1a\u9700\u8981\u4e00\u4e2a\u8868\u683c\u5f62\u5f0f\u7684\u63cf\u8ff0\n</code></pre></p>","tags":["AI"]},{"location":"ai/prompt/method/#prompt-4","title":"prompt-4","text":"<p>\u60a8\u7684\u4efb\u52a1\u662f\u5e2e\u52a9\u8425\u9500\u56e2\u961f\u57fa\u4e8e\u6280\u672f\u8bf4\u660e\u4e66\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1\u7684\u96f6\u552e\u7f51\u7ad9\u63cf\u8ff0\u3002 \u6839\u636e<code>\u6807\u8bb0\u7684\u6280\u672f\u8bf4\u660e\u4e66\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u7f16\u5199\u4e00\u4e2a\u4ea7\u54c1\u63cf\u8ff0\u3002 \u8be5\u63cf\u8ff0\u9762\u5411\u5bb6\u5177\u96f6\u552e\u5546\uff0c\u56e0\u6b64\u5e94\u5177\u6709\u6280\u672f\u6027\u8d28\uff0c\u5e76\u4fa7\u91cd\u4e8e\u4ea7\u54c1\u7684\u6750\u6599\u6784\u9020\u3002 \u5728\u63cf\u8ff0\u672b\u5c3e\uff0c\u5305\u62ec\u6280\u672f\u89c4\u683c\u4e2d\u6bcf\u4e2a7\u4e2a\u5b57\u7b26\u7684\u4ea7\u54c1ID\u3002 \u5728\u63cf\u8ff0\u4e4b\u540e\uff0c\u5305\u62ec\u4e00\u4e2a\u8868\u683c\uff0c\u63d0\u4f9b\u4ea7\u54c1\u7684\u5c3a\u5bf8\u3002\u8868\u683c\u5e94\u8be5\u6709\u4e24\u5217\u3002\u7b2c\u4e00\u5217\u5305\u62ec\u5c3a\u5bf8\u7684\u540d\u79f0\u3002\u7b2c\u4e8c\u5217\u53ea\u5305\u62ec\u82f1\u5bf8\u7684\u6d4b\u91cf\u503c\u3002 \u7ed9\u8868\u683c\u547d\u540d\u4e3a\u201c\u4ea7\u54c1\u5c3a\u5bf8\u201d\u3002 \u5c06\u6240\u6709\u5185\u5bb9\u683c\u5f0f\u5316\u4e3a\u53ef\u7528\u4e8e\u7f51\u7ad9\u7684HTML\u683c\u5f0f\u3002\u5c06\u63cf\u8ff0\u653e\u5728&lt;div&gt;\u5143\u7d20\u4e2d\u3002 \u6280\u672f\u89c4\u683c\uff1a</code><code></code></p> <p>Final response:</p> <p>\u8fd9\u6b3e\u6905\u5b50\u662f\u4e2d\u4e16\u7eaa\u98ce\u683c\u529e\u516c\u5bb6\u5177\u7cfb\u5217\u7684\u4e00\u90e8\u5206\uff0c\u9002\u7528\u4e8e\u5bb6\u5ead\u6216\u5546\u4e1a\u573a\u6240\u3002\u5b83\u6709\u591a\u79cd\u5916\u58f3\u989c\u8272\u548c\u5e95\u5ea7\u6d82\u5c42\u53ef\u9009\uff0c\u5305\u62ec\u4e0d\u9508\u94a2\u3001\u54d1\u5149\u9ed1\u8272\u3001\u5149\u6cfd\u767d\u8272\u6216\u94ec\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u5e26\u6216\u4e0d\u5e26\u6276\u624b\u7684\u6905\u5b50\uff0c\u4ee5\u53ca\u8f6f\u5730\u677f\u6216\u786c\u5730\u677f\u6eda\u8f6e\u9009\u9879\u3002\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u4e24\u79cd\u5ea7\u6905\u6ce1\u6cab\u5bc6\u5ea6\uff1a\u4e2d\u7b49\uff081.8\u78c5/\u7acb\u65b9\u82f1\u5c3a\uff09\u6216\u9ad8\uff082.8\u78c5/\u7acb\u65b9\u82f1\u5c3a\uff09\u3002</p> <p>\u6905\u5b50\u7684\u5916\u58f3\u5e95\u5ea7\u6ed1\u52a8\u4ef6\u662f\u6539\u6027\u5c3c\u9f99PA6/PA66\u6d82\u5c42\u7684\u94f8\u94dd\uff0c\u5916\u58f3\u539a\u5ea6\u4e3a10\u6beb\u7c73\u3002\u5ea7\u6905\u91c7\u7528HD36\u6ce1\u6cab\uff0c\u5e95\u5ea7\u662f\u4e94\u4e2a\u8f6e\u5b50\u7684\u5851\u6599\u6d82\u5c42\u94dd\u5e95\u5ea7\uff0c\u53ef\u4ee5\u8fdb\u884c\u6c14\u52a8\u6905\u5b50\u8c03\u8282\uff0c\u65b9\u4fbf\u5347\u964d\u3002\u6b64\u5916\uff0c\u6905\u5b50\u7b26\u5408\u5408\u540c\u4f7f\u7528\u8d44\u683c\uff0c\u662f\u60a8\u7406\u60f3\u7684\u9009\u62e9\u3002</p> <p>\u4ea7\u54c1ID\uff1aSWC-100</p> <p>\u4ea7\u54c1\u5c3a\u5bf8</p> \u5bbd\u5ea6 20.87\u82f1\u5bf8 \u6df1\u5ea6 20.08\u82f1\u5bf8 \u9ad8\u5ea6 31.50\u82f1\u5bf8 \u5ea7\u6905\u9ad8\u5ea6 17.32\u82f1\u5bf8 \u5ea7\u6905\u6df1\u5ea6 16.14\u82f1\u5bf8 <p>\u672c\u7ae0\u7684\u4e3b\u8981\u5185\u5bb9\u662f LLM \u5728\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u8fed\u4ee3\u5f0f\u63d0\u793a\u5f00\u53d1\u8fc7\u7a0b\u3002\u5f00\u53d1\u8005\u9700\u8981\u5148\u5c1d\u8bd5\u7f16\u5199\u63d0\u793a\uff0c\u7136\u540e\u901a\u8fc7\u8fed\u4ee3\u9010\u6b65\u5b8c\u5584\u5b83\uff0c\u76f4\u81f3\u5f97\u5230\u9700\u8981\u7684\u7ed3\u679c\u3002\u5173\u952e\u5728\u4e8e\u62e5\u6709\u4e00\u79cd\u6709\u6548\u7684\u5f00\u53d1Prompt\u7684\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u77e5\u9053\u5b8c\u7f8e\u7684Prompt\u3002\u5bf9\u4e8e\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5bf9\u591a\u4e2a\u6837\u672c\u8fdb\u884c\u8fed\u4ee3\u5f00\u53d1\u63d0\u793a\u5e76\u8fdb\u884c\u8bc4\u4f30\u3002\u6700\u540e\uff0c\u53ef\u4ee5\u5728\u66f4\u6210\u719f\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6d4b\u8bd5\u591a\u4e2aPrompt\u5728\u591a\u4e2a\u6837\u672c\u4e0a\u7684\u5e73\u5747\u6216\u6700\u5dee\u6027\u80fd\u3002\u5728\u4f7f\u7528 Jupyter \u4ee3\u7801\u7b14\u8bb0\u672c\u793a\u4f8b\u65f6\uff0c\u8bf7\u5c1d\u8bd5\u4e0d\u540c\u7684\u53d8\u5316\u5e76\u67e5\u770b\u7ed3\u679c\u3002</p>","tags":["AI"]},{"location":"ai/prompt/method/#_5","title":"Method","text":"","tags":["AI"]},{"location":"computer/","title":"Index","text":""},{"location":"computer/#computer-science","title":"Computer Science","text":"CS61A          <ul> <li> CS61A notes  5656  988  31 mins              1742825110 </li> <li> something related  45  0 mins              1740320821 </li> </ul> CS61C          <ul> <li> CS61C notes  568  31  2 mins              1742825110 </li> </ul> C++          <ul> <li> C++\u901f\u6210  3809  871  24 mins              1741231144 </li> </ul> CSAPP          <ul> <li> Resource  38  0 mins              1742825110 </li> </ul> Data structure          <ul> <li> Basis of algorithm  1141  687  12 mins              1742126479 </li> </ul> C\u8bed\u8a00          <ul> <li> C\u8bed\u8a00  3487  883  23 mins              1741015289 </li> <li> something scattered  1631  16  6 mins              1737218410 </li> </ul> Linux          <ul> <li> Basis of Linux  1777  7  6 mins              1742445545 </li> </ul>"},{"location":"computer/Algorithm/algorithm/","title":"Basis of algorithm","text":"<code>#\u7b97\u6cd5</code> <p>!!! note\"\"     - \u4ecd\u5728\u63a2\u7d22</p>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#basis-of-algorithm","title":"Basis of algorithm","text":"<p> \u7ea6 1169 \u4e2a\u5b57  687 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u6570\u636e\u7ed3\u6784\u2014\u2014\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_2","title":"\u6392\u5e8f","text":"","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_3","title":"\u5feb\u6392","text":"C++<pre><code>void quick_sort(int q[], int l, int r)\n{\n    if(l &gt;= r) return;\n    int i = l - 1, j = r + 1, x = q[(l + r) &gt;&gt; 1];\n    while(i &lt; j)\n    {\n        do i++ ;while(q[i] &lt; x);\n        do j-- ;while(q[j] &gt; x);\n        if(i &lt; j)\n        {\n            int t = q[i];\n            q[i] = q[j];\n            q[j] = t;\n        }\n\n    }\n    quick_sort(q, l, j);\n    quick_sort(q, j + 1, r);\n\n}\n</code></pre> <ul> <li>\u9664\u4e86 <code>if(l &gt;= r)</code> \u5269\u4e0b\u7684\u90fd\u662f <code>&gt;</code> \u6216\u8005 <code>&lt;</code> </li> <li>do while</li> <li>\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u8bc1\u660e\u4e0e\u8fb9\u754c\u5206\u6790</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_4","title":"\u5f52\u5e76","text":"C++<pre><code>void merge_sort(int q[], int l, int r)\n{\n    //\u9012\u5f52\u7684\u7ec8\u6b62\u60c5\u51b5\n    if(l &gt;= r) return;\n\n    //\u7b2c\u4e00\u6b65\uff1a\u5206\u6210\u5b50\u95ee\u9898\n    int mid = l + r &gt;&gt; 1;\n\n    //\u7b2c\u4e8c\u6b65\uff1a\u9012\u5f52\u5904\u7406\u5b50\u95ee\u9898\n    merge_sort(q, l, mid ), merge_sort(q, mid + 1, r);\n\n    //\u7b2c\u4e09\u6b65\uff1a\u5408\u5e76\u5b50\u95ee\u9898\n    int k = 0, i = l, j = mid + 1, tmp[r - l + 1];\n    while(i &lt;= mid &amp;&amp; j &lt;= r)\n        if(q[i] &lt;= q[j]) tmp[k++] = q[i++];\n        else tmp[k++] = q[j++];\n    while(i &lt;= mid) tmp[k++] = q[i++];\n    while(j &lt;= r) tmp[k++] = q[j++];\n\n    for(k = 0, i = l; i &lt;= r; k++, i++) q[i] = tmp[k];\n}\n</code></pre> <ul> <li>\u5f52\u5e76\u6392\u5e8f\u7684\u8bc1\u660e\u4e0e\u8fb9\u754c\u5206\u6790</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_5","title":"\u4e8c\u5206","text":"C++<pre><code>//\u67e5\u627e\u5de6\u8fb9\u754c SearchLeft \u7b80\u5199SL\nint SL(int l, int r)\n{\n    while (l &lt; r)\n    {\n        int mid = l + r &gt;&gt; 1;\n        if (check(mid)) r = mid; \n        else l = mid + 1; \n    }   \n    return l;\n}\n//\u67e5\u627e\u53f3\u8fb9\u754c SearchRight \u7b80\u5199SR \nint SR(int l, int r) \n{\n    while (l &lt; r)\n    {                   \n        int mid = l + r + 1 &gt;&gt; 1; //\u9700\u8981+1 \u9632\u6b62\u6b7b\u5faa\u73af\n        if (check(mid)) l = mid;\n        else r = mid - 1; \n    }\n    return r; \n}\n</code></pre> <ul> <li>\u53d1\u660e\u7537\u5de6\u5973\u53f3\u7684\u771f\u662f\u4e2a\u5929\u624d\uff0c\u5982\u679c\u5305\u542b x \u7684\u6761\u4ef6\u662f\u5de6\u8fb9\uff0c\u5c31 + 1\uff0c\u5426\u5219\u4e0d\u52a0\u3002</li> <li>\u4e8c\u5206\u6a21\u677f</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_6","title":"\u9ad8\u7cbe\u5ea6","text":"","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_7","title":"\u52a0\u6cd5","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvector&lt;int&gt; add(vector&lt;int&gt; &amp;a, vector&lt;int&gt; &amp;b)\n{\n    vector&lt;int&gt; res;\n    int t = 0;\n    for(int i = 0; i &lt; a.size() || i &lt; b.size() || t;i++)\n    {\n        if(i &lt; a.size()) t += a[i];\n        if(i &lt; b.size()) t += b[i];\n        res.push_back(t % 10);\n        t /= 10;\n    }\n    return res;\n}\nint main()\n{\n    string a,b;\n    cin &gt;&gt; a &gt;&gt; b;\n    vector&lt;int&gt; A,B;\n    for(int i = a.size() - 1; i &gt;= 0; i --) A.push_back(a[i] - '0');\n    for(int i = b.size() - 1; i &gt;= 0; i --) B.push_back(b[i] - '0');\n\n    auto C = add(A,B);\n    for(int i = C.size() - 1;i &gt;= 0; i --) printf(\"%d\",C[i]);\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_8","title":"\u51cf\u6cd5","text":"C++<pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\nusing namespace std;\n\nbool cmp(vector&lt;int&gt; &amp;a, vector&lt;int&gt; &amp;b)\n{\n    if(a.size() != b.size()) return a.size() &gt; b.size();\n    else\n    {\n        for(int i = a.size() - 1; i&gt;= 0;i--)\n        {\n            if(a[i] != b[i]) return a[i] &gt; b[i];\n        }\n        return true;\n    }\n}\n\nvector&lt;int&gt; sub(vector&lt;int&gt; &amp;a,vector&lt;int&gt; &amp;b)\n{\n    vector&lt;int&gt; res;\n    for(int i = 0,t = 0; i &lt; a.size(); i++)\n    {\n        t = a[i] - t;\n        if(i &lt; b.size()) t -= b[i];\n        res.push_back((t + 10) % 10);\n        if(t &lt; 0) t = 1;\n        else t = 0;\n    }\n    while(res.size() &gt; 1 &amp;&amp; res.back() == 0) res.pop_back();\n    return res;\n}\nint main()\n{\n    string a,b;\n    vector&lt;int&gt; A,B,C;\n    cin &gt;&gt; a &gt;&gt; b;\n    for(int i = a.size() - 1; i &gt;= 0; i --) A.push_back(a[i] - '0');\n    for(int i = b.size() - 1; i &gt;= 0; i --) B.push_back(b[i] - '0');\n\n    if(cmp(A, B))\n    {\n        C = sub(A, B);\n        for(int i = C.size() - 1; i &gt;= 0; i--) printf(\"%d\",C[i]);\n    }\n    else \n    {\n        C = sub(B, A);\n        printf(\"-\");\n        for(int i = C.size() - 1; i &gt;= 0; i--) printf(\"%d\",C[i]);\n    }\n\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_9","title":"\u4e58\u6cd5","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nvector&lt;int&gt; mul(vector&lt;int&gt; &amp;a, vector&lt;int&gt; &amp;b)\n{\n    vector&lt;int&gt; res(a.size() + b.size(), 0);\n    for(int i = 0; i &lt; a.size(); i++)\n    {\n        for(int j = 0; j &lt; b.size(); j++)\n        {\n            res[i + j] += a[i] * b[j];  \n        }\n    }\n    for(int i = 0; i + 1 &lt; res.size(); i ++)\n    {\n        res[i + 1] += res[i] / 10;\n        res[i] = res[i] % 10;\n    }\n    while(!res.back() &amp;&amp; res.size() &gt; 1) res.pop_back(); \n    return res;\n}\nint main()\n{\n    string a,b;\n    vector&lt;int&gt; A, B, C;\n    cin &gt;&gt; a &gt;&gt; b;\n    for(int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\n    for(int i = b.size() - 1; i &gt;= 0; i--) B.push_back(b[i] - '0');\n    C = mul(A, B);\n    for(int i = C.size() - 1; i &gt;= 0;i--) printf(\"%d\",C[i]);\n    return 0;\n}\n</code></pre> <ul> <li>\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u5206\u6790</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_10","title":"\u9664\u6cd5","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nvector&lt;int&gt; div(vector&lt;int&gt; &amp;a, int b, int &amp;r)\n{\n    vector&lt;int&gt; res;\n    int t = 0;\n    for(int i = a.size() - 1; i &gt;= 0; i--)\n    {\n        t = t * 10 + a[i];\n        res.push_back(t / b);\n        t %= b;\n    }\n    r = t;\n    reverse(res.begin(), res.end());\n    while(res.size() &gt; 1 &amp;&amp; !res.back()) res.pop_back();\n    return res;\n}\nint main()\n{\n    string a;\n    int b, r;\n    vector&lt;int&gt; A, C;\n    cin &gt;&gt; a &gt;&gt; b;\n    for(int i = a.size() - 1; i &gt;= 0; i--) A.push_back(a[i] - '0');\n    C = div(A, b, r);\n    for(int i = C.size() - 1; i &gt;= 0; i--) printf(\"%d\",C[i]);\n    cout &lt;&lt; endl;\n    cout &lt;&lt; r &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_11","title":"\u524d\u7f00 &amp; \u5dee\u5206","text":"<p>\u9996\u5148\u7ed9\u5b9a\u4e00\u4e2a\u539f\u6570\u7ec4a\uff1a a[1], a[2], a[3],,,,,, a[n]; \u7136\u540e\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u6570\u7ec4b \uff1a b[1] ,b[2] , b[3],,,,,, b[i]; \u4f7f\u5f97 a[i] = b[1] + b[2]+ b[3] +,,,,,, + b[i] \u4e5f\u5c31\u662f\u8bf4\uff0ca\u6570\u7ec4\u662fb\u6570\u7ec4\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u53cd\u8fc7\u6765\u6211\u4eec\u628ab\u6570\u7ec4\u53eb\u505aa\u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e00\u4e2aa[i]\u90fd\u662fb\u6570\u7ec4\u4e2d\u4ece\u5934\u5f00\u59cb\u7684\u4e00\u6bb5\u533a\u95f4\u548c\u3002</p>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_12","title":"\u524d\u7f00","text":"<ul> <li>\u4e00\u7ef4\uff1a</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\nconst int N = 100010;\nint n, m;\nint a[N], s[N];\nint main()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    for(int i = 1; i &lt;= n; i++) scanf(\"%d\",&amp;a[i]);\n    for(int i = 1; i &lt;= n; i++) s[i] = s[i - 1] + a[i];\n    while(m --)\n    {\n        int a, b;\n        scanf(\"%d%d\",&amp;a, &amp;b);\n        printf(\"%d\\n\", s[b] - s[a - 1]);\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u4e8c\u7ef4\uff1a</li> </ul> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 1001;\nint n, m, q;\nint a[N][N],s[N][N];\n\nint main()\n{\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;q);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        for(int j = 1; j &lt;= m; j ++)\n        {\n            scanf(\"%d\", &amp;a[i][j]);\n        }\n    }\n    for(int i = 1;i &lt;= n; i++)\n    {\n        for(int j = 1; j &lt;= m; j++)\n        {\n            s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + a[i][j]; \n        }\n    }\n    while(q--)\n    {\n        int x1,y1,x2,y2;\n        scanf(\"%d%d%d%d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\n        printf(\"%d\\n\",s[x2][y2] - s[x2][y1 - 1] - s[x1 - 1][y2] + s[x1 - 1][y1 - 1]);\n    }\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_13","title":"\u5dee\u5206","text":"<ul> <li>\u4e00\u7ef4\uff1a</li> </ul> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 100010;\nint n, m;\nint a[N], b[N];\n\nint main()\n{\n    scanf(\"%d%d\",&amp;n, &amp;m);\n    for(int i = 1;i &lt;= n; i++) scanf(\"%d\", &amp;a[i]);\n    for(int i = 1;i &lt;= n; i++) b[i] = a[i] - a[i - 1];\n    while(m --)\n    {\n        int l, r, c;\n        scanf(\"%d%d%d\", &amp;l, &amp;r, &amp;c);\n        b[l] += c;\n        b[r + 1] -= c;\n\n    }\n     for(int i = 1; i &lt;= n; i++) a[i] = a[i - 1] + b[i];\n     for(int i = 1; i &lt;= n; i++) printf(\"%d \", a[i]);\n\n    return 0;\n}\n</code></pre> <ul> <li>\u4e8c\u7ef4\uff1a</li> </ul> C++<pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nconst int N = 1e3 + 10;\nint a[N][N], b[N][N];\nvoid insert(int x1, int y1, int x2, int y2, int c)\n{\n    b[x1][y1] += c;\n    b[x2 + 1][y1] -= c;\n    b[x1][y2 + 1] -= c;\n    b[x2 + 1][y2 + 1] += c;\n}\nint main()\n{\n    int n, m, q;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;\n    for (int i = 1; i &lt;= n; i++)\n        for (int j = 1; j &lt;= m; j++)\n            cin &gt;&gt; a[i][j];\n    for (int i = 1; i &lt;= n; i++)\n    {\n        for (int j = 1; j &lt;= m; j++)\n        {\n            insert(i, j, i, j, a[i][j]);      //\u6784\u5efa\u5dee\u5206\u6570\u7ec4\n        }\n    }\n    while (q--)\n    {\n        int x1, y1, x2, y2, c;\n        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; c;\n        insert(x1, y1, x2, y2, c);\n    }\n    for (int i = 1; i &lt;= n; i++)\n    {\n        for (int j = 1; j &lt;= m; j++)\n        {\n            b[i][j] += b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];  //\u4e8c\u7ef4\u524d\u7f00\u548c\n        }\n    }\n    for (int i = 1; i &lt;= n; i++)\n    {\n        for (int j = 1; j &lt;= m; j++)\n        {\n            printf(\"%d \", b[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u5206\u6790</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_14","title":"\u53cc\u6307\u9488","text":"C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconst int N = 100010;\nint n;\nint a[N], s[N];\nint main()\n{\n    int res = 0;\n    cin &gt;&gt; n;\n    for(int i = 0; i &lt; n; i++) scanf(\"%d\",&amp;a[i]);\n    for(int i = 0, j = 0; i &lt; n; i++)\n    {\n        s[a[i]] ++; // s[] \u8bb0\u5f55\u7684\u662f i, j \u53cc\u6307\u9488\u7ef4\u62a4\u533a\u95f4\u4e2d \u67d0\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\n        while(s[a[i]] &gt; 1)\n        {\n            s[a[j]]--;\n            j++;\n        }\n        res = max(res, i - j + 1);\n    }\n    cout &lt;&lt; res &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_15","title":"\u4f4d\u8fd0\u7b97","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u8fd0\u7b97\u89c4\u5219 \u793a\u4f8b\uff08<code>a = 5</code>, <code>b = 3</code>\uff09 \u7ed3\u679c <code>&amp;</code> \u6309\u4f4d\u4e0e\uff08AND\uff09 \u53ea\u6709\u4e24\u4e2a\u5bf9\u5e94\u4f4d\u90fd\u4e3a 1\uff0c\u7ed3\u679c\u624d\u4e3a 1 <code>5 &amp; 3</code> \u2192 <code>0101 &amp; 0011</code> <code>1</code> <code>|</code> \u6309\u4f4d\u6216\uff08OR\uff09 \u53ea\u8981\u4e24\u4e2a\u5bf9\u5e94\u4f4d\u4e2d\u6709\u4e00\u4e2a\u4e3a 1\uff0c\u7ed3\u679c\u4e3a 1 <code>7</code> <code>^</code> \u6309\u4f4d\u5f02\u6216\uff08XOR\uff09 \u4e24\u4e2a\u4f4d\u4e0d\u540c\u5219\u4e3a 1\uff0c\u76f8\u540c\u5219\u4e3a 0 <code>5 ^ 3</code> \u2192 <code>0101 ^ 0011</code> <code>6</code> <code>~</code> \u6309\u4f4d\u975e\uff08NOT\uff09 \u5c06\u6240\u6709\u4f4d\u53d6\u53cd <code>~5</code> \u2192 <code>~0101</code> <code>-6</code> <code>&lt;&lt;</code> \u5de6\u79fb\uff08Left Shift\uff09 \u5c06\u4f4d\u5411\u5de6\u79fb\u52a8\uff0c\u53f3\u4fa7\u8865 0 <code>5 &lt;&lt; 1</code> \u2192 <code>0101 &lt;&lt; 1</code> <code>10</code> <code>&gt;&gt;</code> \u53f3\u79fb\uff08Right Shift\uff09 \u5c06\u4f4d\u5411\u53f3\u79fb\u52a8\uff0c\u5de6\u4fa7\u8865 0 \u6216\u7b26\u53f7\u4f4d <code>5 &gt;&gt; 1</code> \u2192 <code>0101 &gt;&gt; 1</code> <code>2</code> <code>&amp;=</code> \u6309\u4f4d\u4e0e\u8d4b\u503c\uff08AND Assignment\uff09 <code>a = a &amp; b</code> <code>a &amp;= b</code> <code>a</code> \u66f4\u65b0\u4e3a <code>a &amp; b</code> <code>| =</code> \u6309\u4f4d\u6216\u8d4b\u503c\uff08OR Assignment\uff09 <code>a = a                               | b</code> <code>^=</code> \u6309\u4f4d\u5f02\u6216\u8d4b\u503c\uff08XOR Assignment\uff09 <code>a = a ^ b</code> <code>a ^= b</code> <code>a</code> \u66f4\u65b0\u4e3a <code>a ^ b</code> | \u6309\u4f4d\u6216 \u6709\u4e00\u4e2a\u4e3a 1 \u7ed3\u679c\u5c31\u4e3a 1 <p>\u68c0\u67e5\u5947\u5076\u6027\uff1a</p> <ul> <li>\u4f7f\u7528\u6309\u4f4d\u4e0e\u8fd0\u7b97\u68c0\u67e5\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u5947\u6570\u6216\u5076\u6570\u3002 <code>n &amp; 1 == 0</code> \u8868\u793a <code>n</code> \u662f\u5076\u6570\uff0c<code>n &amp; 1 == 1</code> \u8868\u793a <code>n</code> \u662f\u5947\u6570</li> </ul> <p>\u4ea4\u6362\u4e24\u4e2a\u6570\uff08\u4e0d\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\uff09\uff1a</p> <ul> <li>\u4f7f\u7528\u5f02\u6216\u8fd0\u7b97\u53ef\u4ee5\u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u503c\u3002</li> </ul> C++<pre><code>int a = 5, b = 3;\na = a ^ b;  // a = 5 ^ 3 = 6\nb = a ^ b;  // b = 6 ^ 3 = 5\na = a ^ b;  // a = 6 ^ 5 = 3\n</code></pre> <p>\u8bbe\u7f6e\u3001\u6e05\u9664\u548c\u53d6\u53cd\u7279\u5b9a\u4f4d\uff1a</p> <ul> <li>\u8bbe\u7f6e\u67d0\u4e00\u4f4d\u4e3a <code>1</code>\uff1a <code>x |= (1 &lt;&lt; k);</code> \u5c06 <code>x</code> \u7684\u7b2c <code>k</code> \u4f4d\u8bbe\u7f6e\u4e3a <code>1</code>\u3002</li> <li>\u6e05\u9664\u67d0\u4e00\u4f4d\u4e3a <code>0</code>\uff1a <code>x &amp;= ~(1 &lt;&lt; k);</code> \u5c06 <code>x</code> \u7684\u7b2c <code>k</code> \u4f4d\u8bbe\u7f6e\u4e3a <code>0</code>\u3002</li> <li>\u53d6\u67d0\u4e00\u4f4d\u7684\u503c\uff1a <code>(x &gt;&gt; k) &amp; 1;</code> \u53d6\u51fa <code>x</code> \u7684\u7b2c <code>k</code> \u4f4d</li> </ul> <p>\u5224\u65ad\u67d0\u4e00\u4f4d\u662f\u5426\u4e3a 1\uff1a</p> <ul> <li>\u53ef\u4ee5\u901a\u8fc7 <code>(n &gt;&gt; k) &amp; 1</code> \u6765\u5224\u65ad <code>n</code> \u7684\u7b2c <code>k</code> \u4f4d\u662f\u5426\u4e3a <code>1</code>\u3002\u5982\u679c\u7ed3\u679c\u4e3a <code>1</code>\uff0c\u8868\u793a\u8be5\u4f4d\u4e3a <code>1</code>\uff0c\u5426\u5219\u4e3a <code>0</code></li> </ul> <p>\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 <code>1</code>\uff1a</p> <ul> <li><code>n &amp; (n - 1)</code> \u53ef\u4ee5\u6e05\u9664\u4e00\u4e2a\u6570\u7684\u6700\u4f4e\u4f4d\u7684 <code>1</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c <code>n = 12</code>\uff08\u4e8c\u8fdb\u5236\u662f <code>1100</code>\uff09\uff0c\u5219 <code>n - 1 = 11</code>\uff08\u4e8c\u8fdb\u5236\u662f <code>1011</code>\uff09\uff0c<code>n &amp; (n - 1) = 1000</code>\uff0c\u5373 <code>8</code>\uff0c\u53bb\u6389\u4e86\u6700\u4f4e\u4f4d\u7684 <code>1</code></li> </ul> <p>\u8ba1\u7b97\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\uff1a</p> <ul> <li>\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u53f3\u79fb\u6765\u8ba1\u7b97\u4e00\u4e2a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u3002\u4f8b\u5982\uff0c<code>int bit_count = 0; while (n &gt; 0) { n &gt;&gt;= 1; bit_count++; }</code></li> </ul> <p>\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a 2 \u7684\u5e42\uff1a</p> <ul> <li>\u4efb\u4f55 <code>2</code> \u7684\u5e42\u6570\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a <code>1</code>\u3002\u53ef\u4ee5\u4f7f\u7528 <code>n &amp; (n - 1)</code> \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a <code>2</code> \u7684\u5e42\uff1a\u5982\u679c\u7ed3\u679c\u662f <code>0</code>\uff0c\u90a3\u4e48 <code>n</code> \u662f <code>2</code> \u7684\u5e42\u3002</li> </ul> C++<pre><code>bool isPowerOfTwo(int n) {\n    return (n &gt; 0) &amp;&amp; ((n &amp; (n - 1)) == 0);\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_16","title":"\u79bb\u6563\u5316","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint n, m;\nconst int N = 300010;\nvector&lt;int&gt; alls;\nvector&lt;pair&lt;int, int&gt;&gt; add, quiry;\nint a[N],s[N];\n\nint find(int x)\n{\n    int l = 0, r = alls.size() - 1;\n    while(l &lt; r)\n    {\n        int mid = l + r &gt;&gt; 1;\n        if(alls[mid] &gt;= x) r = mid;\n        else l = mid + 1;\n    }\n    return r + 1; // \u79bb\u6563\u5316\u5750\u6807\u7684\u4e0b\u6807\u4ece 1 \u5f00\u59cb\n}\nint main()\n{\n    scanf(\"%d%d\",&amp;n, &amp;m);\n    for(int i = 1; i &lt;= n; i++)\n    {\n        int x, c;\n        scanf(\"%d%d\",&amp;x, &amp;c);\n        add.push_back({x, c});\n        alls.push_back(x);\n    }\n\n    for(int i = 1; i &lt;= m; i++)\n    {\n        int l, r;\n        scanf(\"%d%d\",&amp;l,&amp;r);\n        alls.push_back(l);\n        alls.push_back(r);\n        quiry.push_back({l, r}); // \u5230\u8fd9\u91cc\u6240\u6709\u6570\u636e\u5b58\u597d\u4e86\n    }\n    sort(alls.begin(), alls.end()); //\u6392\u5e8f\n    alls.erase(unique(alls.begin(), alls.end()), alls.end()); //\u53bb\u91cd\n\n    for(auto item : add)\n    {\n        int x = find(item.first);\n        a[x] += item.second;      // \u5bf9\u5e94\u7684\u5750\u6807\u589e\u52a0\u8f93\u5165\u503c\n    }\n    for(int i = 1; i &lt;= alls.size(); i++) s[i] = s[i - 1] + a[i]; //\u6c42\u524d\u7f00\u548c\n    for(auto item : quiry)\n    {\n        int l = find(item.first);\n        int r = find(item.second);\n        printf(\"%d\\n\", s[r] - s[l - 1]);\n\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u5c06\u67e5\u627e\u533a\u95f4\u538b\u7f29\uff0c\u63d0\u9ad8\u641c\u7d22\u6548\u7387</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_17","title":"\u533a\u95f4\u5408\u5e76","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nconst int N = 100010;\nint n;\ntypedef pair&lt;int, int&gt; pII;\nvector&lt;pII&gt; segs,res;\n\nint main()\n{\n    cin &gt;&gt; n;\n    while(n --)\n    {\n        int l,r;\n        scanf(\"%d%d\",&amp;l, &amp;r);\n        segs.push_back({l, r});\n    }\n    sort(segs.begin(), segs.end()); // \u6309\u5de6\u7aef\u70b9\u6392\u5e8f\n    int st = -2e9, ed = -2e9;\n    for(auto item : segs)\n    {\n        if(ed &lt; item.first) // \n        {\n            if(ed != -2e9) res.push_back({st, ed}); // \u5982\u679c\u4ea4\u9519\u5c31\u5b58\u5165\u4e0a\u4e00\u4e2a\u7ef4\u62a4\u7684\u533a\u95f4\uff0c\u5e76\u4e14\u907f\u514d\u4e86\u7b2c\u4e00\u4e2a\u65e0\u6548\u533a\u95f4\u7684\u60c5\u51b5\u3002\n            st = item.first, ed = item.second; // \u7ef4\u62a4\u4e0b\u4e00\u4e2a\u533a\u95f4\n        }\n        else\n        {\n            ed = max(ed, item.second); // \u786e\u5b9a\u5408\u5e76\u540e\u7684ed\n        }\n    }\n    res.push_back({st, ed}); // \u653e\u5165\u7ef4\u62a4\u7684\u6700\u540e\u4e00\u4e2a\u533a\u95f4\n    cout &lt;&lt; res.size();\n\n    return 0;\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_18","title":"\u94fe\u8868","text":"","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_19","title":"\u54c8\u5e0c\u8868","text":"<ul> <li>\u54c8\u5e0c\u8868\u53ef\u4ee5\u901a\u8fc7 key \u5728 O(1) \u65f6\u95f4\u590d\u6742\u5ea6\u627e\u5230\u8fd9\u4e2a key \u5bf9\u5e94\u7684 value</li> <li>key \u503c\u552f\u4e00\uff0cvalue \u53ef\u4ee5\u91cd\u590d</li> </ul> \u54c8\u5e0c\u8868\u4f2a\u7801\u903b\u8f91 C++<pre><code>class MyHashMap {\n\nprivate:\n    vector&lt;void*&gt; table;\n\npublic:\n    // \u589e/\u6539\uff0c\u590d\u6742\u5ea6 O(1)\n    void put(auto key, auto value) {\n        int index = hash(key);\n        table[index] = value;\n    }\n\n    // \u67e5\uff0c\u590d\u6742\u5ea6 O(1)\n    auto get(auto key) {\n        int index = hash(key);\n        return table[index];\n    }\n\n    // \u5220\uff0c\u590d\u6742\u5ea6 O(1)\n    void remove(auto key) {\n        int index = hash(key);\n        table[index] = nullptr;\n    }\n\nprivate:\n    // \u54c8\u5e0c\u51fd\u6570\uff0c\u628a key \u8f6c\u5316\u6210 table \u4e2d\u7684\u5408\u6cd5\u7d22\u5f15\n    // \u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u662f O(1)\uff0c\u624d\u80fd\u4fdd\u8bc1\u4e0a\u8ff0\u65b9\u6cd5\u7684\u590d\u6742\u5ea6\u90fd\u662f O(1)\n    int hash(auto key) {\n        // ...\n    }\n};\n</code></pre> \u62c9\u94fe\u6cd5\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81 C++<pre><code>class ExampleChainingHashMap {\n\n    // \u94fe\u8868\u8282\u70b9\uff0c\u5b58\u50a8 key-value \u5bf9\u513f\n    // \u6ce8\u610f\u8fd9\u91cc\u5fc5\u987b\u5b58\u50a8\u540c\u65f6\u5b58\u50a8 key \u548c value\n    // \u56e0\u4e3a\u8981\u901a\u8fc7 key \u627e\u5230\u5bf9\u5e94\u7684 value\n    struct KVNode {\n        int key;\n        int value;\n\n        // \u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u7528\u6807\u51c6\u5e93\u7684 LinkedList \u94fe\u8868\n        // \u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u6dfb\u52a0 next \u6307\u9488\u4e86\n        // \u4f60\u5f53\u7136\u53ef\u4ee5\u7ed9 KVNode \u6dfb\u52a0 next \u6307\u9488\uff0c\u81ea\u5df1\u5b9e\u73b0\u94fe\u8868\u64cd\u4f5c\n        KVNode(int key, int value) : key(key), value(value) {}\n    };\n\n    // \u5e95\u5c42 table \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u94fe\u8868\n    std::vector&lt;std::list\\&lt;KVNode&gt;&gt; table;\n\npublic:\n    ExampleChainingHashMap(int capacity) : table(capacity) {}\n\n    int hash(int key) {\n        return key % table.size();\n    }\n\n    // \u67e5\n    int get(int key) {\n        int index = hash(key);\n\n        if (table[index].empty()) {\n            // \u94fe\u8868\u4e3a\u7a7a\uff0c\u8bf4\u660e key \u4e0d\u5b58\u5728\n            return -1;\n        }\n\n        for (const auto&amp; node : table[index]) {\n            if (node.key == key) {\n                return node.value;\n            }\n        }\n\n        // \u94fe\u8868\u4e2d\u6ca1\u6709\u76ee\u6807 key\n        return -1;\n    }\n\n    // \u589e/\u6539\n    void put(int key, int value) {\n        int index = hash(key);\n\n        if (table[index].empty()) {\n            // \u94fe\u8868\u4e3a\u7a7a\uff0c\u65b0\u5efa\u4e00\u4e2a\u94fe\u8868\uff0c\u63d2\u5165 key-value\n            table[index].push_back(KVNode(key, value));\n            return;\n        }\n\n        // \u94fe\u8868\u4e0d\u4e3a\u7a7a\uff0c\u8981\u904d\u5386\u4e00\u904d\u770b\u770b key \u662f\u5426\u5df2\u7ecf\u5b58\u5728\n        // \u5982\u679c\u5b58\u5728\uff0c\u66f4\u65b0 value\n        // \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u63d2\u5165\u65b0\u8282\u70b9\n        for (auto&amp; node : table[index]) {\n            if (node.key == key) {\n                // key \u5df2\u7ecf\u5b58\u5728\uff0c\u66f4\u65b0 value\n                node.value = value;\n                return;\n            }\n        }\n\n        // \u94fe\u8868\u4e2d\u6ca1\u6709\u76ee\u6807 key\uff0c\u6dfb\u52a0\u65b0\u8282\u70b9\n        // \u8fd9\u91cc\u4f7f\u7528 push_back \u6dfb\u52a0\u5230\u94fe\u8868\u5c3e\u90e8\n        // \u56e0\u4e3a c++ std::list \u7684\u5e95\u5c42\u5b9e\u73b0\u662f\u53cc\u94fe\u8868\uff0c\u5934\u5c3e\u64cd\u4f5c\u90fd\u662f O(1) \u7684\n        // https://labuladong.online/algo/data-structure-basic/linkedlist-implement/\n        table[index].push_back(KVNode(key, value));\n    }\n\n    // \u5220\n    void remove(int key) {\n        auto&amp; list = table[hash(key)];\n        if (list.empty()) {\n            return;\n        }\n\n        // \u5982\u679c key \u5b58\u5728\uff0c\u5219\u5220\u9664\n        // \u8fd9\u4e2a remove_if \u65b9\u6cd5\u662f c++ std::list \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5220\u9664\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(N)\n        list.remove_if([key](KVNode&amp; node) { return node.key == key; });\n    }\n};\n</code></pre> \u9762\u8bd5\u6a21\u62df <p>1\u3001\u4e3a\u4ec0\u4e48\u6211\u4eec\u5e38\u8bf4\uff0c\u54c8\u5e0c\u8868\u7684\u589e\u5220\u67e5\u6539\u6548\u7387\u90fd\u662f\u00a0O(1) \uff1f</p> <p>\u56e0\u4e3a\u54c8\u5e0c\u8868\u5e95\u5c42\u5c31\u662f\u64cd\u4f5c\u4e00\u4e2a\u6570\u7ec4\uff0c\u5176\u4e3b\u8981\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u81ea\u4e8e\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u7d22\u5f15\u548c\u54c8\u5e0c\u51b2\u7a81\u3002\u53ea\u8981\u4fdd\u8bc1\u54c8\u5e0c\u51fd\u6570\u7684\u590d\u6742\u5ea6\u5728\u00a0O(1)O(1)\uff0c\u4e14\u5408\u7406\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u589e\u5220\u67e5\u6539\u7684\u590d\u6742\u5ea6\u5c31\u90fd\u662f\u00a0O(1)O(1)\u3002</p> <p>2\u3001\u54c8\u5e0c\u8868\u7684\u904d\u5386\u987a\u5e8f\u4e3a\u4ec0\u4e48\u4f1a\u53d8\u5316\uff1f</p> <p>\u56e0\u4e3a\u54c8\u5e0c\u8868\u5728\u8fbe\u5230\u8d1f\u8f7d\u56e0\u5b50\u65f6\u4f1a\u6269\u5bb9\uff0c\u8fd9\u4e2a\u6269\u5bb9\u8fc7\u7a0b\u4f1a\u5bfc\u81f4\u54c8\u5e0c\u8868\u5e95\u5c42\u7684\u6570\u7ec4\u5bb9\u91cf\u53d8\u5316\uff0c\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u7d22\u5f15\u4e5f\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u54c8\u5e0c\u8868\u7684\u904d\u5386\u987a\u5e8f\u4e5f\u4f1a\u53d8\u5316\u3002</p> <p>3\u3001\u54c8\u5e0c\u8868\u7684\u589e\u5220\u67e5\u6539\u6548\u7387\u4e00\u5b9a\u662f\u00a0O(1) \u5417\uff1f</p> <p>\u4e0d\u4e00\u5b9a\uff0c\u6b63\u5982\u524d\u9762\u5206\u6790\u7684\uff0c\u53ea\u6709\u54c8\u5e0c\u51fd\u6570\u7684\u590d\u6742\u5ea6\u662f\u00a0O(1)\uff0c\u4e14\u5408\u7406\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u624d\u80fd\u4fdd\u8bc1\u589e\u5220\u67e5\u6539\u7684\u590d\u6742\u5ea6\u662f\u00a0O(1)\u3002</p> <p>\u54c8\u5e0c\u51b2\u7a81\u597d\u89e3\u51b3\uff0c\u90fd\u662f\u6709\u6807\u51c6\u7b54\u6848\u7684\u3002\u5173\u952e\u662f\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u5982\u679c\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u00a0<code>key</code>\u00a0\u7c7b\u578b\uff0c\u6bd4\u5982\u524d\u9762\u7528\u00a0<code>ArrayList</code>\u00a0\u4f5c\u4e3a\u00a0<code>key</code>\u00a0\u7684\u4f8b\u5b50\uff0c\u90a3\u4e48\u54c8\u5e0c\u8868\u7684\u590d\u6742\u5ea6\u5c31\u4f1a\u9000\u5316\u6210\u00a0O(N)\u3002</p> <p>4\u3001\u4e3a\u5565\u4e00\u5b9a\u8981\u7528\u4e0d\u53ef\u53d8\u7c7b\u578b\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684\u00a0<code>key</code>\uff1f</p> <p>\u56e0\u4e3a\u54c8\u5e0c\u8868\u7684\u4e3b\u8981\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e8e\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684\u7d22\u5f15\uff0c\u5982\u679c\u00a0<code>key</code>\u00a0\u7684\u54c8\u5e0c\u503c\u4f1a\u53d8\u5316\uff0c\u4f1a\u5bfc\u81f4\u952e\u503c\u5bf9\u610f\u5916\u4e22\u5931\uff0c\u4ea7\u751f\u4e25\u91cd\u7684 bug\u3002</p>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_20","title":"\u4e8c\u53c9\u6811","text":"<ul> <li> <p>\u6ee1\u4e8c\u53c9\u6811 </p> </li> <li> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6307\uff0c\u4e8c\u53c9\u6811\u7684\u6bcf\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u7d27\u51d1\u9760\u5de6\u6392\u5217\uff0c\u4e14\u9664\u4e86\u6700\u540e\u4e00\u5c42\uff0c\u5176\u4ed6\u6bcf\u5c42\u90fd\u5fc5\u987b\u662f\u6ee1\u7684 </p> </li> <li> <p>\u5e73\u8861\u4e8c\u53c9\u6811\uff1a \u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1</p> </li> </ul> Text Only<pre><code># \u8fd9\u662f\u4e00\u68f5\u5e73\u8861\u4e8c\u53c9\u6811\n    1\n   / \\\n  2   3\n /   / \\\n4   5   6\n     \\\n      7\n\n# \u8fd9\u4e0d\u662f\uff0c\u56e0\u4e3a 2 \u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e3a 2\n    1\n   / \\\n  2   3\n /   / \\\n4   5   6\n \\   \\\n  8   7\n</code></pre> <ul> <li>\u4e8c\u53c9\u641c\u7d22\u6811 (BST)\uff1a \u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u8981\u5c0f\u4e8e\u6b64\u8282\u70b9\u7684\u503c\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u8981\u5927\u4e8e\u6b64\u8282\u70b9\u7684\u503c\u3002</li> </ul> Text Only<pre><code># BST\n    7\n   / \\\n  4   9\n / \\   \\\n1   5   10\n\n# not a BST\n    7\n   / \\\n  4   9\n / \\   \\\n1   8   10\n</code></pre> \u4e8c\u53c9\u6811\u7684\u5b9e\u73b0 C++<pre><code>class TreeNode {\npublic:\n    int val;\n    TreeNode* left;\n    TreeNode* right;\n    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n};\n\n// \u4f60\u53ef\u4ee5\u8fd9\u6837\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff1a\nTreeNode* root = new TreeNode(1);\nroot-&gt;left = new TreeNode(2);\nroot-&gt;right = new TreeNode(3);\nroot-&gt;left-&gt;left = new TreeNode(4);\nroot-&gt;right-&gt;left = new TreeNode(5);\nroot-&gt;right-&gt;right = new TreeNode(6);\n\n// \u6784\u5efa\u51fa\u6765\u7684\u4e8c\u53c9\u6811\u662f\u8fd9\u6837\u7684\uff1a\n//     1\n//    / \\\n//   2   3\n//  /   / \\\n// 4   5   6\n</code></pre> <ul> <li>\u9012\u5f52\u904d\u5386 (DFS): \u5e38\u7528\u4e8e\u627e\u6240\u6709\u8def\u5f84</li> </ul> DFS C++<pre><code>class TreeNode {\npublic:\n    int val;\n    TreeNode* left;\n    TreeNode* right;\n\n    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n};\n\n// \u4e8c\u53c9\u6811\u7684\u904d\u5386\u6846\u67b6\nvoid traverse(TreeNode* root) {\n    if (root == nullptr) {\n        return;\n    }\n    traverse(root-&gt;left);\n    traverse(root-&gt;right);\n}\n</code></pre> <ul> <li>\u5c42\u5e8f\u904d\u5386 (BFS)\uff1a\u5e38\u7528\u4e8e\u627e\u6700\u77ed\u8def\u5f84</li> </ul> BFS-1 C++<pre><code>void levelOrderTraverse(TreeNode* root) {\n    if (root == nullptr) {\n        return;\n    }\n    std::queue&lt;TreeNode*&gt; q;\n    q.push(root);\n    while (!q.empty()) {\n        TreeNode* cur = q.front();\n        q.pop();\n        // \u8bbf\u95ee cur \u8282\u70b9\n        std::cout &lt;&lt; cur-&gt;val &lt;&lt; std::endl;\n\n        // \u628a cur \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u52a0\u5165\u961f\u5217\n        if (cur-&gt;left != nullptr) {\n            q.push(cur-&gt;left);\n        }\n        if (cur-&gt;right != nullptr) {\n            q.push(cur-&gt;right);\n        }\n    }\n}\n</code></pre> BFS-2 C++<pre><code>void levelOrderTraverse(TreeNode* root) {\n    if (root == nullptr) {\n        return;\n    }\n    queue&lt;TreeNode*&gt; q;\n    q.push(root);\n    // \u8bb0\u5f55\u5f53\u524d\u904d\u5386\u5230\u7684\u5c42\u6570\uff08\u6839\u8282\u70b9\u89c6\u4e3a\u7b2c 1 \u5c42\uff09\n    int depth = 1;\n\n    while (!q.empty()) {\n        int sz = q.size();\n        for (int i = 0; i &lt; sz; i++) {\n            TreeNode* cur = q.front();\n            q.pop();\n            // \u8bbf\u95ee cur \u8282\u70b9\uff0c\u540c\u65f6\u77e5\u9053\u5b83\u6240\u5728\u7684\u5c42\u6570\n            cout &lt;&lt; \"depth = \" &lt;&lt; depth &lt;&lt; \", val = \" &lt;&lt; cur-&gt;val &lt;&lt; endl;\n\n            // \u628a cur \u7684\u5de6\u53f3\u5b50\u8282\u70b9\u52a0\u5165\u961f\u5217\n            if (cur-&gt;left != nullptr) {\n                q.push(cur-&gt;left);\n            }\n            if (cur-&gt;right != nullptr) {\n                q.push(cur-&gt;right);\n            }\n        }\n        depth++;\n    }\n}\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#_21","title":"\u591a\u53c9\u6811","text":"<p>DFS</p> C++<pre><code>void traverse(Node* root) {\n    if (root == nullptr) {\n        return;\n    }\n    // \u524d\u5e8f\u4f4d\u7f6e\n    for (Node* child : root-&gt;children) {\n        traverse(child);\n    }\n    // \u540e\u5e8f\u4f4d\u7f6e\n}\n</code></pre> C++<pre><code>\n</code></pre>","tags":["\u7b97\u6cd5"]},{"location":"computer/Algorithm/algorithm/#reference","title":"Reference","text":"<ul> <li>https://labuladong.online/algo/home/</li> </ul>","tags":["\u7b97\u6cd5"]},{"location":"computer/C/learning_c/","title":"C\u8bed\u8a00","text":"<code>#programming language</code>","tags":["programming language"]},{"location":"computer/C/learning_c/#c","title":"C \u8bed\u8a00","text":"<p> \u7ea6 3515 \u4e2a\u5b57  883 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p> <ul> <li>\u5e76\u975e\u4ece\u96f6\u5f00\u59cb</li> <li>B\u7ad9\u627e\u7684\u8bfe\uff0c\u70b9\u8fd9\u91cc</li> </ul>","tags":["programming language"]},{"location":"computer/C/learning_c/#1","title":"1 \u6307\u9488\u8fdb\u9636","text":"C<pre><code>int main()\n{\n    char* p = \"hello bit\";\n    char arr[] = \"abcde\";\n    p = arr;\n    printf(\"%c\", *p+2);\n    return 0;\n}\n</code></pre> <p>p\u4e0d\u662f\u6570\u7ec4\u540d\uff0c\u53ef\u4ee5\u6539\u53d8\u6307\u5411\u7684\u5730\u5740\uff0c\u6253\u5370\u7ed3\u679c\u4e3a</p> <p>c</p> C<pre><code>int main()\n{\n    char* p = \"hello bit\";\n    char arr[] = \"abcde\";\n    arr = p;\n    printf(\"%c\", *p+2);\n    return 0;\n}\n</code></pre> <p>\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3aarr\u662f\u6570\u7ec4\u540d\uff0c\u4e0d\u80fd\u66f4\u6539\u5176\u5730\u5740</p> C<pre><code>int main()\n{\n    char* p = \"hello bit\";\n    *p = 'w';\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u4f1a\u62a5\u9519\uff0c\u5e38\u91cf\u5b57\u7b26\u4e32\u4e0d\u80fd\u66f4\u6539\u3002</p> <p>\u7531\u6b64\u770b\u8fd9\u6bb5\u4ee3\u7801</p> C<pre><code>int main()\n{\n    char* p1 = \"hello\";\n    char* p2 = \"hello\";\n    char p3[] = \"hello\";\n    char p4[] = \"hello\";\n    if (p1 == p2)\n        printf(\"p1 == p2\\n\");\n    else\n        printf(\"p1 != p2\\n\");\n    if (p3 == p4)\n        printf(\"p3 == p4\\n\");\n    else\n        printf(\"p3 != p4\\n\");\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>p1 == p2 p3 != p4</p> <ul> <li>\u5bf9\u4e8ep1\u548cp2\uff0c\u4e24\u4efd\u76f8\u540c\u7684\u4e0d\u80fd\u66f4\u6539\u7684\u5e38\u91cf\u5b57\u7b26\u4e32\u5728\u5185\u5b58\u4e2d\u4f60\u6ca1\u5fc5\u8981\u540c\u65f6\u5b58\u5728\u4e24\u4efd   \u6240\u4ee5p1\u548cp2\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4</li> <li>\u5bf9\u4e8ep3\u548cp4,\u6570\u7ec4\u540d\u90fd\u4e0d\u540c\uff0c\u5f00\u8f9f\u4e86\u4e24\u5757\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4\u5404\u81ea\u5b58\u653e\u4e86\u53ef\u6539\u53d8\u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u662f\u6070\u597d\u5b58\u50a8\u7684\u5185\u5bb9\u76f8\u7b49\u3002</li> </ul>","tags":["programming language"]},{"location":"computer/C/learning_c/#11","title":"1.1 \u6307\u9488\u6570\u7ec4\uff08\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u6307\u9488\uff09","text":"C<pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n    //\u6307\u9488\u6570\u7ec4\n    //\u6570\u7ec4 - \u6570\u7ec4\u4e2d\u5b58\u653e\u7684\u662f\u6307\u9488\uff08\u5730\u5740\uff09\n    // int *arr[3];//\u5b58\u653e\u6574\u5f62\u6307\u9488\u7684\u6570\u7ec4\n    // int a = 10;\n    // int b = 20;\n    // int c = 30;\n    // int *arr[3] = {&amp;a, &amp;b, &amp;c};\n    int a[5] = {1,2,3,4,5};\n    int b[] = {2,3,4,5,6};\n    int c[] = {3,4,5,67,7};\n    int *arr[3] = {a, b, c};\n    int i, j;\n    for (i = 0;i&lt;3;i++)\n    {\n\n        for (j = 0;j&lt;5;j++)\n        {\n            printf(\"%d \", *(arr[i] + j));//arr[i]\u4e2d\u5b58\u653e\u7684\u662f\u5730\u5740\n        }\n        printf(\"\\n\");\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p>1 2 3 4 5 2 3 4 5 6 3 4 5 6 7 </p> C<pre><code>int main()\n{\n    int a[5] = {1,2,3,4,5};\n    int b[] = {2,3,4,5,6};\n    int c[] = {3,4,5,67,7};\n    int *arr[3] = {a, b, c};\n    int i, j;\n    for (i = 0;i&lt;3;i++)\n    {\n\n        for (j = 0;j&lt;5;j++)\n        {\n            printf(\"%d \", arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n} \n</code></pre> <p>\u5b9e\u73b0\u4e86\u6a21\u62df\u4e8c\u7ef4\u6570\u7ec4\u7684\u4f5c\u7528</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#12","title":"1.2 \u6570\u7ec4\u6307\u9488","text":"<p>\u6570\u7ec4\u6307\u9488\u662f\u4e00\u79cd\u6307\u9488</p> <p>\u6574\u5f62\u6307\u9488--\u6307\u5411\u6574\u5f62\u7684\u6307\u9488</p> <p>\u6570\u7ec4\u6307\u9488--\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488</p> C<pre><code>int main()\n{\n    int a = 10;\n    int* pa = &amp;a;\n    char ch = 'w';\n    char *pc = &amp;ch;\n    int arr[10] = {1,2,3,4,5};\n    double *d[5];\n\n    //int *parr = &amp;arr//\u8fd9\u6837\u80af\u5b9a\u4e0d\u5bf9\uff0carr\u662f\u6570\u7ec4\u5730\u5740\uff0cparr\u662f\u6574\u5f62\u5730\u5740\n    //int *parr[] = &amp;arr//\u4e5f\u4e0d\u5bf9\uff0c\u53d8\u6210\u6307\u9488\u6570\u7ec4\u4e86\n    int (*parr)[10] = &amp;arr;//*\u8981\u5148\u4e0eparr\u7ed3\u5408\uff0c\u6b64\u65f6\u7684parr\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u6307\u5411\u4e86\u6709\u5341\u4e2a\u5143\u7d20\u7684\u6574\u5f62\u6570\u7ec4arr,parr\u5b58\u653e\u7684\u5c31\u662f\u6570\u7ec4\u5730\u5740\n    double* (*pd)[5] = &amp;d;//\u4e00\u4e2a\u5c0f\u7ec3\u4e60\uff0cpd\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\u3002\n\n    return 0;\n}\n</code></pre> <p>\u6570\u7ec4\u6307\u9488\u548c\u6307\u9488\u6570\u7ec4\u6709\u4ec0\u4e48\u533a\u522b\uff1f</p> C<pre><code>int main()\n{\n    int arr[10] ={0};\n    int *p1 = arr;\n    int (*p2)[10] = &amp;arr;\n    printf(\"%p\\n\",p1);\n    printf(\"%p\\n\",p2);\n    printf(\"%p\\n\",p1+1);\n    printf(\"%p\\n\",p2+1);\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>000000000061FDE0 000000000061FDE0 000000000061FDE4 000000000061FE08</p> <p>p1+1\u4e00\u6b21\u8df3\u8fc7\u4e00\u4e2a\u5143\u7d20 p2+1\u4e00\u6b21\u8df3\u8fc7\u4e00\u4e2a\u6570\u7ec4</p> <p>\u6570\u7ec4\u540d\u662f\u6570\u7ec4\u7684\u9996\u5143\u7d20\u7684\u5730\u5740 \u4f46\u662f\u6709\u4e24\u4e2a\u4f8b\u5916\uff1a</p> <ul> <li>sizeof(\u6570\u7ec4\u540d) -\u6570\u7ec4\u540d\u8868\u793a\u6574\u4e2a\u6570\u7ec4\uff0c\u8ba1\u7b97\u7684\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662f\u5b57\u8282</li> <li>&amp;\u6570\u7ec4\u540d - \u6570\u7ec4\u540d\u8868\u793a\u6574\u4e2a\u6570\u7ec4\uff0c\u53d6\u51fa\u7684\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u5730\u5740</li> </ul> <p>\u6570\u7ec4\u6307\u9488\u7684\u4f7f\u7528</p> C<pre><code>int main()\n{\n    int arr[10] = {1,2,3,4,5,6,7,8,9,10};\n    int (*pa)[10] =&amp;arr;\n    //\u6b64\u65f6\u60f3\u628a\u6570\u7ec4\u5143\u7d20\u6253\u5370\u51fa\u6765\u5c31\u5f88\u9ebb\u70e6\uff0c\u5982\u4e0b\n    int i;\n    for(i = 0;i&lt;10;i++)\n    {\n        printf(\"%d \",*((*pa)+i));//\u6570\u7ec4\u5730\u5740\u89e3\u5f15\u7528\u5f97\u5230\u6570\u7ec4\u540d\u7684\u5730\u5740\n        //\u4e5f\u53ef\u4ee5\u5199\u4f5c\uff1a\n        printf(\"%d \",*((*pa)[i]));\n    } \n    return 0;\n}\nvoid print1(int a[3][5],int r,int c)\n{\n    int i = 0;\n    int j = 0;\n    for(i = 0;i&lt;r;i++)\n    {\n        for(j =0;j&lt;c;j++)\n        {\n            printf(\"%d \",a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\nvoid print2(int (*p)[5],int r,int c )\n{\n     int i,j;\n     for(i = 0;i&lt;r;i++)\n     {\n        for(j = 0;j&lt;c;j++)\n        {\n            printf(\"%d \",*(*(p+i)+j));\n        }\n        printf(\"\\n\");\n     }\n}\nint main()\n{\n    int arr[3][5] = {{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};\n    print1(arr,3,5);\n    print2(arr,3,5);//arr\u6570\u7ec4\u540d\u8868\u793a\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740\u3002\u4f46\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u9996\u5143\u7d20\u662f\u7b2c\u4e00\u884c\uff01\uff01\n    return 0;\n}\n</code></pre> <p>\u7406\u89e3\u4e00\u4e0b</p> C<pre><code>int (*parr3[10])[5];//parr3\u662f\u4e00\u4e2a\u80fd\u5b58\u50a8\u6570\u7ec4\u6307\u9488\u7684\u6570\u7ec41\uff0c\u8be5\u6570\u7ec4\u80fd\u591f\u5b58\u653e\u5341\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u6bcf\u4e2a\u6570\u7ec4\u6307\u9488\u80fd\u591f\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e94\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u662fint\u7c7b\u578b\u3002\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#13","title":"1.3 \u6570\u7ec4\u53c2\u6570\u548c\u6307\u9488\u53c2\u6570","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#131","title":"1.3.1 \u4e00\u7ef4\u6570\u7ec4\u4f20\u53c2","text":"C<pre><code>void test(int arr[10])//ok,10\u53ef\u4ee5\u7701\u7565\u4e0d\u5199\n{}\nvoid test(int arr[])//ok\n{}\nvoid test(int *arr)//ok\n{}\nvoid test2(int *arr[20])//ok\n{}\nvoid test2(int **arr)//ok\n{}\nint main()\n{\n    int arr[10] = {0};\n    int *arr2[20] = {0};\n    test(arr);\n    test2(arr2);\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#142","title":"1.4.2 \u4e8c\u7ef4\u6570\u7ec4\u4f20\u53c2","text":"C<pre><code>void test(int arr[3][5])//ok\n{}\nvoid test(int arr[][])//no,\u53ea\u80fd\u7701\u7565\u884c\uff0c\u5217\u662f\u7edd\u5bf9\u4e0d\u80fd\u7701\u7565\u7684\n{}\nvoid test(int arr[][5])//ok\n{}\nvoid test(int* arr)//no,\u4e8c\u7ef4\u6570\u7ec4\u7684\u9996\u5143\u7d20\u7684\u5730\u5740\u662f\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0c\u62ff\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u63a5\u6536\u80af\u5b9a\u4e0d\u884c\u3002\n{}\nvoid test(int* arr[5])//\u6307\u9488\u6570\u7ec4\u66f4\u4e0d\u884c\u4e86\n{}\nvoid test(int (*arr)[5])//\u6574\u4e2a\u53ef\u4ee5\uff0c\u8868\u793a\u542b\u4e94\u4e2a\u6574\u5f62\u5143\u7d20\u7684\u6570\u7ec4\u7684\u5730\u5740\u3002\n{}\nint main()\n{\n    int arr[3][5] = {0};\n    test(arr);//\u4f20\u8fc7\u53bb\u4e00\u4e2a\u4e00\u4f4d\u6570\u7ec4\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#15","title":"1.5 \u51fd\u6570\u6307\u9488","text":"C<pre><code>int Add(int x,int y)\n{\n    return x + y;\n}\nint main()\n{\n    printf(\"%p\\n\",Add);\n    printf(\"%p\",&amp;Add);\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a</p> <p>0000000000401550 0000000000401550</p> <p>\u6570\u7ec4\u540d \uff01= &amp;\u6570\u7ec4\u540d \u51fd\u6570\u540d  = &amp;\u51fd\u6570\u540d \u90a3\u4e48\u6539\u5982\u4f55\u5b58\u50a8\u51fd\u6570\u6307\u9488\u5462\uff1f</p> C<pre><code>//\u53c2\u8003\u6570\u7ec4\u6307\u9488\nint (*pf)(int,int) = &amp;Add;\n//\u524d\u9762\u63d0\u5230\u51fd\u6570\u540d = &amp;\u51fd\u6570\u540d\uff0c\u90a3\u4e48\u4e0b\u9762\u7684\u5199\u6cd5\u4e5f\u53ef\u4ee5\nint (*pf)(int,int) = Add;\n</code></pre> <p>\u90a3\u4e48\u5982\u4f55\u901a\u8fc7\u6307\u9488\u8c03\u7528\u5462\uff1f</p> C<pre><code>int ret = (*pf)(3,5);\n//Add \u548c &amp;Add\u7b49\u4ef7 \u5219*pf \u548c pf\u540c\u6837\u7b49\u4ef7\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u5199\u6cd5\u4e5f\u53ef\u4ee5\nint ret = pf(3,5);\n</code></pre> <p>\u4e24\u6bb5\u4ee3\u7801</p> C<pre><code>(*(void(*)())0)();//\u4ee3\u7801I\n\nvoid(*signal(int,void(*)(int)))(int);//\u4ee3\u7801II\n</code></pre> <p>\u4ee3\u7801I:</p> <p>1. (void(*)())0 \u8fd9\u90e8\u5206\u662f\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\uff0c\u5b83\u5c06 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff1a 0 \u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u8868\u793a\u7a7a\u6307\u9488\uff08NULL \u6216 nullptr\uff09\u3002 (void(*)()) \u662f\u4e00\u79cd\u7c7b\u578b\u8f6c\u6362\uff0c\u8868\u793a\u5c06 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u5177\u4f53\u662f void (*)()\uff0c\u5373\u6307\u5411\u8fd4\u56de\u7c7b\u578b\u4e3a void\u3001\u6ca1\u6709\u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\u3002 \u901a\u8fc7\u8fd9\u4e2a\u7c7b\u578b\u8f6c\u6362\uff0c0 \u53d8\u6210\u4e86\u4e00\u4e2a \"\u65e0\u6548\u7684\" \u51fd\u6570\u6307\u9488\uff0c\u5b83\u6307\u5411\u5730\u5740 0\uff0c\u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u8868\u793a\u6ca1\u6709\u5408\u6cd5\u7684\u51fd\u6570\u30022. ((void(*)())0) \u8fd9\u90e8\u5206\u901a\u8fc7\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26 * \u6765 \"\u8c03\u7528\" 0 \u5730\u5740\u4e0a\u7684\u51fd\u6570\u3002\u7531\u4e8e 0 \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u89e3\u5f15\u7528\u5b83\u5b9e\u9645\u4e0a\u4f1a\u5f15\u53d1\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u56e0\u4e3a 0 \u4e0d\u662f\u6709\u6548\u7684\u51fd\u6570\u5730\u5740\u3002\u8fd9\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u6216\u5176\u4ed6\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\u30023. (); \u6700\u540e\u7684 (); \u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u3002\u5b83\u8868\u793a\u5c1d\u8bd5\u8c03\u7528 ((void(*)())0) \u6240\u6307\u5411\u7684\u51fd\u6570\u3002 \u7efc\u5408\u8d77\u6765\uff1a \u8fd9\u6bb5\u4ee3\u7801\u7684\u6574\u4f53\u610f\u601d\u662f\uff1a \u5c06 0 \u8f6c\u6362\u6210\u4e00\u4e2a\u65e0\u53c2\u6570\u3001\u8fd4\u56de void \u7684\u51fd\u6570\u6307\u9488\u3002 \u5c1d\u8bd5\u89e3\u5f15\u7528\u8fd9\u4e2a\u6307\u9488\u5e76\u8c03\u7528\u8be5\u51fd\u6570\u3002\u7531\u4e8e\u8fd9\u4e2a\u6307\u9488\u662f\u7a7a\u7684\uff0c\u6307\u5411\u5730\u5740 0</p> <p>\u4ee3\u7801II\uff1a</p> <p>\u8fd9\u6bb5\u4ee3\u7801\u58f0\u660e\u4e86signal\u51fd\u6570\uff0csignal\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u4e00\u4e2a\u4e3aint\u7c7b\u578b\u4e00\u4e2a\u4e3a \u51fd\u6570\u6307\u9488\uff0c\u4e14\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u53c2\u6570\u4e3aint \u7c7b\u578b\uff0c\u8fd4\u56de\u7c7b\u578b\u662fvoid \u800csignal\u7684\u8fd4\u56de\u7c7b\u578b\u662f\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u6307\u5411\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578b\u4e3avoid\uff0c\u53c2\u6570\u4e3aint\u7684\u51fd\u6570\u3002</p> <p>\u4ee3\u7801II\u53ef\u80fd\u5199\u4f5c: <code>void(*)(int)signal(int,void(*)(int));</code> \u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u9057\u61be\u7684\u662f\u8bed\u6cd5\u4e0d\u652f\u6301</p> <p>\u4f46\u8fd8\u6709\u89e3\u51b3\u529e\u6cd5\uff1a ----\u4f7f\u7528typedef\u5bf9\u51fd\u6570\u7c7b\u578b\u8fdb\u884c\u91cd\u5b9a\u4e49</p> C<pre><code>typedef unsigned int uint;\n</code></pre> <p>\u8fd9\u4e2a\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u7528uint\u66ff\u4ee3\u4e86unsigned int; \u90a3\u4e48 <code>void(*signal(int,void(*)(int)))(int);</code> \u7b49\u4ef7\u4e8e</p> C<pre><code>typedef void(*pfun_t)(int);\np_funt signal(int,p_funt);\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#16","title":"1.6 \u51fd\u6570\u6307\u9488\u6570\u7ec4","text":"C<pre><code>int add(int x,int y);\n{\n    return x + y;\n}\nint sub(int x,int y);\n{\n    return x - y;\n}\nint main()\n{\n    int (*pf1)(int,int) = add;\n    int (*pf2)(int,int) = sub;\n    int (*pfArr[2])(int,int);\n    //\u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662f\u4ec0\u4e48\u7c7b\u578b\uff1f\u51fd\u6570\u6307\u9488\n    //\u8be5\u51fd\u6570\u6307\u9488\u8fd4\u56de\u7c7b\u578b\u4e3aint\uff0c\u53c2\u6570\u4e3a(int,int)\u51fd\u6570\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#17","title":"1.7 \u6307\u5411\u51fd\u6570\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488","text":"C<pre><code>int(*p)(int,int);//\u51fd\u6570\u6307\u9488\nint(*p2[4])(int,int)//\u51fd\u6570\u6307\u9488\u7684\u6570\u7ec4\nint(*(*p3)[4])(int,int) = &amp;p2 //\u6307\u5411\u51fd\u6570\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\uff0c*p3\u8bf4\u660e\u662f\u4e00\u4e2a\u6307\u9488\uff0c[4]\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u542b\u6709\u56db\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u51fd\u6570\u6307\u9488\uff0c\u4e14\u8fd9\u4e9b\u51fd\u6570\u6307\u9488\u6307\u5411\u8fd4\u56de\u503c\u4e3aint,\u53c2\u6570\u4e3a(int,int)\u7684\u51fd\u6570\u3002\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#18","title":"1.8 \u56de\u8c03\u51fd\u6570","text":"<p>\u6982\u5ff5\uff1a \u5199\u4e86\u4e2aa\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u76f4\u63a5\u8c03\u7528a\u51fd\u6570\uff0c\u800c\u662f\u901a\u8fc7b\u51fd\u6570\u8c03\u7528a\u51fd\u6570\uff0c\u5373a\u51fd\u6570\u5730\u5740\u4f20\u5230\u4e86b\u51fd\u6570\u7684\u5f62\u53c2\u4e2d \u79f0a\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570 \u4ee5\u5192\u6ce1\u6392\u5e8f\u4e3a\u4f8b\u5b50\uff1a</p> C<pre><code>//\u5347\u5e8f\nvoid bubble_sort(int arr[],int sz)\n{\n    int i = 0;\n    int j = 0;\n    for(i = 0;i&lt;sz-1-i;i++)\n    {\n        for(j = 0;j &lt; sz-1-i;j++)//\u7b2c\u4e00\u6b21\u628a\u6700\u5927\u7684\u653e\u5230\u6700\u540e\uff0c\u7b2c\u4e8c\u6b21\u628a\u7b2c\u4e8c\u5927\u7684\u653e\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n        {\n            if(arr[j]&gt;arr[j+1]);\n        {\n            tmp = arr[j];\n            arr[j] = arr[j+1];\n            arr[j+1] = tmp;\n        }\n        }\n    }\n}\nvoid print_arr(int arr[],int sz)\n{\n    int i;\n    for(i = 0;i&lt;sz;i++)\n    {\n        printf(\u201c%d \u201d,arr[i]);\n    }\n}\nint main()\n{\n    int arr[10] = {9,8,7,6,5,4,3,2,1,0};\n    int sz = sizeof(arr)/sizeof(arr[0]);\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#181-qsort","title":"1.8.1 qsort\u51fd\u6570\u4e3a\u4f8b","text":"<p>\u4e0b\u9762\u7528qsort\u51fd\u6570\u5b9e\u73b0\u529f\u80fd\uff1a</p> C<pre><code>//qsort \u7684\u4f7f\u7528\u65b9\u6cd5\nvoid qsort(void*base,size_t num,size_t size,int(*compar)(const void*,const void*));\nbase \u4e2d\u5b58\u653e\u7684\u65f6\u5f85\u6392\u5e8f\u6570\u636e\u4e2d\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740 void*\u662f\u65e0\u7c7b\u578b\u7684\u6307\u9488\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u4efb\u4f55\u7c7b\u578b\u7684\u6307\u9488\u3002\nnum \u5143\u7d20\u4e2a\u6570\nsize \u662f\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u6570\u7ec4\u7c7b\u578b\u662f\u4ec0\u4e48\uff0c\u5b9e\u9645\u4e0a\u548cbase\u8054\u52a8\n\u5047\u8bbe\u8981\u5199\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\u51fd\u6570\u8ba9\u4f60\u6392\u5e8f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6570\u636e\u4e0d\u4e00\u6837\uff0c\u6392\u5e8f\u65b9\u6cd5\u4e5f\u4e0d\u4e00\u6837\ncompar\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u662f\u7528\u6765\u6bd4\u8f83\u5f85\u6392\u5e8f\u6570\u636e\u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u7684\u51fd\u6570\nvoid* e1 \u548c void* e2\u662f\u4e24\u4e2a\u5f85\u6bd4\u8f83\u5143\u7d20\u7684\u5730\u5740\n</code></pre> <p>\u5173\u4e8ecompar\u6307\u5411\u7684\u51fd\u6570</p> return value meaning &lt;0 p1\u6307\u5411\u7684\u5143\u7d20\u5728p2\u6307\u5411\u7684\u5143\u7d20\u4e4b\u540e 0 p1\u6307\u5411\u7684\u5143\u7d20\u7b49\u540c\u4e8ep2\u6307\u5411\u7684\u5143\u7d20 &gt;0 p1\u6307\u5411\u7684\u5143\u7d20\u5728p2\u6307\u5411\u7684\u5143\u7d20\u4e4b\u524d C<pre><code>int compareMyType (const void * a, const void * b)\n{\n  if ( *(MyType*)a &lt;  *(MyType*)b ) return -1;\n  if ( *(MyType*)a == *(MyType*)b ) return 0;\n  if ( *(MyType*)a &gt;  *(MyType*)b ) return 1;\n}\n//\u8fd9\u662f\u6700\u7b80\u5355\u7684\u624b\u6cd5\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;//\u4f7f\u7528qsort\u51fd\u6570\u9700\u8981\u5f15\u7528\u7684\u5934\u6587\u4ef6\nvoid print_arr(int arr[], int sz)\n{\n    int i;\n    for (i = 0; i &lt; sz; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n}\nint cmp_int(const void* e1, const void* e2)\n{\n    return *(int*)e1 - *(int*) e2;\n}\nint main()\n{\n    int arr[] = { 9,8,7,6,5,4,3,2,1,0 };\n    int sz = sizeof(arr) / sizeof(arr[0]);\n    qsort(arr, sz, sizeof(arr[0]), cmp_int);\n    print_arr(arr, sz);\n    return 0;\n}\n</code></pre> <p>\u4f7f\u7528qsort\u51fd\u6570\u6392\u5e8f\u7ed3\u6784\u4f53\uff1a</p> C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\nstruct stu\n{\n    char name[20];\n    int age;\n};\nint cmp_by_age(const void* e1, const void* e2)\n{\n    return (*(struct stu*)e1).age - (*(struct stu*)e2).age;//\u6309\u5e74\u9f84\u6392\u5e8f\n    //return (struct stu*)e1-&gt;age - (struct stu*)e2)-&gt;age;\u8fd9\u6837\u4e5f\u53ef\u4ee5\u7684\n}\nint cmp_by_name(const void* e1, const void* e2)\n{\n    return strcmp(((struct stu*)e1)-&gt;name, ((struct stu*)e2)-&gt;name);//\u60f3\u8981\u5b9e\u73b0\u964d\u5e8f\u76f4\u63a5\u628ae1\u548ce2\u6362\u4e2a\u4f4d\u7f6e\u3002\n}\n\nint main()\n{\n    struct stu s[3] = { {\"zhangsan\",30},{\"lisi\",34},{\"wangwu\",20} };\n    int sz = sizeof(s) / sizeof(s[0]);\n    qsort(s, sz, sizeof(s[0]), cmp_by_age);\n    printf(\"%s\", s[0].name);\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#182-qsort","title":"1.8.2 \u6a21\u62dfqsort\u5b9e\u73b0\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\u7684\u901a\u7528\u7b97\u6cd5:","text":"C<pre><code>//\u6a21\u62dfqsort\u5b9e\u73b0\u4e00\u4e2a\u5192\u6ce1\u6392\u5e8f\u7684\u901a\u7528\u7b97\u6cd5\nvoid print_arr(int* arr, int sz)\n{\n    int i;\n    for (i = 0; i &lt; sz; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n}\nvoid swap(char* buf1, char* buf2, int width)\n{\n    //\u5229\u7528width\u628a\u5b57\u8282\u9010\u4e2a\u4ea4\u6362\n    int i;\n    char tmp;\n    for (i = 0; i &lt; width; i++)\n    {\n        tmp = *buf1;\n        *buf1 = *buf2;\n        *buf2 = tmp;\n        buf1++;\n        buf2++;\n    }\n}\nvoid bubble_sort(void* base, int sz, int width, int(*cmp)(const void* e1, const void* e2))\n{\n    int i = 0;\n    int j = 0;\n    int tmp;\n    for (i = 0; i &lt; sz - 1; i++)\n    {\n        for (j = 0; j &lt; sz - 1 - i; j++)\n        {\n            //\u4e24\u4e2a\u5143\u7d20\u6bd4\u8f83\n            //\u7b2c\u4e00\u4e2a\u5143\u7d20(char*)base + width;\n            //\u7b2c\u4e8c\u4e2a\u5143\u7d20(char*)base + 2*width;\n            //\u7b2cj\u4e2a\u5143\u7d20(char*)base + j*width;\n            if (cmp((char*)base + j * width, (char*)base + (j + 1) * width) &gt; 0)\n            {\n                //\u4ea4\u6362\n                swap((char*)base + j * width, (char*)base + (j + 1) * width, width);\n                //\u4f20\u8fdb\u53bb\u4e86\u4e24\u4e2avoid \u7c7b\u578b\u7684\u5730\u5740\uff0c\u4f46\u662fswap\u5e76\u4e0d\u77e5\u9053\u6307\u9488\u7c7b\u578b\u6240\u4ee5\u8fd8\u8981\u4f20\u5165width;\n            }\n\n        }\n    }\n}\nint cmp_int(const void* e1, const void* e2)\n{\n    return *(int*)e1 - *(int*)e2;\n}\nint main()\n{\n    int arr[10] = { 1,3,5,7,9,2,4,6,8,0 };\n    int sz = sizeof(arr) / sizeof(arr[0]);\n    bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);\n    print_arr(arr, sz);\n    return 0;\n} \n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#19","title":"1.9 \u6307\u9488\u7ec3\u4e60","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#191","title":"1.9.1 \u5bf9\u6307\u9488\u7684\u7406\u89e3","text":"<p>sizeof(\u6570\u7ec4\u540d) - -\u8ba1\u7b97\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f</p> <p>&amp;\u6570\u7ec4\u540d\uff0c\u53d6\u51fa\u4e86\u6574\u4e2a\u6570\u7ec4\u7684\u5730\u5740\uff1b</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u6240\u6709\u6570\u7ec4\u540d\u90fd\u662f\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740\uff1b</p> C<pre><code>int main()\n{\n    int a[] = {1,2,3,4};\n    sizeof(a) = 16;\n    sizeof(a + 0) = 4;//32\u4f4d\u5e73\u53f0\u662f4\uff0c\u516d\u5341\u56db\u4f4d\u5e73\u53f0\u662f8\n    sizeof(*a) = 4;\n    sizeof(a + 1) = 4;//\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u5730\u5740\n    sizeof(a[1]) = 4;\n    -------------------\n    sizeof(&amp;a) = 4; \n    sizeof(*&amp;a) = 16;\n    sizeof(&amp;a+1) = 4;\n    sizeof(&amp;a[0]) = 4;\n    sizeof(&amp;a[0] + 1) = 4;\n    char arr[] = {'a','b','c','d','e','f'};\n    strlen(arr) random;\n    strlen(arr+0)  random;\n    strlen(*arr)  error;\n    strlen(arr[1]) error;\n    strlen(&amp;arr) random;//\u4f20\u5230strlen\u91cc\u9762\u540e\uff0cchar*[6]-&gt;char*;\n    strlen(&amp;arr + 1) random-6;\n    strlen(&amp;arr[0] + 1) random-1;\n    char* p = \"abcdef\";\n    strlen(p) = 6;\n    strlen(p+1) = 5;\n    strlen(*p) err;\n    strlen(&amp;p) random;\n    strlen(&amp;p + 1) random;//\u4e24\u4e2arandom\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5173\u952e\u5728&amp;p\u7684\u56db\u4e2a\u5b57\u8282\u4e2d\u6709\u6ca1\u6709\\0;\n    --------\n    int* a[3][4] = { 0 };\n    sizeof(a[0]) = 16;//\u7b2c\u4e00\u884c\u7684\u6570\u7ec4\u540d\uff0c\u8868\u793a\u7b2c\u4e00\u884c\u9996\u5143\u7d20\u7684\u5730\u5740\n    sizeof(a[0]+1) = 4;//\u7b2c\u4e00\u884c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u5730\u5740\n    sizeof(*(a[0] + 1)) = 4;//\u7b2c\u4e00\u884c\u7b2c\u4e8c\u4e2a\u5143\u7d20\n    sizeof(a + 1) = 4;//a\u8868\u793a\u4e8c\u7ef4\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0ca + 1\u4e3a\u7b2c\u4e8c\u884c\u7684\u5730\u5740\n    sizeof(*(a + 1)) = 16;//\u5bf9\u7b2c\u4e8c\u884c\u7684\u5730\u5740\u89e3\u5f15\u7528\u5c31\u627e\u5230\u4e86\u7b2c\u4e8c\u884c\u7684\u6570\u7ec4\u540d\n    sizeof(&amp;a[0] + 1) = 4;//&amp;a[0]\u662f\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0c+1\u5f97\u5230\u7b2c\u4e8c\u884c\u7684\u5730\u5740\u3002\n    sizeof(*(&amp;a[0]+1)) = 16;  //a[0]\u662f\u7b2c\u4e00\u884c\u7684\u6570\u7ec4\u540d\uff0c&amp;a[0]\u5f97\u5230\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0c&amp;a[0]+1\u8868\u793a\u7b2c\u4e8c\u884c\u7684\u5730\u5740\u89e3\u5f15\u7528\u5f97\u5230\u7b2c\u4e8c\u884c\n    sizeof(*a) = 16;//a\u4f5c\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u6570\u7ec4\u540d\uff0c\u6ca1\u6709&amp;\u6ca1\u6709\u5355\u72ec\u653e\u5728sizeof\u5185\u90e8\uff0c\u90a3\u4e48a\u8868\u793a\u9996\u5143\u7d20\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0c\u5bf9\u7b2c\u4e00\u884c\u7684\u5730\u5740\u89e3\u5f15\u7528\u5f97\u5230\u7b2c\u4e00\u884c\uff0c\u6240\u4ee5*a\u5c31\u662f\u7b2c\u4e00\u884c\u3002\n    sizeof(a) = 48;//\u4e8c\u7ef4\u6570\u7ec4\u7684\u6570\u7ec4\u540d\uff0c\u8ba1\u7b97\u7684\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5927\u5c0f\u3002\n    sizeof(a[3]) = 16;//\u6ca1\u6709\u8c03\u7528\u8d8a\u754c\u5143\u7d20\n\n    return 0;\n}\nint main()\n{\n    short s =5;\n    int a = 4;\n    sizeof(s = a+6) = 2;\n    s = 5;//sizeof\u5185\u90e8\u7684\u8868\u8fbe\u5f0f\u4e0d\u53c2\u4e0e\u8fd0\u7b97\uff0c\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#192","title":"1.9.2 \u6307\u9488\u7b14\u8bd5\u9898","text":"C<pre><code>int main()\n{\n    int a[5] = {1,2,3,4,5};\n    int* ptr = (int*)(&amp;a + 1);\n    printf(\"%d %d\",*(a + 1),*(ptr - 1));\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>2 5</p> C<pre><code>struct test\n{\n    int num;\n    char* pcname;\n    short sdate;\n    char cha[2];\n    short sba[4];\n}* p;//1.\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u662f\u4e8c\u5341\u4e2a\u5b57\u8282\u30022.p\u7684\u503c\u4e3a0x100000(\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u76841\u5c31\u8868\u793a\u4e00\u4e2a\u5b57\u8282)\nint main()\n{\n    p + 0x1 =0x100014 ;//\u76f8\u5f53\u4e8e\u79fb\u52a8\u4e8c\u5341\u4e2a\u5b57\u8282\uff0c\n    (unsigned long)p + 0x1 = 0x100001;//\u8f6c\u6362\u6210\u6574\u5f62\u540e\u52a0\u4e00\u5c31\u662f\u52a0\u4e00\n    (unsigned int*)p + 0x1 = 0x100004;//\u5b9e\u9645\u4e0a\u52a0\u7684\u662f4\n    return 0;\n}\n</code></pre> C<pre><code>int main()\n{\n    int a[4] = {1,2,3,4};\n    int* ptr1 = (int*)(&amp;a + 1);\n    int* ptr2 = (int*)((int)a + 1);//\u8df3\u8fc7\u4e00\u4e2a\u5b57\u8282\uff0c\u6309\u7167\u5c0f\u7aef\u8003\u8651\uff0c\u4f4e\u2014\u201401 00 00 00| 02 00 00 00|....\n    //\u4ece\u6307\u541101\u5230\u6307\u541102,\u6309\u7167\u6574\u5f62\u89e3\u5f15\u7528\u540eptr2\u7684\u5185\u5bb9\u662f00 00 00 02\n    printf(\"%x,%x\",ptr1[-1],*ptr2);                                 \n    //4,20000000\n    printf(\"%#x,%#x\",ptr1[-1],*ptr2);\n    //0x4,0x20000000;\n    return 0;\n}\nint main()\n{\n    int a[3][2] = {(0,1),(2,3),(4,5)};//\u6ce8\u610f\u91cc\u9762\u662f\u62ec\u53f7\u3002\n    int* p;\n    p = a[0];\n    printf(\"%d\",p[0]);\n    //1\n    return 0;\n}\nint main()\n{\n    int a[5][5];\n    int(*p)[4];\n    p = a;\n    printf(\"%p,%d\",&amp;p[4][2] - &amp;a[4][2],&amp;p[4][2] - &amp;a[4][2]);//\u6307\u9488\u548c\u6307\u9488\u76f8\u51cf\u5f97\u5230\u4e24\u4e2a\u6307\u9488\u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570\uff0c\n    //&amp;p[4][2] - &amp;a[4][2]\u7ed3\u679c\u5e94\u8be5\u662f-4\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u662f1111 1111 1111 1111 1111 1111 1111 1100\uff1b\n    //F F F F F F F C(32\u4f4d\u7cfb\u7edf\uff09\n    return 0;\n}\n12345 12345 12345 12345 12345\n1234 5123 4512 3451 2345 1234 5\nint main()\n{\n    int aa[2][5] = {1,2,3,4,5,6,7,8,9,10};\n    int* ptr1 = (int*)(&amp;aa + 1);//\u8df3\u8fc7\u4e00\u6574\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n    int* ptr2 = (int*)(*(aa+1));//\u8df3\u5230\u7b2c\u4e8c\u884c\u3002\n    printf(\"%d %d\",*(ptr1 - 1),*(ptr2 - 1));\n    //10 6;\n    return 0;\n}\nint main()\n{\n    char* a[] = {\"work\",\"at\",\"alibaba\"};//\u521d\u59cb\u5316\u4e86\u4e09\u4e2a\u6307\u9488\u5206\u522b\u5b58\u653e\u4e09\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5143\u7d20\u7684\u5730\u5740\n    char** pa = a;//w\u7684\u5730\u5740\n    pa++;//\u4f7fpa\u6307\u5411\u4e0b\u4e00\u4e2achar*\u7c7b\u578b\u7684\u5143\u7d20\uff0ca[]\u5b9e\u9645\u5b58\u653e\u7684\u662f3\u4e2a\u5927\u5c0f\u4e3a8\u4e2a\u5b57\u8282\u7684\u6307\u9488\u53d8\u91cf\n    printf(\"%s\",*pa);\n    //at\n\n    return 0;\n}\nint main()\n{\n    char* c[] = {\"enter\",\"new\",\"point\",\"first\"};//c[]\u7528\u56db\u4e2a\u6307\u9488\u5b58\u653e\u4e86\"a\",\"b\",\"c\",\"d\"\u7684\u5730\u5740\u3002\n    char** cp[] = {c+3,c+2,c+1,c};//cp[]\u7528\u56db\u4e2a\u4e8c\u7ea7\u6307\u9488\u5b58\u653e\u4e86c+3,c+2,c+1,c\u7684\u5730\u5740\u3002\n    char*** cpp = cp;//cpp[]\u5b58\u653e\u4e86cp\u4e2d\u7b2c\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u7684\u5730\u5740\n    **++cpp;//++\u627e\u5230cp[]\u4e2d\u7b2c2\u4e2a\u4e8c\u7ea7\u6307\u9488c+2\u7684\u5730\u5740,\u89e3\u5f15\u7528\u540e\u627e\u5230\u4e8c\u7ea7\u6307\u9488c+2,\u5bf9\u4e8c\u7ea7\u6307\u9488c+2\u89e3\u5f15\u7528\u5f97\u5230\"c\";\n    *--*++cpp + 3;//er\n    *cpp[-2] + 3;//**(cpp-2) + 3;  st\n    cpp[-1][-1] + 1;//*(*(cpp-1)-1) + 1;  ew\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#193","title":"1.9.3 \u4f5c\u4e1a\u9898","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u7684\u51fd\u6570\u6709\u4e24\u4e2aint \u5f62\u53c2\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6709\u4e00\u4e2aint\u5f62\u53c2\u4e14\u8fd4\u56deint \u7684\u51fd\u6570\u3002</p> C<pre><code>int (*)(int)(*p)(int int);//\u6ca1\u6709\u8fd9\u79cd\u5199\u6cd5\nint (*(*p)(int int))(int);\n</code></pre> <p>\u6768\u6c0f\u77e9\u9635\u67e5\u627e\u5bf9\u5e94\u5b57\u7b26</p> C<pre><code>\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#2","title":"2 \u5b57\u7b26\u4e32\u51fd\u6570\u548c\u5185\u5b58\u51fd\u6570","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#21","title":"2.1 \u5b57\u7b26\u4e32\u51fd\u6570","text":"<p>strlen\u7684\u8fd4\u56de\u503c\u662f size_t\uff08\u65e0\u7b26\u53f7\u6574\u5f62\uff09</p> <p>\u4f20\u5730\u5740\uff0c\u9047\u5230'\\0'\u505c\u6b62\uff0c\u8fd4\u56de'\\0'\u4e4b\u524d\u7684\u5b57\u7b26\u4e2a\u6570</p> C<pre><code>int main()\n{\n    if(strlen(\"abc\") - strlen(\"abcdef\") &gt; 0)\n    {\n        printf(\"&gt;\");\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>&gt;</p> <p>strcpy</p> <ul> <li>\u539f\u5b57\u7b26\u4e32\u4e00\u5b9a\u8981\u4ee5'\\0'\u7ed3\u5c3e</li> <li>\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u591f\u4e5f\u80fd\u62f7\u8d1d\u4f46\u662f\u4f1a\u62a5\u9519\uff0c\u6240\u4ee5\u76ee\u6807\u5b57\u7b26\u4e32\u957f\u5ea6\u8981\u591f\u5927</li> <li>\u76ee\u6807\u7a7a\u95f4\u4e00\u5b9a\u8981\u53ef\u4ee5\u4fee\u6539</li> </ul> C<pre><code>int main()\n{\n    char* str = \"abcdef\";\n    char* p = \"fedcba\";\n    strcpy(str,p);//\u76ee\u6807\u7a7a\u95f4\u4e0d\u53ef\u4fee\u6539\n    return 0;\n}\n</code></pre> <p>strstr  \u5b57\u4e32\u67e5\u627e\u51fd\u6570</p> C<pre><code>#include&lt;string.h&gt;\nint main()\n{\n    char* arr1[] = \"abcdef\";\n    char* arr2[] = \"bcd\";\n    char* ret = strstr(arr1,arr2);//\u5728arr1\u4e2d\u67e5\u627earr2\uff0c\u627e\u5230\u4e86\u5c31\u8fd4\u56dearr2\u5728arr1\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5730\u5740\uff0c\u5426\u5219\u8fd4\u56de\u7a7a\u6307\u9488\u3002\n    if(ret = NUll)\n    {\n        printf(\"\u6ca1\u627e\u5230\");\n    }\n    else\n    {\n        printf(\"\u627e\u5230\u4e86\");\n    }\n    return 0;\n}\n//\u6a21\u62df\u5b9e\u73b0\nint my_strstr(char*, char*);\nint main()\n{\n    char* arr1 = \"abcdef\";\n    char* arr2 = \"bcdd\";\n    if (my_strstr(arr1, arr2) == 1)\n        printf(\"found\");\n    else\n        printf(\"not found\");\n    return 0;\n}\nint my_strstr(char* str1, char* str2)\n{\n    int i, j;\n    while (*str1++ != *str2)\n    {\n        if(*str1 == '\\0')\n            return -1;\n    }\n    str1--;\n    while (*++str2 != '\\0')\n    {\n        str1++;\n        if (*str1 != *str2)\n            return -1;\n\n    }\n    return 1;\n\n}\n</code></pre> <p>strtok\u51fd\u6570</p> <p>char strtok(char str,const char* sep)</p> <ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86sep\u4e2d\u5305\u542b\u7684\u5206\u9694\u7b26</li> <li>strtok\u51fd\u6570\u627e\u5230str\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6807\u8bb0\uff0c\u5e76\u5c06\u5176\u7528'\\0'\u7ed3\u5c3e\uff0c\u4e5f\u5c31\u662f\u4f1a\u6539\u53d8\u5206\u9694\u7b26\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8fd9\u4e2a\u6807\u8bb0\u7684\u6307\u9488\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48str\u4e0d\u7528const\u4fee\u9970\u7684\u539f\u56e0</li> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u4e3aNUll\u65f6\uff0c\u51fd\u6570\u5c06\u4fdd\u5b58\u4ed6\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e,strtok\u51fd\u6570\u5c06\u4fdd\u5b58\u5b83\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\u3002</li> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3aNULL\u65f6\uff0c\u51fd\u6570\u5c06\u5728\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u88ab\u4fdd\u5b58\u7684\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\u4e0b\u4e00\u4e2a\u6807\u8bb0\u3002</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\u66f4\u591a\u7684\u6807\u8bb0\uff0c\u5219\u8fd4\u56deNULL\u6307\u9488</li> </ul> C<pre><code>int main()\n{\n    char arr[] = \"zpw@bitedu.tech\";\n    char* p = \"@.\";\n    char tmp[20] = {0}\uff1b\n    strcpy(tmp,arr);\n    //\u4f7f\u7528strtok\u65f6\u7684\u5e38\u7528\u64cd\u4f5c\u3002\n    char* ret = NULL;\n    for(ret = strtok(tmp,p);ret != NULL;ret = strtok(NULL,p))\n    {\n        printf(\"%s\\n\",ret);\n    }\n    return 0;\n}\n</code></pre> <p>strerror\u51fd\u6570</p> <p>\u5728\u8c03\u7528\u5e93\u51fd\u6570\u5931\u8d25\u7684\u65f6\u5019\u90fd\u4f1a\u8bbe\u7f6e\u9519\u8bef\u7801</p> <p>char * strerror(int errornum);</p> <p>\u9700\u8981\u5f15\u7528\u5934\u6587\u4ef6</p> C<pre><code>#include&lt;errno.h&gt;\n#include&lt;string.h&gt;\n</code></pre> <p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> C<pre><code>int main()\n{\n    FILe* pf = fopen(\"c.text\",\"r\");//\u6253\u5f00\u5931\u8d25\u5219pf = NULL\n    if(pf == NUll)\n    {\n        printf(\"%s\",strerror(errno));//strerror\u8fd4\u56de\u9519\u8bef\u7801\u5bf9\u5370\u7684\u5b57\u7b26\u4e32\u7684\u9996\u4e2a\u5b57\u7b26\u7684\u5730\u5740\u3002\n    }\n    fclose(pf);//\u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u66f4\u7b80\u5355\u7684\u51fd\u6570 perror</p> C<pre><code>int main()\n{\n    FILe* pf = fopen(\"c.text\",\"r\");//\u6253\u5f00\u5931\u8d25\u5219pf = NULL\n    if(pf == NUll)\n    {\n        printf(\"%s\\n\",strerror(errno));//strerror\u8fd4\u56de\u9519\u8bef\u7801\u5bf9\u5370\u7684\u5b57\u7b26\u4e32\u7684\u9996\u4e2a\u5b57\u7b26\u7684\u5730\u5740\u3002\n        perror(input);//\u5934\u6587\u4ef6\u662f&lt;stdio.h&gt;,\u76f4\u63a5\u6253\u5370 input :\"\u9519\u8bef\u4fe1\u606f\"\n    }\n    fclose(pf);//\u5173\u95ed\u6587\u4ef6\n    return 0;\n}\n</code></pre> <p>\u5b57\u7b26\u5206\u7c7b\u51fd\u6570\uff1a</p> <p>iscntrl(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u63a7\u5236\u5b57\u7b26\u3002\u63a7\u5236\u5b57\u7b26\u662fASCII\u7801\u57280\u523031\u4e4b\u95f4\uff08\u5305\u62ecDEL\u5b57\u7b26\uff09\u7684\u5b57\u7b26\u3002</p> <p>isspace(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u7a7a\u767d\u5b57\u7b26\u3002\u7a7a\u767d\u5b57\u7b26\u5305\u62ec\u7a7a\u683c\u3001\u5236\u8868\u7b26\u3001\u6362\u884c\u7b26\u7b49\u3002</p> <p>isdigit(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u6570\u5b57\u5b57\u7b26\uff08'0'\u5230'9'\uff09\u3002</p> <p>isxdigit(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u5b57\u7b26\uff08'0'\u5230'9'\u3001'A'\u5230'F'\u3001'a'\u5230'f'\uff09\u3002</p> <p>islower(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5c0f\u5199\u5b57\u6bcd\uff08'a'\u5230'z'\uff09\u3002</p> <p>isupper(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\uff08'A'\u5230'Z'\uff09\u3002</p> <p>isalpha(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\uff08'a'\u5230'z'\u6216'A'\u5230'Z'\uff09\u3002</p> <p>isalnum(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57\uff08'0'\u5230'9'\u3001'a'\u5230'z'\u3001'A'\u5230'Z'\uff09\u3002</p> <p>ispunct(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u6807\u70b9\u7b26\u53f7\uff08\u9017\u53f7\u3001\u53e5\u53f7\u3001\u95ee\u53f7\u7b49\uff0c\u4f46\u4e0d\u5305\u62ec\u7a7a\u683c\u3001\u5236\u8868\u7b26\u7b49\u7a7a\u767d\u5b57\u7b26\uff09\u3002</p> <p>isgraph(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u53ef\u6253\u5370\u7684\u975e\u7a7a\u767d\u5b57\u7b26\uff08\u5373\u9664\u7a7a\u767d\u5b57\u7b26\u5916\u7684\u4efb\u4f55\u53ef\u6253\u5370\u5b57\u7b26\uff09\u3002</p> <p>isprint(int c)\uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u5305\u62ec\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\uff0c\u4f46\u4e0d\u5305\u62ec\u63a7\u5236\u5b57\u7b26\u3002</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#22","title":"2.2 \u5185\u5b58\u51fd\u6570","text":"<ul> <li>memcpy(void destination,void source,size_t num)</li> </ul> <p>PS:\u4e0d\u80fd\u5904\u7406\u91cd\u53e0\u7684\u5185\u5b58</p> C<pre><code>int main()\n{\n    int arr1[10] = {1,2,3,4,5,6,7,8,9,10};\n    int arr2[20] = {0};\n    //strcpy()\u4e0d\u80fd\u5b8c\u6210\u6574\u5f62\u6570\u7ec4\u7684\u590d\u5236\n    memcpy(arr2,arr1,20);//\u62f7\u8d1d20\u4e2a\u5b57\u8282\uff0c\n    return 0;\n}\n//\u6a21\u62df\u5b9e\u73b0\nvoid my_mempy(void* dest,void* src,size_t num)\n{\n    void* ret = dest;\n    assert(dest &amp;&amp; src);\n    while(num--)\n    {\n        (char*)dest =(char*)src;\n        dest = (char*)dest + 1;\n        src = (char*)src + 1; \n    }\n    return ret;\n}\n</code></pre> <ul> <li>memmove()\u53ef\u4ee5\u5904\u7406\u91cd\u53e0\u7684\u5185\u5b58</li> </ul> <p>\u6a21\u62df\u5b9e\u73b0\uff1a</p> C<pre><code>void my_memmove(void* destination,void* source,size_t num )//\u4e3b\u8981\u662f\u4ece\u524d\u5411\u540e\u62f7\u8d1d\u8fd8\u662f\u4ece\u540e\u5411\u524d\u62f7\u8d1d\n{\n    //\u4e0d\u96be\u53d1\u73b0\u5f53source\u7684\u4f4d\u7f6e\u5728destination\u540e\u9762\u7684\u65f6\u5019\u4ece\u524d\u5411\u540e\u62f7\u8d1d\uff0c\u53cd\u4e4b\u4ece\u540e\u5411\u524d\n    if(dest &lt; src)\n    {\n        //\u524d -&gt;\u540e\n        while(num--)\n        {\n            *(char*)dest = *(char*)src;\n            dest = (char*)dest + 1;\n            src = (char*)src + 1;\n        }\n    }\n    else\n    {\n        //\u540e -&gt;\u524d\n        while(num--)\n        {\n            *((char*)dest + num) = *((char*)src + num);\n        }\n    }\n}\n</code></pre> <p>\u6240\u4ee5\u76f4\u63a5\u7528memmove()\u5c31\u884c\u4e86\uff1f</p> <p>memcmp(const void p1,const void p2,size_t num);</p> <p>\u8fd4\u56de\u65b9\u5f0f\u7c7b\u4f3cstrcmp</p> C<pre><code>int main()\n{\n    float arr1[] ={1.0,2.0,3.0,4.0};\n    float arr2[] = {1.0.3.0};\n    int ret = memcmp(arr1,arr2,8);\n    printf(\"%d\\n\",ret);\n    return 0;\n}\n</code></pre> <p>memset()</p> C<pre><code>int main()\n{\n    int arr[10] = {0};\n    memset(arr,1,20);//\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u8bbe\u7f6e,\u4e0d\u662f\u5143\u7d20\n    for(int i = 0;i &lt; 10;i++)\n    {\n        printf(\"%d \",arr[i]);\n    }\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#3","title":"3 \u81ea\u5b9a\u4e49\u7c7b\u578b","text":"C<pre><code>struct\n    {\n        char name;\n    }x;\nstruct\n    {\n        char name;\n    }*p;\n//*p = x\u8fd9\u79cd\u8bed\u6cd5\u662f\u9519\u8bef\u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u5176\u770b\u4f5c\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\u5c3d\u7ba1\u91cc\u9762\u7684\u6570\u636e\u7c7b\u578b\u76f8\u540c\n</code></pre> <p>\u8003\u8651\u4e00\u4e0b\u8fd9\u79cd\u4ee3\u7801\u662f\u5426\u53ef\u884c</p> C<pre><code>struct N\n{\n    char a;\n    struct N n;\n}\n</code></pre> <p>\u8fd9\u79cd\u8bed\u6cd5\u4e5f\u662f\u9519\u8bef\u7684\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u90a3\u4e48struct N\u7c7b\u578b\u6240\u5360\u5185\u5b58\u7684\u5927\u5c0f\u4e0d\u53ef\u8ba1\u7b97\uff01</p> <p>\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u7ed3\u6784\u4f53\u7684\u81ea\u5f15\u7528\u5462\uff1f</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#31","title":"3.1 \u7ed3\u6784\u4f53\u7684\u81ea\u5f15\u7528","text":"C<pre><code>struct Node\n{\n    int data;\n    struct Node next;\n};\n//\u53ef\u884c\u5426\uff1f\n\u5982\u679c\u53ef\u4ee5\uff0c\u90a3sizeof(struct Node)\u662f\u591a\u5c11\uff1f\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#32","title":"3.2 \u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50","text":"C<pre><code>struct s1\n{\n    char c1;\n    int i;\n    char c2;\n}\n//sizeof(s1) = 12\nstruct s2\n{\n    char c1;\n    int i;\n    double d;\n}\n//sizeof(s2) = 16\nstruct s3\n{\n    char c1;\n    char c2;\n    int i;\n}\n//sizeof(s3) = 8\n</code></pre> <p>\u5982\u4f55\u8ba1\u7b97</p> <p>\u7ed3\u6784\u4f53\u7684\u5bf9\u9f50\u89c4\u5219\uff1a</p> <ol> <li> <p>\u7b2c\u4e00\u4e2a\u6210\u5458\u5728\u4e0e\u7ed3\u6784\u4f53\u53d8\u91cf\u504f\u79fb\u91cf\u4e3a0\u7684\u5730\u5740\u5904\u3002</p> </li> <li> <p>\u5176\u4ed6\u6210\u5458\u53d8\u91cf\u8981\u5bf9\u9f50\u5230\u67d0\u4e2a\u6570\u5b57\uff08\u5bf9\u9f50\u6570\uff09\u7684\u6574\u6570\u500d\u7684\u5730\u5740\u5904\u3002</p> </li> </ol> <p>\u5bf9\u9f50\u6570 = \u7f16\u8bd1\u5668\u9ed8\u8ba4\u7684\u4e00\u4e2a\u5bf9\u9f50\u6570 \u4e0e \u8be5\u6210\u5458\u5927\u5c0f\u7684\u8f83\u5c0f\u503c\u3002 VS\u4e2d\u9ed8\u8ba4\u7684\u503c\u4e3a8</p> <p>Linux - \u6ca1\u6709\u9ed8\u8ba4\u5bf9\u9f50\u6570\u7684\u6982\u5ff5</p> <ol> <li>\u7ed3\u6784\u4f53\u603b\u5927\u5c0f\u4e3a\u6700\u5927\u5bf9\u9f50\u6570\uff08\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u5bf9\u9f50\u6570\uff09\u7684\u6574\u6570\u500d\u3002</li> <li>\u5982\u679c\u5d4c\u5957\u4e86\u7ed3\u6784\u4f53\u7684\u60c5\u51b5\uff0c\u5d4c\u5957\u7684\u7ed3\u6784\u4f53\u5bf9\u9f50\u5230\u81ea\u5df1\u7684\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u5904\uff0c\u7ed3\u6784\u4f53\u7684\u6574</li> </ol> <p>\u4f53\u5927\u5c0f\u5c31\u662f\u6240\u6709\u6700\u5927\u5bf9\u9f50\u6570\uff08\u542b\u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u5bf9\u9f50\u6570\uff09\u7684\u6574\u6570\u500d\u3002</p> <p>\"\u7b49\u6211\u5b66\u4f1a\u753b\u56fe\u4e00\u5b9a\u56de\u6765\u628a\u8fd9\u91cc\u8bb2\u6e05\u695a\"</p> <p>\u4e3a\u4ec0\u4e48\u5b58\u5728\u5185\u5b58\u5bf9\u9f50\uff1f</p> <ul> <li>\u5e73\u53f0\u539f\u56e0\uff1a\u4e0d\u662f\u6240\u6709\u7684\u786c\u4ef6\u5e73\u53f0\u90fd\u80fd\u8bbf\u95ee\u4efb\u610f\u5730\u5740\u4e0a\u7684\u4efb\u610f\u6570\u636e\u7684\uff1b\u67d0\u4e9b\u786c\u4ef6\u5e73\u53f0\u53ea\u80fd\u5728\u67d0\u4e9b\u5730\u5740\u5904\u53d6\u67d0\u4e9b\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5426\u5219\u629b\u51fa\u786c\u4ef6\u5f02\u5e38\u3002</li> <li>\u6027\u80fd\u539f\u56e0\uff1a\u6570\u636e\u7ed3\u6784\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\uff0c\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u800c\u5bf9\u9f50\u7684\u5185\u5b58\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee</li> </ul> <p>\u727a\u7272\u4e86\u7a7a\u95f4\u6362\u53d6\u4e86\u65f6\u95f4\u3002</p> <p>\u5f53\u6ee1\u8db3\u5360\u636e\u8f83\u5c0f\u7a7a\u95f4\u7684\u6210\u5458\u653e\u5728\u4e00\u8d77\u65f6\uff0c\u5360\u7528\u7684\u7a7a\u95f4\u6700\u5c11\u3002</p> <p>\u5982\u4f55\u4fee\u6539\u9ed8\u8ba4\u5bf9\u9f50\u6570\uff1f(\u4e0d\u5408\u9002\u7684\u65f6\u5019\u624d\u4fee\u6539)</p> C<pre><code>#pragma pack(2)//\u628a\u9ed8\u8ba4\u5bf9\u9f50\u6570\u6539\u4e3a\u4e862\nstruct S\n{\n    char c1;\n    int i;\n    char c2;\n}\n</code></pre> <p>offsetof(type,member):\u7528\u4e8e\u8ba1\u7b97\u7ed3\u6784\u4f53\u6210\u5458\u76f8\u5bf9\u9996\u5730\u5740\u7684\u504f\u79fb\u91cf\u3002\u6a21\u62df\u5b9e\u73b0</p> <p>\u793a\u4f8b\uff1a</p> C<pre><code>struct S\n{\n    char c1;\n    int i;\n    char c2;\n}\nint main()\n{\n    printf(\"%d \",offsetof(struct S,c1));\n    printf(\"%d \",offsetof(struct S,i));\n    printf(\"%d\",offsetof(struct S,c2));\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>0 4 8</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#33","title":"3.3 \u4f4d\u6bb5","text":"<p>\u4f4d\u6bb5\u7684\u58f0\u660e\uff1a</p> <ol> <li> <p>\u4f4d\u6bb5\u7684\u6210\u5458\u5fc5\u987b\u662fint ,unsigned int, signed int</p> </li> <li> <p>\u4f4d\u6bb5\u7684\u6210\u5458\u540d\u540e\u9762\u6709\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u6570\u5b57\u3002</p> </li> </ol> <p>PS: \u4f4d\u6bb5\u4e0d\u9002\u5408\u8de8\u5e73\u53f0\u4f7f\u7528</p> <p>\u6bd4\u5982\uff1a</p> C<pre><code>struct A\n{\n    int _a:2;//_a\u6210\u5458\u53602\u4e2abit\u4f4d\u7f6e\n    int _b:5;//_b\u6210\u5458\u53605\u4e2abit\u4f4d\u7f6e\n    int _c:10;//_c\u6210\u5458\u536010\u4e2abit\u4f4d\u7f6e\n    int _d:30;//_d\u6210\u5458\u536030\u4e2abit\u4f4d\u7f6e\n\n}\n// sizeof (struct A) = 8\n</code></pre> <ul> <li>\u5f00\u8f9f\u7a7a\u95f4\u903b\u8f91\uff1a\u5148\u6309\u7167\u6570\u636e\u7c7b\u578b\u5f00\u8f9f\u7a7a\u95f4\uff0c\u518d\u9010\u4e2a\u5206\u914d\u7a7a\u95f4\u3002   \u5982\u679c\u4e0a\u4e00\u6b21\u5f00\u8f9f\u7684\u7a7a\u95f4\u8fd8\u591f\u7528\u5c31\u4e0d\u5f00\u8f9f\u3002</li> </ul>","tags":["programming language"]},{"location":"computer/C/learning_c/#34-enum","title":"3.4 \u679a\u4e3eenum","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#341","title":"3.4.1 \u679a\u4e3e\u7c7b\u578b\u7684\u5b9a\u4e49","text":"C<pre><code>//\u58f0\u660e\u679a\u4e3e\u7c7b\u578b\nenum color\n{\n    RED,\n    GREEN,\n    BLUE,\n}//\u5b58\u653e\u679a\u4e3e\u7684\u53ef\u80fd\u5e38\u91cf\nint main()\n{\n    printf(\"%d \",RED);\n    printf(\"%d \",GREEN);\n    printf(\"%d \",BLUE);\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a</p> <p>0 1 2</p> <p>\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u9010\u6b65\u9012\u589e1</p> <p>\u793a\u4f8b</p> C<pre><code>enum color\n{\n    RED = 5,\n    GREEN, //6\n    BLUE, //7\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#35","title":"3.5 \u8054\u5408\u4f53","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#351","title":"3.5.1 \u8054\u5408\u4f53\u7684\u5b9a\u4e49","text":"C<pre><code>union un\n{\n    char c;\n    int i;\n};\nint main()\n{\n    union un u;\n    printf(\"%d\",sizeof(u));\n    //\u8f93\u51fa4\uff1b\n    printf(\"%p %p %p\",&amp;u,&amp;(u.c),&amp;(u.i));\n    //\u53d1\u73b0\u4e09\u4e2a\u5730\u5740\u76f8\u540c\n    return 0;\n}\n</code></pre> <p>\u5173\u952e\u5728\u4e8e\u8054\u5408\u4f53\u7684\u6210\u5458\u516c\u7528\u540c\u4e00\u5757\u7a7a\u95f4</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#352","title":"3.5.2 \u8054\u5408\u4f53\u7684\u7279\u70b9","text":"<ul> <li> <p>\u6210\u5458\u5171\u7528\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4</p> </li> <li> <p>\u5927\u5c0f\u81f3\u5c11\u662f\u6700\u5927\u6210\u5458\u7684\u5927\u5c0f\u3002</p> </li> <li>\u53ea\u80fd\u540c\u65f6\u8c03\u7528\u8054\u5408\u4f53\u4e2d\u4e00\u4e2a\u6210\u5458</li> </ul> <p>Eg:\u6d4b\u8bd5\u5927\u5c0f\u7aef\u8054\u5408\u4f53\u65b9\u6cd5</p> <p>\u5173\u4e8e\u5927\u5c0f\u7aef</p> <ol> <li>\u4f20\u7edf\u65b9\u6cd5</li> </ol> C<pre><code>int main()\n{\n    int a = 1;\n    if(*(char*)&amp;a == 1)\n    {\n        printf(\"small\");\n    }\n    else\n        printf(\"big\");\n    return 0;\n}\n</code></pre> <ol> <li>\u8054\u5408\u4f53\u65b9\u6cd5</li> </ol> C<pre><code>int check_sys()\n{\n    union U\n    {\n        char c;\n        int i;\n    }u;\n    u.i = 1;\n    return u.c;\n}\nint main()\n{\n    if(check_sys == 1)\n    {\n        printf(\"\u5c0f\u7aef\");\n    }\n    else\n        printf(\"\u5927\u7aef\");\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#353","title":"3.5.3 \u8054\u5408\u4f53\u5927\u5c0f\u7684\u8ba1\u7b97","text":"<ul> <li>\u8054\u5408\u4f53\u7684\u5927\u5c0f\u81f3\u5c11\u662f\u6700\u5927\u6210\u5458\u7684\u5927\u5c0f\u3002</li> <li>\u5f53\u6700\u5927\u6210\u5458\u7684\u5927\u5c0f\u4e0d\u662f\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u7684\u65f6\u5019\u5c31\u8981\u5bf9\u9f50\u5230\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u3002</li> </ul> C<pre><code>union Un1\n{\n    char a[5];//\u5bf9\u9f50\u6570\u662fmin{1,8} = 1\n    int i;//\u5bf9\u9f50\u6570\u662fmin{4,8} = 4;\n    //\u6240\u4ee5\u6700\u5927\u5bf9\u9f50\u6570\u662f4\n};\nunion Un2\n{\n    short c[7];////\u5bf9\u9f50\u6570\u662fmin{2,8} = 2\n    int i;//\u5bf9\u9f50\u6570\u662fmin{4,8} = 4;\n    //\u6240\u4ee5\u6700\u5927\u5bf9\u9f50\u6570\u662f4\n}\nint main()\n{\n    printf(\"%d %d\",sizeof(Un1),sizeof(Un2));\n    //\u8f93\u51fa8 16\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#4","title":"4 \u6587\u4ef6","text":"<p>\u7528\u5904\u4e0d\u5927\u968f\u4fbf\u5199\u70b9</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#41","title":"4.1 \u6570\u636e\u6587\u4ef6\u548c\u7a0b\u5e8f\u6587\u4ef6","text":"<ul> <li>\u6570\u636e\u6587\u4ef6</li> </ul> <p>\u5305\u62ec\u6e90\u7a0b\u5e8f\u6587\u4ef6\uff08\u540e\u7f00\u4e3a.c\uff09,\u76ee\u6807\u6587\u4ef6\uff08windows\u73af\u5883\u540e\u7f00\u4e3a.obj\uff09\uff0c\u53ef\u6267\u884c\u7a0b\u5e8f\uff08windows\u73af\u5883\u540e\u7f00\u4e3a.exe\uff09</p> <ul> <li>\u6570\u636e\u6587\u4ef6</li> </ul> <p>\u6587\u4ef6\u7684\u5185\u5bb9\u4e0d\u4e00\u5b9a\u662f\u7a0b\u5e8f\uff0c\u536b\u89c6\u7a0b\u5e8f\u8bfb\u5199\u7684\u6570\u636e\uff0c\u6bd4\u5982\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\u6216\u8005\u9700\u8981\u8f93\u51fa\u5185\u5bb9\u7684\u6587\u4ef6\u3002</p> <p>\u672c\u7ae0\u8ba8\u8bba\u7684\u662f\u6570\u636e\u6587\u4ef6</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#42","title":"4.2 \u6587\u4ef6\u540d","text":"<p>\u4e00\u4e2a\u6587\u4ef6\u8981\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6587\u4ef6\u6807\u8bc6\uff0c\u4ee5\u4fbf\u7528\u6237\u8bc6\u522b\u548c\u5f15\u7528\u3002   \u6587\u4ef6\u540d\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff1a\u6587\u4ef6\u8def\u5f84+\u6587\u4ef6\u540d\u4e3b\u5e72+\u6587\u4ef6\u540e\u7f00   EG: <code>c:\\code\\test.txt</code>  \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6587\u4ef6\u8868\u793a\u5e38\u88ab\u79f0\u4f5c\u6587\u4ef6\u540d</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#43","title":"4.3 \u6587\u4ef6\u7684\u6253\u5f00\u548c\u5173\u95ed","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#431","title":"4.3.1 \u6587\u4ef6\u6307\u9488","text":"<p>\u6bcf\u4e2a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\u90fd\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u4e86\u4e00\u4e2a\u76f8\u5e94\u7684\u6587\u4ef6\u4fe1\u606f\u533a\uff0c\u7528\u6765\u5b58\u653e\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u4e9b\u4fe1\u606f\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u800c\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u6709\u7cfb\u7edf\u58f0\u660e\u7684\uff0c\u53eb\u505aFILE\u3002\u6bcf\u5f53\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u6587\u4ef6\u7684\u60c5\u51b5\u81ea\u52a8\u521b\u5efa\u4e00\u4e2aFILE\u7ed3\u6784\u7684\u53d8\u91cf\u5e76\u586b\u5145\u5176\u4e2d\u7684\u4fe1\u606f</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#432","title":"4.3.2 \u6253\u5f00\u548c\u5173\u95ed","text":"C<pre><code>FIle* pf;//\u6587\u4ef6\u6307\u9488\u53d8\u91cf\nFILE* fopen(const char* filename,const char* mode);\nint fclose(FILE* stream);\n</code></pre> C<pre><code>//Eg\nint main()\n{\n    FILE* pf = fopen(\"test.dat\",\"w\");//\u53ea\u5199\uff0c\u5982\u679c\u6ca1\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u6587\u4ef6\n    //\u82e5\u7528\u8def\u5f84\u6253\u5f00\u8bb0\u5f97\u8f6c\u4e49\n    if(pf == NULL)\n    {\n        perror (\"fopen\");\n        return 1;\n    }\n    //\u5199\u6587\u4ef6\n    //\u5173\u95ed\u6587\u4ef6\n    fclose(pf);\n    pf = NULL;\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#423","title":"4.2.3 \u987a\u5e8f\u8bfb\u5199","text":"C<pre><code>//Eg\nint main()\n{\n    FILE* pf = fopen(\"test.dat\",\"w\");//\u53ea\u5199\uff0c\u5982\u679c\u6ca1\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u6587\u4ef6\n    //\u82e5\u7528\u8def\u5f84\u6253\u5f00\u8bb0\u5f97\u8f6c\u4e49\n    if(pf == NULL)\n    {\n        perror (\"fopen\");\n        return 1;\n    }\n    //\u5199\u6587\u4ef6\n    *fputc('b',pf);\n    *fputc('i',pf);\n    *fputc('t',pf);\n    //\u5173\u95ed\u6587\u4ef6\n    fclose(pf);\n    pf = NULL;\n    return 0;\n}\n</code></pre>","tags":["programming language"]},{"location":"computer/C/learning_c/#424","title":"4.2.4 \u6d41","text":"<p>C\u8bed\u8a00\u7a0b\u5e8f\u53ea\u8981\u8fd0\u884c\u8d77\u6765\u5c31\u9ed8\u8ba4\u6253\u5f00\u4e86\u4e09\u4e2a\u6d41\uff1a</p> <p>stdin-\u6807\u51c6\u8f93\u5165\u6d41-\u952e\u76d8</p> <p>stdout-\u6807\u51c6\u8f93\u51fa\u6d41-\u5c4f\u5e55</p> <p>stderr-\u6807\u51c6\u9519\u8bef\u6d41-\u5c4f\u5e55</p>","tags":["programming language"]},{"location":"computer/C/learning_c/#_1","title":"\u9644\u5f55","text":"","tags":["programming language"]},{"location":"computer/C/learning_c/#_2","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"<p>\u5982\u9700\u66f4\u5168\u9762\u7684\u8bf7\u70b9\u51fb\u8fd9\u91cc\u3002</p> \u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u540d\u79f0\u6216\u542b\u4e49 \u4f7f\u7528\u5f62\u5f0f \u7ed3\u5408\u65b9\u5411 1 [] \u6570\u7ec4\u4e0b\u6807 \u6570\u7ec4\u540d[\u5e38\u91cf\u8868\u8fbe\u5f0f] \u5de6\u5230\u53f3 () \u5706\u62ec\u53f7 \uff08\u8868\u8fbe\u5f0f\uff09/\u51fd\u6570\u540d(\u5f62\u53c2\u8868) . \u6210\u5458\u9009\u62e9\uff08\u5bf9\u8c61\uff09 \u5bf9\u8c61.\u6210\u5458\u540d -&gt; \u6210\u5458\u9009\u62e9\uff08\u6307\u9488\uff09 \u5bf9\u8c61\u6307\u9488-&gt;\u6210\u5458\u540d ++ \u540e\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26 \u53d8\u91cf\u540d++ -- \u540e\u7f6e\u81ea\u51cf\u8fd0\u7b97\u7b26 \u53d8\u91cf\u540d-- 2 - \u8d1f\u53f7\u8fd0\u7b97\u7b26 -\u8868\u8fbe\u5f0f \u53f3\u5230\u5de6 (\u7c7b\u578b) \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 (\u6570\u636e\u7c7b\u578b)\u8868\u8fbe\u5f0f ++ \u524d\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26 ++\u53d8\u91cf\u540d -- \u524d\u7f6e\u81ea\u51cf\u8fd0\u7b97\u7b26 --\u53d8\u91cf\u540d * \u53d6\u503c\u8fd0\u7b97\u7b26 *\u6307\u9488\u53d8\u91cf &amp; \u53d6\u5730\u5740\u8fd0\u7b97\u7b26 &amp;\u53d8\u91cf\u540d ! \u903b\u8f91\u975e\u8fd0\u7b97\u7b26 !\u8868\u8fbe\u5f0f ~ \u6309\u4f4d\u53d6\u53cd\u8fd0\u7b97\u7b26 ~\u8868\u8fbe\u5f0f sizeof() \u957f\u5ea6\u8fd0\u7b97\u7b26 sizeof(\u8868\u8fbe\u5f0f) 3 / \u9664 \u8868\u8fbe\u5f0f/\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 * \u4e58 \u8868\u8fbe\u5f0f*\u8868\u8fbe\u5f0f % \u4f59\u6570\uff08\u53d6\u6a21\uff09 \u6574\u578b\u8868\u8fbe\u5f0f/\u6574\u578b\u8868\u8fbe\u5f0f 4 + \u52a0 \u8868\u8fbe\u5f0f+\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 - \u51cf \u8868\u8fbe\u5f0f-\u8868\u8fbe\u5f0f 5 &lt;&lt; \u5de6\u79fb \u53d8\u91cf&lt;&lt;\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 &gt;&gt; \u53f3\u79fb \u53d8\u91cf&gt;&gt;\u8868\u8fbe\u5f0f 6 &gt; \u5927\u4e8e \u8868\u8fbe\u5f0f&gt;\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 &gt;= \u5927\u4e8e\u7b49\u4e8e \u8868\u8fbe\u5f0f&gt;=\u8868\u8fbe\u5f0f &lt; \u5c0f\u4e8e \u8868\u8fbe\u5f0f&lt;\u8868\u8fbe\u5f0f &lt;= \u5c0f\u4e8e\u7b49\u4e8e \u8868\u8fbe\u5f0f&lt;=\u8868\u8fbe\u5f0f 7 <code>==</code> \u7b49\u4e8e \u8868\u8fbe\u5f0f==\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 <code>!=</code> \u4e0d\u7b49\u4e8e \u8868\u8fbe\u5f0f!= \u8868\u8fbe\u5f0f 8 &amp; \u6309\u4f4d\u4e0e \u8868\u8fbe\u5f0f&amp;\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 9 ^ \u6309\u4f4d\u5f02\u6216 \u8868\u8fbe\u5f0f^\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 10 | \u6309\u4f4d\u6216 \u8868\u8fbe\u5f0f|\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 11 &amp;&amp; \u903b\u8f91\u4e0e \u8868\u8fbe\u5f0f&amp;&amp;\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 12 || \u903b\u8f91\u6216 \u8868\u8fbe\u5f0f||\u8868\u8fbe\u5f0f \u5de6\u5230\u53f3 13 ?: \u6761\u4ef6\u8fd0\u7b97\u7b26 \u8868\u8fbe\u5f0f1? \u8868\u8fbe\u5f0f2: \u8868\u8fbe\u5f0f3 \u53f3\u5230\u5de6 14 = \u8d4b\u503c\u8fd0\u7b97\u7b26 \u53d8\u91cf=\u8868\u8fbe\u5f0f \u53f3\u5230\u5de6 /= \u9664\u540e\u8d4b\u503c \u53d8\u91cf/=\u8868\u8fbe\u5f0f *= \u4e58\u540e\u8d4b\u503c \u53d8\u91cf*=\u8868\u8fbe\u5f0f %= \u53d6\u6a21\u540e\u8d4b\u503c \u53d8\u91cf%=\u8868\u8fbe\u5f0f += \u52a0\u540e\u8d4b\u503c \u53d8\u91cf+=\u8868\u8fbe\u5f0f -= \u51cf\u540e\u8d4b\u503c \u53d8\u91cf-=\u8868\u8fbe\u5f0f &lt;&lt;= \u5de6\u79fb\u540e\u8d4b\u503c \u53d8\u91cf&lt;&lt;=\u8868\u8fbe\u5f0f &gt;&gt;= \u53f3\u79fb\u540e\u8d4b\u503c \u53d8\u91cf&gt;&gt;=\u8868\u8fbe\u5f0f &amp;= \u6309\u4f4d\u4e0e\u540e\u8d4b\u503c \u53d8\u91cf&amp;=\u8868\u8fbe\u5f0f ^= \u6309\u4f4d\u5f02\u6216\u540e\u8d4b\u503c \u53d8\u91cf^=\u8868\u8fbe\u5f0f |= \u6309\u4f4d\u6216\u540e\u8d4b\u503c \u53d8\u91cf|=\u8868\u8fbe\u5f0f 15 , \u9017\u53f7\u8fd0\u7b97\u7b26 \u8868\u8fbe\u5f0f,\u8868\u8fbe\u5f0f,\u2026 \u5de6\u5230\u53f3","tags":["programming language"]},{"location":"computer/C/learning_c/#_3","title":"\u4f4d\u8fd0\u7b97","text":"\u64cd\u4f5c\u7b26 \u540d\u79f0 \u63cf\u8ff0 <code>&amp;</code> \u4e0e \u4e24\u4e2a\u4f4d\u90fd\u4e3a 1 \u65f6\uff0c\u7ed3\u679c\u624d\u4e3a 1 <code>|</code> \u6216 \u4e24\u4e2a\u4f4d\u90fd\u4e3a 0 \u65f6\uff0c\u7ed3\u679c\u624d\u4e3a 0 <code>^</code> \u5f02\u6216 \u4e24\u4e2a\u4f4d\u76f8\u540c\u4e3a 0\uff0c\u76f8\u5f02\u4e3a 1 <code>~</code> \u53d6\u53cd 0 \u53d8 1\uff0c1 \u53d8 0 <code>&lt;&lt;</code> \u5de6\u79fb \u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u5de6\u79fb\u82e5\u5e72\u4f4d\uff0c\u9ad8\u4f4d\u4e22\u5f03\uff0c\u4f4e\u4f4d\u8865 0 <code>&gt;&gt;</code> \u53f3\u79fb \u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u53f3\u79fb\u82e5\u5e72\u4f4d\uff0c\u9ad8\u4f4d\u8865 0 \u6216\u7b26\u53f7\u4f4d\u8865\u9f50","tags":["programming language"]},{"location":"computer/C/scatter/","title":"\u96f6\u788e\u7684\u77e5\u8bc6","text":"<p> \u7ea6 1631 \u4e2a\u5b57  16 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>\u8fd9\u91cc\u653e\u7f6e\u4e00\u4e9b\u4e0d\u6210\u4f53\u7cfb\u7684\u5c0f\u77e5\u8bc6\u70b9 \u4ecd\u5728\u66f4\u65b0\uff01</p>"},{"location":"computer/C/scatter/#1-typeof-define","title":"1 typeof &amp; define","text":"<p>\u53ea\u53ef\u610f\u4f1a\uff0c\u770b\u4e0b\u9762\u7684\u4f8b\u5b50 C<pre><code>typedef int *PTR;\nPTR a,b;\n</code></pre> \u6b64\u65f6a,b\u90fd\u662f\u6307\u9488\u53d8\u91cf\u3002 C<pre><code>#define PTR int*\n ```\n ```\nPTR a,b;\n</code></pre> \u6b64\u65f6\u7b49\u540c\u4e8e Text Only<pre><code>int *a,b;\n</code></pre> \u53ea\u6709a\u4e3a\u6307\u9488\u53d8\u91cf\uff0c\u800cb\u4e3a\u6574\u578b\u53d8\u91cf\u3002</p>"},{"location":"computer/C/scatter/#2","title":"2 \u7b26\u53f7\u4f4d\u7684\u6269\u5c55","text":"Text Only<pre><code>int main()\n{\n    char a = -56;\n    char b = -256;\n    char c = -512;\n    char d = 128;\n    char e = 64;\n    printf(\"%u %u %u %u %u\", a,b,c,d,e);\n\n    //128\u4e8c\u8fdb\u5236\u539f\u780110000000000000000000000010000000\n\n    //128\u4e8c\u8fdb\u5236\u8865\u780111111111111111111111111110000000\n\n    //\u5b58\u5230a\u4e2d\u4e3a10000000\n\n    //u\u4e3a\u6253\u5370\u65e0\u7b26\u53f7\u6574\u5f62\uff0c\u7c7b\u578b\u63d0\u5347\u4e3a11111111111111111111111110000000\n\n    //\u6253\u5370\u51fa\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u5b57\u3002\n\n    //10000000000000000000000100000000  -256\u7684\u539f\u7801\n\n    //11111111111111111111111100000000        \u8865\u7801\n\n    //\u5b58\u5230a\u4e2d\u4e3a00000000\n\n    //\u7c7b\u578b\u63d0\u5347\u540e\u4e3a00000000000000000000000000000000\n\n    //\u7c7b\u578b\u63d0\u5347\u63d0\u5347\u7684\u662f\u539f\u6765\u7684\u7b26\u53f7\u4f4d\u6bd4\u598210000000\u7c7b\u578b\u63d0\u5347\u540e\u5c31\u5f80\u524d\u9762\u52a01\uff0c01000000\u63d0\u5347\u5c31\u5f80\u524d\u9762\u52a00\n\n    //\u5bf9\u4e8ed\u6765\u8bf4\u770b\u4f3c\u662f\u4e2a\u6b63\u6570\uff0c\u7b26\u53f7\u4f4d\u662f0\u7c7b\u578b\u63d0\u5347\u4e5f\u5e94\u8be5\u88650\uff0c\u4f46\u662f\u88abchar \u7c7b\u578b\u622a\u65ad\u540e\u662f\u4e2a\u8d1f\u6570\uff0c\u6240\u4ee5\u7c7b\u578b\u63d0\u5347\u8fd8\u662f\u5f80\u524d\u88651\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p>PS char \u7c7b\u578b\u7684\u53d6\u503c\u8303\u56f4 0000000 0000001 0111111 1000000 1000001 1111111</p> <p>\u53d6\u503c\u8303\u56f4\u662f-128-&gt;127</p>"},{"location":"computer/C/scatter/#3-scanf","title":"3 scanf()","text":"<p>\u95ee\uff1a \u4f60\u662f\u4e00\u540d\u64c5\u957fC\u8bed\u8a00\u7684\u4e13\u4e1a\u6559\u6388\uff0c\u6211\u662fC\u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u8bf7\u4f60\u7ed3\u5408\u7f13\u51b2\u533a\u7684\u53d8\u5316\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\u8f93\u5165<code>3\\n\\n\\naha\\n</code>\u540e\u4e0b\u5217\u7a0b\u5e8f\u4f1a\u4ea7\u751f\u4ec0\u4e48\u8f93\u51fa\u7ed3\u679c C<pre><code>int main()\n{\n    int x;\n    char ch1, ch2, ch3;\n    scanf(\"%d\\n\", &amp;x);\n    printf(\"%d\", x);\n    ch1 = getchar();\n    ch2 = getchar();\n    ch3 = getchar();\n    printf(\"hello\");\n    printf(\"%c%c%c\", ch1, ch2, ch3);\n    return 0;\n}\n</code></pre> [GPT4o]\u7b54\uff1a - \u7f13\u51b2\u533a\u53d8\u5316\u7684\u9010\u6b65\u5206\u6790</p> <p>\u5047\u8bbe\u7528\u6237\u6309\u4e0b\u952e\u76d8\u8f93\u5165 <code>3\\n\\n\\naha\\n</code>\uff0c\u7f13\u51b2\u533a\u7684\u521d\u59cb\u5185\u5bb9\u5982\u4e0b\uff1a Text Only<pre><code>3\\n\\n\\naha\\n\n</code></pre></p> <ol> <li>\u7b2c\u4e00\u6b65\uff1a\u6267\u884c <code>scanf(\"%d\\n\", &amp;x);</code></li> </ol> <ul> <li><code>scanf</code> \u7684 <code>%d</code>:</li> <li><code>%d</code> \u4f1a\u8bfb\u53d6\u7f13\u51b2\u533a\u4e2d\u7684\u6574\u6570\uff0c<code>3</code> \u88ab\u6210\u529f\u8bfb\u53d6\u5230\u53d8\u91cf <code>x</code> \u4e2d\uff1b</li> <li> <p>\u7f13\u51b2\u533a\u5269\u4e0b\uff1a     Text Only<pre><code>\\n\\n\\naha\\n\n</code></pre></p> </li> <li> <p><code>%d\\n</code> \u7684 <code>\\n</code>:</p> </li> <li><code>%d\\n</code> \u4e2d\u7684 <code>\\n</code> \u8868\u793a\u201c\u5ffd\u7565\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u548c\u6362\u884c\uff09\u201d\uff1a</li> <li>\u5b83\u4f1a\u8df3\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u6362\u884c\u7b26\uff08\u6216\u8005\u5176\u4ed6\u7a7a\u767d\u5b57\u7b26\uff09\uff0c\u76f4\u5230\u9047\u5230\u975e\u7a7a\u767d\u5b57\u7b26\u624d\u505c\u6b62\uff1b</li> <li> <p>\u56e0\u6b64\uff0c<code>scanf</code> \u4f1a\u6d88\u8d39\u6389\u6240\u6709\u7684\u6362\u884c\u7b26 <code>\\n\\n\\n</code>\uff0c\u7f13\u51b2\u533a\u5269\u4e0b\uff1a     Text Only<pre><code>aha\\n\n</code></pre></p> </li> <li> <p>\u53d8\u91cf\u72b6\u6001\uff1a</p> </li> <li><code>x = 3</code></li> <li>\u7f13\u51b2\u533a\u5269\u4e0b\uff1a     Text Only<pre><code>aha\\n\n</code></pre></li> </ul> <ol> <li>\u7b2c\u4e8c\u6b65\uff1a\u6267\u884c <code>printf(\"%d\", x);</code></li> </ol> <ul> <li>\u6253\u5370\u53d8\u91cf <code>x</code> \u7684\u503c\uff1a \u8f93\u51fa\uff1a3</li> </ul> <ol> <li>\u7b2c\u4e09\u6b65\uff1a\u6267\u884c <code>ch1 = getchar();</code></li> </ol> <ul> <li><code>getchar</code> \u4ece\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff1a</li> <li>\u7f13\u51b2\u533a\u5f53\u524d\u5185\u5bb9\u4e3a <code>aha\\n</code>\uff1b</li> <li><code>getchar</code> \u8bfb\u53d6\u7b2c\u4e00\u4e2a\u5b57\u7b26 <code>a</code>\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 <code>ch1</code>\uff1b</li> <li>\u7f13\u51b2\u533a\u5269\u4e0b\uff1a   Text Only<pre><code>ha\\n\n</code></pre></li> </ul> <ol> <li>\u7b2c\u56db\u6b65\uff1a\u6267\u884c <code>ch2 = getchar();</code></li> </ol> <ul> <li><code>getchar</code> \u518d\u6b21\u4ece\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff1a</li> <li>\u7f13\u51b2\u533a\u5f53\u524d\u5185\u5bb9\u4e3a <code>ha\\n</code>\uff1b</li> <li><code>getchar</code> \u8bfb\u53d6\u7b2c\u4e00\u4e2a\u5b57\u7b26 <code>h</code>\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 <code>ch2</code>\uff1b</li> <li>\u7f13\u51b2\u533a\u5269\u4e0b\uff1a   Text Only<pre><code>a\\n\n</code></pre></li> </ul> <ol> <li>\u7b2c\u4e94\u6b65\uff1a\u6267\u884c <code>ch3 = getchar();</code></li> </ol> <ul> <li><code>getchar</code> \u518d\u6b21\u4ece\u7f13\u51b2\u533a\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff1a</li> <li>\u7f13\u51b2\u533a\u5f53\u524d\u5185\u5bb9\u4e3a <code>a\\n</code>\uff1b</li> <li><code>getchar</code> \u8bfb\u53d6\u7b2c\u4e00\u4e2a\u5b57\u7b26 <code>a</code>\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 <code>ch3</code>\uff1b</li> <li>\u7f13\u51b2\u533a\u5269\u4e0b\uff1a   Text Only<pre><code>\\n\n</code></pre></li> </ul> <ol> <li>\u7b2c\u516d\u6b65\uff1a\u6267\u884c <code>printf(\"hello\");</code></li> </ol> <ul> <li>\u6253\u5370\u5b57\u7b26\u4e32 <code>hello</code>\uff1a \u8f93\u51fa\uff1a<code>hello</code></li> </ul> <ol> <li>\u7b2c\u4e03\u6b65\uff1a\u6267\u884c <code>printf(\"%c%c%c\", ch1, ch2, ch3);</code></li> </ol> <ul> <li>\u6253\u5370\u5b57\u7b26 <code>ch1</code>, <code>ch2</code>, \u548c <code>ch3</code>\uff1a</li> <li><code>ch1 = 'a'</code></li> <li><code>ch2 = 'h'</code></li> <li><code>ch3 = 'a'</code> \u8f93\u51fa\uff1a<code>aha</code></li> </ul> <p>\u6700\u7ec8\u8f93\u51fa</p> <p>\u5c06\u6240\u6709\u7684\u8f93\u51fa\u6c47\u603b\uff0c\u7a0b\u5e8f\u8f93\u51fa\u4e3a\uff1a Text Only<pre><code>3helloaha\n</code></pre></p> <p>\u603b\u7ed3</p> <p>\u7f13\u51b2\u533a\u5728\u8f93\u5165\u8fc7\u7a0b\u4e2d\u4f1a\u52a8\u6001\u53d8\u5316\uff1a</p> <ol> <li><code>scanf</code> \u4e2d\u7684 <code>%d\\n</code> \u4f1a\u8bfb\u53d6\u6574\u6570\u5e76\u6d88\u8d39\u591a\u4f59\u7684\u6362\u884c\u7b26\uff1b</li> <li><code>getchar</code> \u4ece\u7f13\u51b2\u533a\u9010\u4e2a\u8bfb\u53d6\u5b57\u7b26\uff0c\u4f9d\u6b21\u6d88\u8017\u3002</li> </ol> <p>\u8f93\u5165 <code>3\\n\\n\\naha\\n</code> \u6309\u987a\u5e8f\u5904\u7406\u540e\uff1a</p> <ul> <li><code>x = 3</code></li> <li><code>ch1 = 'a'</code></li> <li><code>ch2 = 'h'</code></li> <li><code>ch3 = 'a'</code></li> </ul> <p>\u6700\u7ec8\u8f93\u51fa\u4e3a\uff1a Text Only<pre><code>3helloaha\n</code></pre></p>"},{"location":"computer/C/scatter/#4","title":"4 \u5927\u5c0f\u7aef","text":"<p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5927\u5c0f\u7aef\u662f\u6307\u5728\u591a\u5b57\u8282\u6570\u636e\uff08\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u7b49\uff09\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u987a\u5e8f\u3002\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u8282\u987a\u5e8f\u6765\u5b58\u50a8\u6570\u636e\uff0c\u901a\u5e38\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u5927\u7aef\u548c\u5c0f\u7aef</p> <ol> <li>\u5927\u7aef</li> </ol> <ul> <li>\u5728\u5927\u7aef\u6a21\u5f0f\u4e0b\uff0c\u6570\u636e\u7684\u9ad8\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\uff08\u5185\u5b58\u7684\u8d77\u59cb\u4f4d\u7f6e\uff09\uff0c\u4f4e\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u5730\u5740\u3002</li> </ul> <p>\u4f8b\u5b50\uff1a \u5047\u8bbe\u4f60\u6709\u4e00\u4e2a 32 \u4f4d\u6574\u6570 <code>0x12345678</code>\uff0c\u5b83\u7531 4 \u4e2a\u5b57\u8282\u7ec4\u6210\uff0c\u5206\u522b\u662f\uff1a - <code>0x12</code>\uff08\u9ad8\u5b57\u8282\uff09 - <code>0x34</code> - <code>0x56</code> - <code>0x78</code>\uff08\u4f4e\u5b57\u8282\uff09</p> <p>\u5728\u5927\u7aef\u6a21\u5f0f\u4e0b\uff0c\u8fd9\u4e2a\u6574\u6570\u5c06\u6309\u5982\u4e0b\u987a\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff1a</p> \u5730\u5740 0x00 0x01 0x02 0x03 \u6570\u636e 0x12 0x34 0x56 0x78 <ol> <li>\u5c0f\u7aef - \u5728\u5c0f\u7aef\u6a21\u5f0f\u4e0b\uff0c\u6570\u636e\u7684\u4f4e\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\uff0c\u9ad8\u5b57\u8282\u5b58\u50a8\u5728\u9ad8\u5730\u5740\u3002</li> </ol> <p>\u4f8b\u5b50\uff1a \u5bf9\u4e8e\u540c\u6837\u7684 32 \u4f4d\u6574\u6570 <code>0x12345678</code>\uff0c\u5728\u5c0f\u7aef\u6a21\u5f0f\u4e0b\uff0c\u5b83\u5c06\u6309\u5982\u4e0b\u987a\u5e8f\u5b58\u50a8\uff1a</p> \u5730\u5740 0x00 0x01 0x02 0x03 \u6570\u636e 0x78 0x56 0x34 0x12 <p>\u5927\u5c0f\u7aef\u7684\u5f71\u54cd</p> <ul> <li>\u6570\u636e\u4ea4\u6362\u95ee\u9898\uff1a\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u67b6\u6784\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u8282\u987a\u5e8f\uff0c\u5bfc\u81f4\u5728\u8de8\u5e73\u53f0\u6216\u8de8\u7f51\u7edc\u4f20\u8f93\u65f6\uff0c\u6570\u636e\u89e3\u91ca\u4e0d\u4e00\u81f4\u3002</li> <li>\u7f51\u7edc\u534f\u8bae\uff1a\u4f8b\u5982\uff0cTCP/IP\u534f\u8bae\u901a\u5e38\u4f7f\u7528\u5927\u7aef\u987a\u5e8f\uff08\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\uff09\u6765\u786e\u4fdd\u8de8\u7f51\u7edc\u7684\u6570\u636e\u4e00\u81f4\u6027\u3002</li> </ul> <p>\u793a\u4f8b\uff1a\u6574\u6570 <code>0x01020304</code> \u7684\u5b58\u50a8\u65b9\u5f0f</p> <ul> <li>\u5927\u7aef\u5b58\u50a8\uff1a</li> </ul> \u5730\u5740 0x00 0x01 0x02 0x03 \u6570\u636e 0x01 0x02 0x03 0x04 <ul> <li>\u5c0f\u7aef\u5b58\u50a8\uff1a</li> </ul> \u5730\u5740 0x00 0x01 0x02 0x03 \u6570\u636e 0x04 0x03 0x02 0x01 <p>\u4e3a\u4ec0\u4e48\u8981\u533a\u5206\u5927\u5c0f\u7aef\uff1f</p> <ul> <li>\u517c\u5bb9\u6027\uff1a\u4e0d\u540c\u786c\u4ef6\u67b6\u6784\uff08\u5982 x86 \u4f7f\u7528\u5c0f\u7aef\uff0c\u67d0\u4e9b RISC \u67b6\u6784\u4f7f\u7528\u5927\u7aef\uff09\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u5b57\u8282\u987a\u5e8f\u3002</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u4e00\u4e9b\u5904\u7406\u5668\u5728\u7279\u5b9a\u5b57\u8282\u987a\u5e8f\u4e0b\u7684\u6027\u80fd\u66f4\u597d\uff0c\u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u548c\u7a0b\u5e8f\u53ef\u80fd\u6839\u636e\u5e73\u53f0\u8c03\u6574\u5b57\u8282\u987a\u5e8f\u3002</li> </ul> <p>\u603b\u7ed3</p> <ul> <li>\u5927\u7aef\uff1a\u5c06\u6570\u636e\u7684\u9ad8\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\u3002</li> <li>\u5c0f\u7aef\uff1a\u5c06\u6570\u636e\u7684\u4f4e\u5b57\u8282\u5b58\u50a8\u5728\u4f4e\u5730\u5740\u3002</li> <li>\u5e94\u7528\uff1a\u5728\u8de8\u5e73\u53f0\u6216\u7f51\u7edc\u901a\u4fe1\u4e2d\uff0c\u7406\u89e3\u5927\u5c0f\u7aef\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</li> </ul>"},{"location":"computer/C/scatter/#5-const-define","title":"5 const \u548c define\u5b9a\u4e49\u4e0d\u53d8\u91cf\u65f6\u7684\u533a\u522b","text":"<p>\u793a\u4f8b\uff1a <code>const int N = 100;</code> \u548c <code>#define N 100;</code> \u7684\u533a\u522b</p> <p><code>const int N = 100;</code></p> <ol> <li>\u7c7b\u578b\u5b89\u5168: const \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\u5b89\u5168\u7684\u5e38\u91cf\uff0c\u5177\u6709\u660e\u786e\u7684\u7c7b\u578b\uff08\u5728\u8fd9\u91cc\u662f int\uff09\u3002</li> <li>\u4f5c\u7528\u57df: const \u5e38\u91cf\u9075\u5faa C++ \u7684\u4f5c\u7528\u57df\u89c4\u5219\uff0c\u53ef\u4ee5\u662f\u5c40\u90e8\u7684\u6216\u5168\u5c40\u7684\u3002</li> <li>\u8c03\u8bd5\u53cb\u597d: \u5728\u8c03\u8bd5\u65f6\uff0cconst \u5e38\u91cf\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u88ab\u8bc6\u522b\u548c\u68c0\u67e5\u3002</li> <li>\u7f16\u8bd1\u65f6\u5e38\u91cf: \u53ef\u4ee5\u7528\u4e8e\u9700\u8981\u7f16\u8bd1\u65f6\u5e38\u91cf\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5982\u6570\u7ec4\u5927\u5c0f\u3002</li> </ol> <p><code>#define N 100;</code></p> <ol> <li>\u5b8f\u5b9a\u4e49: #define \u5b9a\u4e49\u7684\u662f\u4e00\u4e2a\u5b8f\uff0c\u5b8f\u662f\u9884\u5904\u7406\u5668\u6307\u4ee4\uff0c\u5728\u7f16\u8bd1\u4e4b\u524d\u8fdb\u884c\u6587\u672c\u66ff\u6362\u3002</li> <li>\u7c7b\u578b\u4e0d\u5b89\u5168: \u5b8f\u5b9a\u4e49\u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u3002</li> <li>\u4f5c\u7528\u57df: \u5b8f\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u901a\u5e38\u662f\u5168\u5c40\u7684\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728\u5c40\u90e8\u8303\u56f4\u5185\u5b9a\u4e49\u3002</li> <li>\u8c03\u8bd5\u56f0\u96be: \u5b8f\u5b9a\u4e49\u5728\u8c03\u8bd5\u65f6\u4e0d\u5bb9\u6613\u88ab\u8bc6\u522b\u548c\u68c0\u67e5\u3002</li> <li>\u7f16\u8bd1\u65f6\u66ff\u6362: \u5b8f\u5728\u7f16\u8bd1\u65f6\u88ab\u5c55\u5f00\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u9700\u8981\u7f16\u8bd1\u65f6\u66ff\u6362\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5982\u6570\u7ec4\u5927\u5c0f\u3002</li> </ol>"},{"location":"computer/C%2B%2B/C%2B%2B/","title":"\u4eceC\u5230C++","text":"<p> \u7ea6 1680 \u4e2a\u5b57  838 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f</p> <ul> <li>\u4ee5\u65b0\u7684\u8bed\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\u5448\u73b0</li> <li>\u5305\u62ec\u4f46\u4e0d\u9650\u4e8eacwing\u7684\u7b14\u8bb0\u5185\u5bb9</li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#1-getline","title":"1 getline()\u76f8\u5173","text":"<p>cin\u7684\u51e0\u79cd\u8bfb\u53d6\u65b9\u6cd5\u548c\u8bfb\u53d6\u903b\u8f91</p> <p>\u65b9\u6cd5\u4e00(\u5e38\u7528)\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nint main()\n{\n    string a;//string \u662f C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u4e00\u4e2a\u7c7b\uff0c\u4ee3\u8868\u52a8\u6001\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002\n    getline(cin, a);\n    cout &lt;&lt; a.size() &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u65b9\u6cd5\u4e8c\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nint main()\n{\n    char a[105];\n    cin.get(a, 105);//\u9700\u8981\u6ce8\u610fcin.get()\u4e0d\u4f1a\u628a\u6362\u884c\u7b26\u53d6\u51fa\u5220\u9664\uff0c\u5f71\u54cd\u4e0b\u4e00\u6b21\u8bfb\u5165\uff01\n    cout &lt;&lt; strlen(a) &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u65b9\u6cd5\u4e09\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nint main()\n{\n    char a[105];\n    cin.getline(a, 105);//\u9700\u8981\u6ce8\u610fcin.getline()\u4f1a\u628a\u6362\u884c\u7b26\u53d6\u51fa\u5220\u9664\uff0c\u4e0d\u5f71\u54cd\u4e0b\u4e00\u6b21\u8bfb\u5165\uff01\n    cout &lt;&lt; strlen(a) &lt;&lt; endl;\n    return 0;\n}\n</code></pre></p> <ul> <li><code>getline(cin, a);</code>\uff1a\u4ece\u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09\u8bfb\u53d6\u4e00\u884c\u6587\u672c\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5230 a \u5b57\u7b26\u4e32\u4e2d\u3002getline \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u5141\u8bb8\u8bfb\u53d6\u5305\u542b\u7a7a\u683c\u7684\u6574\u884c\u6587\u672c\u3002cin \u8868\u793a\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u3002\u4e0d\u5b58\u50a8\u6700\u540e\u7684\u6362\u884c\u7b26\uff0c\u4e14\u4f1a\u628a\u6362\u884c\u7b26\u4ece\u6807\u51c6\u8f93\u5165\u6d41\u4e2d\u4e22\u5f03\u3002\u4e14getline()\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8echar\u6570\u7ec4\u3002</li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#2-forauto-c-a","title":"2 for(auto c : a)\u76f8\u5173","text":"C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    string a;\n    getline(cin,a);\n\n    string b;\n    for(auto c : a) b = b + c + ' ';\n    cout &lt;&lt; b &lt;&lt; endl;\n    b.pop_back();\n    return 0;\n}\n</code></pre> <ul> <li> <p><code>for(auto c : a)</code>: \u904d\u5386\u5b57\u7b26\u4e32 a \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u8d4b\u503c\u7ed9 c\u3002</p> </li> <li> <p><code>b.pop_back();</code>: \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5b57\u7b26</p> </li> <li> <p><code>for (auto c : a)</code>\u548c<code>for (char &amp;c : a)</code>\u7684\u533a\u522b\uff1a\u524d\u8005\u4fee\u6539C\u4e0d\u4f1a\u5f71\u54cd\u6570\u7ec4a\uff0c\u540e\u8005\u4f1a\u5f71\u54cd\u5230\u6570\u7ec4a.</p> </li> <li> <p><code>auto</code> \u662f C++ \u4e2d\u7684\u4e00\u79cd\u7c7b\u578b\u63a8\u65ad\u673a\u5236\uff0c\u5141\u8bb8\u7f16\u8bd1\u5668\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u4f7f\u7528 <code>auto</code> \u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u4e2d\u7684\u663e\u5f0f\u7c7b\u578b\u58f0\u660e\uff0c\u589e\u52a0\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u8bfb\u6027\u3002</p> </li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#3-insert","title":"3 insert()","text":"C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    string str,substr;\n    while(cin &gt;&gt; str &gt;&gt; substr)\n    {\n        int index = 0;\n        for(int i = 0;i &lt; str.size();i++ )\n        {\n            if(str[i] &gt; str[index])\n            {\n                index = i;\n            }\n        }\n        str.insert(index + 1,substr);\n        cout &lt;&lt; str &lt;&lt;endl;\n    }\n\n\n    return 0;\n}\n</code></pre>"},{"location":"computer/C%2B%2B/C%2B%2B/#4-find-rfind","title":"4 find() &amp; rfind ()","text":"<ul> <li><code>a.find(b)</code>: \u8fd4\u56de\u5b57\u7b26\u4e32a\u5728\u5b57\u7b26\u4e32b\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5047\u5982a\u4e0d\u5728b\u4e2d\uff0c\u8fd4\u56de<code>string::npos</code>\u3002</li> <li><code>a.rfind(b)</code>: \u8fd4\u56de\u5b57\u7b26\u4e32a\u5728\u5b57\u7b26\u4e32b\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5047\u5982a\u4e0d\u5728b\u4e2d\uff0c\u8fd4\u56de<code>string::npos</code>\u3002</li> </ul> <p><code>string::npos</code>\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u5728 C++ \u4e2d\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u7684\u6700\u5927\u503c C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    string a;\n    while (cin &gt;&gt; a)\n    {\n        for (auto c : a)\n        {\n            if(a.find(c) ==a.rfind(c))\n            {\n                cout &lt;&lt; c;\n                return 0;\n            }\n        }\n    }\n    cout &lt;&lt; \"no\";\n    return 0;\n}\n</code></pre></p>"},{"location":"computer/C%2B%2B/C%2B%2B/#5-stringstream-ssin","title":"5 stringstream ssin()","text":"<p>\u5206\u5272\u5b57\u7b26\u4e32\u5f62\u6210\u5b57\u7b26\u4e32\u6d41 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;sstream&gt;\nusing namespace std;\n\nint main()\n{\n    string a,b,c;\n\n    getline(cin,a);\n    cin &gt;&gt; b &gt;&gt; c;\n\n    stringstream ssin(a);\n    string str;\n    while(ssin &gt;&gt; str )\n    {\n        if(str == b)\n        cout &lt;&lt; c;\n        else cout &lt;&lt; str;\n        cout &lt;&lt; ' ';\n    }\n    return 0;\n}\n</code></pre></p>"},{"location":"computer/C%2B%2B/C%2B%2B/#6-strback","title":"6 str.back()\u76f8\u5173","text":"<ul> <li><code>str.back()</code>: \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002</li> <li><code>str.pop_back()</code>: \u5220\u9664\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;sstream&gt;\nusing namespace std;\nint main()\n{\n    string str,res;\n    while(cin &gt;&gt; str)\n    {\n        if (str.back() == '.') str.pop_back();\n        if (str.size() &gt; res.size())\n        {\n            res = str;\n        }\n    }\n    cout &lt;&lt; res &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#7-swap","title":"7 swap()","text":"<ul> <li><code>swap(a,b)</code>: \u4ea4\u6362a\u548cb\u7684\u503c\u3002\u5176\u4e2da,b\u53ef\u4ee5\u662f\u4efb\u610f\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u3002 PS:\u5305\u542b\u5728<code>#include &lt;algorithm&gt;</code>\u4e2d \u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint main()\n{\n    int a = 1, b = 2;\n    swap(a, b);\n    cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>2 1\n</code></pre></li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#8-substr","title":"8 substr()","text":"<ul> <li><code>a.substr(b)</code>: \u8fd4\u56de\u5b57\u7b26\u4e32a\u4ece\u7b2ca\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3ab\u7684\u5b50\u4e32\u3002 C++<pre><code>for(int i = 0;i &lt; a.size();i++)\n    {\n        a = a.substr(1) + a[0];//a.substr(1)\u8868\u793a\u4ece\u7b2c1\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3aa.size()-1\u7684\u5b50\u4e32\uff0ca[0]\u8868\u793a\u7b2c0\u4e2a\u5b57\u7b26\n    }\n</code></pre></li> <li><code>a.substr(b,c)</code>: \u8fd4\u56de\u5b57\u7b26\u4e32a\u4ece\u7b2cb\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3ac\u7684\u5b50\u4e32\u3002 \u5b9e\u73b0\u5b57\u7b26\u4e32\u5faa\u73af\u5de6\u79fb C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    while(cin &gt;&gt; n, n != 0)\n    {\n        string str[200];\n        int index = 0;\n        int min = 201;\n        for (int i = 0; i &lt; n; ++i) // \u4fee\u6539\u7b2c 9 \u884c\n        {\n            cin &gt;&gt; str[i]; // \u4fee\u6539\u7b2c 11 \u884c\n            if(str[i].size() &lt; min)\n            {\n                min = str[i].size();\n                index = i;\n            }\n        }\n        int i;\n        string res;\n        for(i = 1; i &lt;= min; i++)\n        {\n            string tmp = str[index].substr(str[index].size() - i, i);\n            cout &lt;&lt; tmp &lt;&lt; ' ' &lt;&lt; endl;\n            int j;\n            for(j = 0; j &lt; n; j++) // \u4fee\u6539\u7b2c 20 \u884c\n            {\n                string back = str[j].substr(str[j].size() - i, i);\n                if(back != tmp)\n                {\n                    break;\n                }\n            }\n            if(j == n)\n            {\n                res = tmp;\n            }\n            else\n            {\n                break; // \u6dfb\u52a0\u63d0\u524d\u9000\u51fa\u903b\u8f91\n            }\n        }\n        cout &lt;&lt; res &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre></li> </ul>"},{"location":"computer/C%2B%2B/C%2B%2B/#9-include","title":"9 #include <ul> <li><code>#include&lt;bits/stdc++.h&gt;</code>: \u5305\u542bC++\u6807\u51c6\u5e93\u7684\u6240\u6709\u5934\u6587\u4ef6\u3002\u5e38\u7528\u4e8e\u7ade\u8d5b\u3002 C++<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint n;\nstring a[209];\nint main(){\n    while(cin&gt;&gt;n){\n        if(n==0) return 0;\n        for(int i=0;i&lt;n;++i) cin&gt;&gt;a[i],reverse(a[i].begin(),a[i].end());\n        sort(a,a+n);\n        string v=\"\";\n        for(int i=0;i&lt;a[0].length();++i){\n            if(a[0][i]==a[n-1][i]) v=a[0][i]+v;\n            else break;\n        }\n        cout&lt;&lt;v&lt;&lt;\"\\n\";\n    }\n}\n</code></pre></li> </ul>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#10-reverse","title":"10 reverse() <ul> <li><code>reverse(a.begin(),a.end())</code>: \u53cd\u8f6c\u5b57\u7b26\u4e32a\u3002 C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint main()\n{\n    string a = \"hello\";\n    reverse(a.begin(),a.end());\n    cout &lt;&lt; a &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>olleh\n</code></pre></li> </ul>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#11-sort","title":"11 sort() <ul> <li>\u5728 C++ \u4e2d,sort \u51fd\u6570\u7684\u7528\u6cd5\u662f sort(begin,end,cmp)\uff0c\u5176\u4e2d begin \u662f\u8981\u6392\u5e8f\u7684\u8303\u56f4\u7684\u8d77\u59cb\u8fed\u4ee3\u5668\uff0cend \u662f\u8303\u56f4\u7684\u7ed3\u675f\u8fed\u4ee3\u5668\uff08\u4e0d\u5305\u62ec\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\uff09,cmp\u662f\u6bd4\u8f83\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u81ea\u5b9a\u4e49\u5219\u9ed8\u8ba4\u6309\u7167\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u5982\u679c\u60f3\u8981\u964d\u5e8f\u6392\u5217\u4e00\u4e9b\u57fa\u672c\u7c7b\u578b\u53ef\u4ee5\u5728cmp\u7684\u4f4d\u7f6e<code>greater&lt;type&gt;()</code>,\u5982\u679c\u9700\u8981\u66f4\u590d\u6742\u7684\u6392\u5e8f\u65b9\u5f0f\u5219\u9700\u8981\u81ea\u5b9a\u4e49\u8fd4\u56de\u7c7b\u578b\u4e3a<code>bool</code>\u578b\u7684cmp\u51fd\u6570\u3002</li> </ul> <p>\u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nstruct tmp\n{\n    int a;\n    double b;\n    string str;\n}arr[10000];\nint cmp(const tmp x,const tmp y)\n{\n    return x.a &lt; y.a;\n}\nint main()\n{\n    int n;\n    cin &gt;&gt; n;\n   for(int i = 0; i &lt; n;i++)\n   {\n       cin &gt;&gt; arr[i].a &gt;&gt; arr[i].b &gt;&gt; arr[i].str;\n   }\n   sort(arr,arr + n,cmp);\n   for(int i = 0;i &lt; n;i++)\n   {\n       printf(\"%d %.2f %s\\n\", arr[i].a, arr[i].b, arr[i].str.c_str());\n   }\n\n    return 0;\n}\n</code></pre></p> <ul> <li><code>c_str()</code>:  C++ \u4e2d std::string \u7c7b\u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u5e38\u91cf\u5b57\u7b26\u6307\u9488\uff08const char*\uff09\u3002\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u4ee5 null \u7ed3\u5c3e\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u7528\u4e8e\u4e0e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u8fdb\u884c\u4ea4\u4e92\u3002</li> </ul>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#12-unordered_set","title":"12 unordered_set <ul> <li><code>unordered_set&lt;int&gt; a</code>: \u5b9a\u4e49\u4e00\u4e2a\u65e0\u5e8f\u96c6\u5408a\uff0c\u5176\u4e2d\u5143\u7d20\u7c7b\u578b\u4e3aint\u3002</li> <li><code>a.insert(b)</code>: \u5c06b\u63d2\u5165\u5230a\u4e2d\u3002</li> <li><code>a.count(b)</code>: \u8fd4\u56deb\u5728a\u4e2d\u7684\u4e2a\u6570\u3002</li> <li><code>a.find(b)</code>: \u8fd4\u56deb\u5728a\u4e2d\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>a.erase(b)</code>: \u5220\u9664a\u4e2d\u7684b\u3002</li> </ul> C++<pre><code>int get_unique_count(int a[], int n)\n {\n    unordered_set&lt;int&gt; unique_nums;\n    for (int i = 0; i &lt; n; i++) unique_nums.insert(a[i]);//\u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u5143\u7d20\u63d2\u5165\u96c6\u5408\u4e2d\u3002\u96c6\u5408\u4f1a\u81ea\u52a8\u53bb\u91cd\u3002\n    return unique_nums.size();\n}\n</code></pre>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#13","title":"13 \u7ed3\u6784\u4f53\u5185\u90e8\u7684\u6784\u9020\u51fd\u6570 C++<pre><code>struct Node\n{\n    int a,b;\n    Node(int _a,int _b):a(_a),b(_b){}//\u628a_a\u8d4b\u503c\u7ed9a,\u628a_b\u8d4b\u503c\u7ed9b\n};\n</code></pre>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#14","title":"14 \u94fe\u8868 <ul> <li> <p><code>new</code>:new \u662f C++ \u4e2d\u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u5173\u952e\u5b57\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u5e76\u8fd4\u56de\u6307\u5411\u8be5\u5185\u5b58\u7684\u6307\u9488\u3002 Eg: C++<pre><code> int* p = new int; // \u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u6574\u6570\n  *p = 10;          // \u7ed9\u8fd9\u4e2a\u6574\u6570\u8d4b\u503c\n\n\nint* arr = new int[5]; // \u5728\u5806\u4e0a\u5206\u914d\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a5\nfor (int i = 0; i &lt; 5; ++i) {\n    arr[i] = i;        // \u521d\u59cb\u5316\u6570\u7ec4\n} \n</code></pre> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\u94fe\u8868\u8282\u70b9\u7ed3\u6784\u4f53\nstruct Node\n{\n    int val;        // \u8282\u70b9\u5b58\u50a8\u7684\u503c\n    Node* next;     // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\n\n    // \u6784\u9020\u51fd\u6570\uff0c\u521d\u59cb\u5316\u8282\u70b9\n    Node(int _val) : val(_val), next(NULL) {}\n};\n\nint main()\n{\n    // \u521b\u5efa\u4e09\u4e2a\u8282\u70b9\n    auto p = new Node(1);  // \u521b\u5efa\u503c\u4e3a1\u7684\u8282\u70b9\n    auto q = new Node(2);  // \u521b\u5efa\u503c\u4e3a2\u7684\u8282\u70b9\n    auto o = new Node(3);  // \u521b\u5efa\u503c\u4e3a3\u7684\u8282\u70b9\n\n    // \u8fde\u63a5\u8282\u70b9\uff0c\u6784\u5efa\u94fe\u8868\n    p-&gt;next = q;    // \u5c06\u8282\u70b91\u6307\u5411\u8282\u70b92\n    q-&gt;next = o;    // \u5c06\u8282\u70b92\u6307\u5411\u8282\u70b93\n    Node* head = p;//\u521d\u59cb\u5316\u94fe\u8868\u7684\u5934\u8282\u70b9\n\n    //\u94fe\u8868\u7684\u904d\u5386\n    for(Node* i = head;i != NULL; i = -&gt; next)\n    {\n        cout &lt;&lt; i-&gt;val &lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u6700\u7ec8\u7684\u94fe\u8868\u7ed3\u6784 Text Only<pre><code>p        q        o\n[1] ---&gt; [2] ---&gt; [3] ---&gt; NULL\n</code></pre></p> </li> <li> <p>\u5728\u94fe\u8868\u4e2d\u6dfb\u52a0\u8282\u70b9(\u4e00\u822c\u6dfb\u52a0\u5728\u6700\u524d\u9762) C++<pre><code>Node* u = new Node(4);\nu-&gt;next = head;\nhead = u;\n</code></pre></p> </li> <li> <p>\u8282\u70b9\u7684\u5220\u9664\uff1a\u53ea\u8981\u904d\u5386\u4e0d\u5230\u9700\u8981\u5220\u9664\u7684\u70b9\u5c31\u53ef\u4ee5\uff0c\u81f3\u4e8e\u6709\u6ca1\u6709\u771f\u6b63\u5220\u9664\u5e76\u4e0d\u91cd\u8981\u3002 C++<pre><code>head-&gt;next = head-&gt;next-&gt;next;\u76f8\u5f53\u4e8e\u8df3\u8fc7\u4e86\u67d0\u4e00\u4e2a\u8282\u70b9\n</code></pre></p> </li> <li> <p>\u94fe\u8868\u5f52\u5e76\uff1a</p> </li> </ul>  \u9898\u76ee-1\u7b54\u6848-1   <p>\u8f93\u5165\u4e24\u4e2a\u9012\u589e\u6392\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u8fd9\u4e24\u4e2a\u94fe\u8868\u5e76\u4f7f\u65b0\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u4ecd\u7136\u662f\u6309\u7167\u9012\u589e\u6392\u5e8f\u7684\u3002</p>   <p>\u4e8c\u8def\u5f52\u5e76\uff1a C++<pre><code>/**\n* Definition for singly-linked list.\n* struct ListNode {\n*     int val;\n*     ListNode *next;\n*     ListNode(int x) : val(x), next(NULL) {}\n* };\n*/\nclass Solution {\npublic:\n    ListNode* merge(ListNode* l1, ListNode* l2) {\n        auto dummy = new ListNode(-1),tail = dummy;//\u521d\u59cb\u5316\u4e00\u4e2a\u865a\u62df\u8282\u70b9\n        while(l1&amp;&amp;l2)\n        {\n            if(l1-&gt;val &lt; l2-&gt;val)\n            {\n                tail-&gt;next = l1;\n                l1 = l1-&gt;next;\n            }\n            else\n            {\n            tail-&gt;next = l2;\n            l2 = l2-&gt;next;\n            }\n            tail = tail-&gt;next;\n        }\n        if(l1 == NULL) tail-&gt;next = l2;\n        if(l2 == NULL) tail-&gt;next = l1;\n        return dummy-&gt;next;\n    }\n};\n</code></pre></p>     <ul> <li>\u94fe\u8868\u53cd\u8f6c\uff1a</li> </ul>  \u9898\u76ee-2\u7b54\u6848-2   <p>\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u53cd\u8f6c\u8be5\u94fe\u8868\u5e76\u8f93\u51fa\u53cd\u8f6c\u540e\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u3002 \u6837\u4f8b:</p>  <p>\u8f93\u5165:1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL   \u8f93\u51fa:5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL</p>    <p>\u6cd51\uff1a C++<pre><code>/**\n* Definition for singly-linked list.\n* struct ListNode {\n*     int val;\n*     ListNode *next;\n*     ListNode(int x) : val(x), next(NULL) {}\n* };\n*/\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(!head || !head-&gt;next) return head;\n    auto p = head, q = head-&gt;next;\n    while (q)\n    {\n        auto o = q -&gt; next;\n        q-&gt;next = p;\n        p = q;\n        q = o;\n    }\n    head-&gt;next = NULL;\n    return p;\n\n    }\n};\n</code></pre> \u6cd52\uff08\u9012\u5f52\uff09\uff1a C++<pre><code>/**\n* Definition for singly-linked list.\n* struct ListNode {\n*     int val;\n*     ListNode *next;\n*     ListNode(int x) : val(x), next(NULL) {}\n* };\n*/\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(!head || !head-&gt;next) return head;\n        auto tail = reverseList(head-&gt;next);\n        head-&gt;next-&gt;next = head;\n        head-&gt;next = NULL;\n        return tail;\n\n    }\n};      \n</code></pre></p>     <ul> <li>\u627e\u516c\u5171\u8282\u70b9\uff1a</li> </ul>  \u9898\u76ee-3\u7b54\u6848-3\u56fe\u89e3   <p>\u627e\u4e24\u4e2a\u94fe\u8868\u7684\u516c\u5171\u8282\u70b9</p>   C++<pre><code>/**\n* Definition for singly-linked list.\n* struct ListNode {\n*     int val;\n*     ListNode *next;\n*     ListNode(int x) : val(x), next(NULL) {}\n* };\n*/\nclass Solution {\npublic:\n    ListNode *findFirstCommonNode(ListNode *headA, ListNode *headB) {\n        auto p = headA;\n        auto q = headB;\n        while(p != q)\n        {\n            if(p) p = p-&gt;next;\n            else p = headB;\n            if(q) q = q -&gt;next;\n            else q = headA;\n        }\n        return p;\n\n    }\n};\n</code></pre>   <p>\u53cc\u6307\u9488\u6cd5\u56fe\u89e3</p>     <ul> <li>\u5220\u9664\u94fe\u8868\u4e2d\u91cd\u590d\u7684\u8282\u70b9:</li> </ul>  \u9898\u76ee-4\u7b54\u6848-4   <p>\u5220\u9664\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u8282\u70b9</p>  <p>\u6837\u4f8b1 \u8f93\u5165\uff1a1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 \u8f93\u51fa\uff1a1-&gt;2-&gt;5</p> <p>\u6837\u4f8b2 \u8f93\u5165\uff1a1-&gt;1-&gt;1-&gt;2-&gt;3 \u8f93\u51fa\uff1a2-&gt;3</p>    C++<pre><code>/**\n* Definition for singly-linked list.\n* struct ListNode {\n*     int val;\n*     ListNode *next;\n*     ListNode(int x) : val(x), next(NULL) {}\n* };\n*/\nclass Solution {\npublic:\n    ListNode* deleteDuplication(ListNode* head) {\n        auto dummy = new ListNode(-1);\n        dummy-&gt;next = head;\n        auto p = dummy;\n        while (p-&gt;next) {\n        auto q = p-&gt;next;\n        while(q-&gt;next &amp;&amp; p-&gt;next-&gt;val == q-&gt;next-&gt;val) q = q-&gt;next;\n        if(q == p-&gt;next) p = p-&gt;next;\n        else p-&gt;next = q-&gt;next;\n        }\n\n      return dummy-&gt;next;\n    }\n};\n</code></pre>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#15","title":"15 \u7c7b&amp;\u5bf9\u8c61 <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Box\n{\n   public:\n      double length;   // \u957f\u5ea6\n      double breadth;  // \u5bbd\u5ea6\n      double height;   // \u9ad8\u5ea6\n      // \u6210\u5458\u51fd\u6570\u58f0\u660e\n      double get(void);\n      void set( double len, double bre, double hei );\n};\n// \u6210\u5458\u51fd\u6570\u5b9a\u4e49\ndouble Box::get(void)\n{\n    return length * breadth * height;\n}\n\nvoid Box::set( double len, double bre, double hei)\n{\n    length = len;\n    breadth = bre;\n    height = hei;\n}\nint main( )\n{\n   Box Box1;        // \u58f0\u660e Box1\uff0c\u7c7b\u578b\u4e3a Box\n   Box Box2;        // \u58f0\u660e Box2\uff0c\u7c7b\u578b\u4e3a Box\n   Box Box3;        // \u58f0\u660e Box3\uff0c\u7c7b\u578b\u4e3a Box\n   double volume = 0.0;     // \u7528\u4e8e\u5b58\u50a8\u4f53\u79ef\n\n   // box 1 \u8be6\u8ff0\n   Box1.height = 5.0; \n   Box1.length = 6.0; \n   Box1.breadth = 7.0;\n\n   // box 2 \u8be6\u8ff0\n   Box2.height = 10.0;\n   Box2.length = 12.0;\n   Box2.breadth = 13.0;\n\n   // box 1 \u7684\u4f53\u79ef\n   volume = Box1.height * Box1.length * Box1.breadth;\n   cout &lt;&lt; \"Box1 \u7684\u4f53\u79ef\uff1a\" &lt;&lt; volume &lt;&lt;endl;\n\n   // box 2 \u7684\u4f53\u79ef\n   volume = Box2.height * Box2.length * Box2.breadth;\n   cout &lt;&lt; \"Box2 \u7684\u4f53\u79ef\uff1a\" &lt;&lt; volume &lt;&lt;endl;\n\n\n   // box 3 \u8be6\u8ff0\n   Box3.set(16.0, 8.0, 12.0); \n   volume = Box3.get(); \n   cout &lt;&lt; \"Box3 \u7684\u4f53\u79ef\uff1a\" &lt;&lt; volume &lt;&lt;endl;\n   return 0;\n}\n</code></pre>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#16-stl","title":"16 STL  multisetmultiset_\u793a\u4f8b1multiset_\u793a\u4f8b2   <p>multiset\u662f\u5e93\u4e2d\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u5220\u9664\u4e00\u4e2a\u6570\u90fd\u80fd\u591f\u5728O(logn)\u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u800c\u4e14\u4ed6\u80fd\u65f6\u523b\u4fdd\u8bc1\u5e8f\u5217\u4e2d\u7684\u6570\u662f\u6709\u5e8f\u7684\uff0c\u800c\u4e14\u5e8f\u5217\u4e2d\u53ef\u4ee5\u5b58\u5728\u91cd\u590d\u7684\u6570\u3002   C++<pre><code>class Solution {\npublic:\n    int getNumberOfK(vector&lt;int&gt;&amp; nums , int k) {\n        multiset&lt;int&gt; s;\n\n        for(int x : nums) s.insert(x);\n\n        return s.count(k);\n    }\n};\n</code></pre>   <p>C++<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;set&gt;\nusing namespace std;\nvoid main(){\n    intx;\n    scanf(\"%ld\",&amp;x);\n    multiset&lt;int&gt;h;          //\u5efa\u7acb\u4e00\u4e2amultiset\u7c7b\u578b\uff0c\u53d8\u91cf\u540d\u662fh\uff0ch\u5e8f\u5217\u91cc\u9762\u5b58\u7684\u662fint\u7c7b\u578b,\u521d\u59cbh\u4e3a\u7a7a\n    while(x!=0){\n        h.insert(x);         //\u5c06x\u63d2\u5165h\u4e2d\n        scanf(\"%ld\",&amp;x);\n    }    \n    while(!h.empty()){       // \u5e8f\u5217\u975e\u7a7a h.empty()==true\u65f6 \u8868\u793ah\u5df2\u7ecf\u7a7a\u4e86\n        __typeof(h.begin()) c=h.begin();\n                            //c\u6307\u5411h\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6700\u5c0f\u7684\u5143\u7d20\n        printf(\"%ld \",*c);   //\u5c06\u5730\u5740c\u5b58\u7684\u6570\u636e\u8f93\u51fa\n        h.erase(c);          //\u4eceh\u5e8f\u5217\u4e2d\u5c06c\u6307\u5411\u7684\u5143\u7d20\u5220\u9664\n    }\n}\n</code></pre> \u66f4\u591amultiset\u76f8\u5173</p>     <ul> <li>\u8fed\u4ee3\u5668\u548c\u53cd\u5411\u8fed\u4ee3\u5668</li> </ul>","text":""},{"location":"computer/C%2B%2B/C%2B%2B/#17","title":"17 \u91cd\u8f7d\u51fd\u6570\u548c\u91cd\u8f7d\u8fd0\u7b97\u7b26 <ul> <li>\u91cd\u8f7d\u51fd\u6570:\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\uff0c\u53ef\u4ee5\u58f0\u660e\u51e0\u4e2a\u529f\u80fd\u7c7b\u4f3c\u7684\u540c\u540d\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\uff08\u6307\u53c2\u6570\u7684\u4e2a\u6570\u3001\u7c7b\u578b\u6216\u8005\u987a\u5e8f\uff09\u5fc5\u987b\u4e0d\u540c\u3002\u60a8\u4e0d\u80fd\u4ec5\u901a\u8fc7\u8fd4\u56de\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u91cd\u8f7d\u51fd\u6570\u3002\u4e0b\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c\u540c\u540d\u51fd\u6570 print () \u88ab\u7528\u4e8e\u8f93\u51fa\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff1a</li> </ul> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass printData\n{\n   public:\n      void print (int i) {\n        cout &lt;&lt; \"\u6574\u6570\u4e3a: \" &lt;&lt; i &lt;&lt; endl;\n      }\n\n      void print (double  f) {\n        cout &lt;&lt; \"\u6d6e\u70b9\u6570\u4e3a: \" &lt;&lt; f &lt;&lt; endl;\n      }\n\n      void print (char c[]) {\n        cout &lt;&lt; \"\u5b57\u7b26\u4e32\u4e3a: \" &lt;&lt; c &lt;&lt; endl;\n      }\n};\n\nint main (void)\n{\n   printData pd;\n\n   // \u8f93\u51fa\u6574\u6570\n   pd.print (5);\n   // \u8f93\u51fa\u6d6e\u70b9\u6570\n   pd.print (500.263);\n   // \u8f93\u51fa\u5b57\u7b26\u4e32\n   char c[] = \"Hello C++\";\n   pd.print (c);\n\n   return 0;\n}\n</code></pre> <ul> <li>\u5173\u4e8e\u91cd\u8f7d\u51fd\u6570\u7684\u66f4\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0</li> <li>\u91cd\u8f7d\u8fd0\u7b97\u7b26 \u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u57fa\u672c\u8bed\u6cd5\uff1a <code>operator \u5f85\u91cd\u8f7d\u8fd0\u7b97\u7b26 (\u53c2\u6570){\u51fd\u6570\u4f53}</code></li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Box\n{\n   public:\n\n      double getVolume (void)\n      {\n         return length * breadth * height;\n      }\n      void setLength ( double len )\n      {\n          length = len;\n      }\n\n      void setBreadth ( double bre )\n      {\n          breadth = bre;\n      }\n\n      void setHeight ( double hei )\n      {\n          height = hei;\n      }\n      // \u91cd\u8f7d + \u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u628a\u4e24\u4e2a Box \u5bf9\u8c61\u76f8\u52a0\n      Box operator+(const Box&amp; b)\n      {\n         Box box;\n         box. length = this-&gt;length + b.length;\n         box. breadth = this-&gt;breadth + b.breadth;\n         box. height = this-&gt;height + b.height;\n         return box;\n      }\n   private:\n      double length;      // \u957f\u5ea6\n      double breadth;     // \u5bbd\u5ea6\n      double height;      // \u9ad8\u5ea6\n};\n// \u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\nint main ( )\n{\n   Box Box1;                // \u58f0\u660e Box1\uff0c\u7c7b\u578b\u4e3a Box\n   Box Box2;                // \u58f0\u660e Box2\uff0c\u7c7b\u578b\u4e3a Box\n   Box Box3;                // \u58f0\u660e Box3\uff0c\u7c7b\u578b\u4e3a Box\n   double volume = 0.0;     // \u628a\u4f53\u79ef\u5b58\u50a8\u5728\u8be5\u53d8\u91cf\u4e2d\n\n   // Box1 \u8be6\u8ff0\n   Box1.setLength (6.0); \n   Box1.setBreadth (7.0); \n   Box1.setHeight (5.0);\n\n   // Box2 \u8be6\u8ff0\n   Box2.setLength (12.0); \n   Box2.setBreadth (13.0); \n   Box2.setHeight (10.0);\n\n   // Box1 \u7684\u4f53\u79ef\n   volume = Box1.getVolume ();\n   cout &lt;&lt; \"Volume of Box1 : \" &lt;&lt; volume &lt;&lt;endl;\n\n   // Box2 \u7684\u4f53\u79ef\n   volume = Box2.getVolume ();\n   cout &lt;&lt; \"Volume of Box2 : \" &lt;&lt; volume &lt;&lt;endl;\n\n   // \u628a\u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0\uff0c\u5f97\u5230 Box3\n   Box3 = Box1 + Box2;\n\n   // Box3 \u7684\u4f53\u79ef\n   volume = Box3.getVolume ();\n   cout &lt;&lt; \"Volume of Box3 : \" &lt;&lt; volume &lt;&lt;endl;\n\n   return 0;\n}\n</code></pre> <ul> <li>\u53cb\u5143\u91cd\u8f7d\u548c\u7c7b\u5185\u6210\u5458\u91cd\u8f7d\u7684\u4e24\u4e2a\u793a\u4f8b\uff1a<ul> <li>\u53cb\u5143\u91cd\u8f7d\u662f\u4e3a\u4e86\u8ba9\u51fd\u6570\u80fd\u8bbf\u95ee\u7c7b\u5185\u7684 private \u548c protected \u6210\u5458\uff0c\u5982\u679c\u7c7b\u5185\u5168\u90fd\u662f public \u6210\u5458\uff0c\u53cb\u5143\u91cd\u8f7d\u5c31\u6ca1\u6709\u5fc5\u8981</li> </ul> </li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\nclass MM\n{\npublic:\n    MM() {}\n    MM(string NAME, int AGE) : name(NAME), age(AGE) {}\n    void print()\n    {\n        cout &lt;&lt; name &lt;&lt; \":\" &lt;&lt; age &lt;&lt; endl;\n    }\n    void printdata()\n    {\n        MM::print(); // \u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\n        this-&gt;print(); // \u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u6210\u5458\u51fd\u6570\n    }\n    string name;\n    int age;\n    friend MM operator+(MM object1, MM object2);// \u53cb\u5143\u91cd\u8f7d\n    MM operator-(MM object1)// \u7c7b\u7684\u6210\u5458\u51fd\u6570\u65b9\u5f0f\u91cd\u8f7d;\n    {\n        return MM(this-&gt;name, this-&gt;age - object1.age);\n    }\n    //\u91cd\u8f7d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff1a\u91cd\u8f7d\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u662f\u7531\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u8868\u8fbe\u5f0f\u7684\u6700\u7ec8\u7ed3\u679c\u51b3\u5b9a\u3002\n\n};\nMM operator+(MM object1, MM object2)\n{\n    return MM(object1.name + object2.name, object1.age + object2.age);\n}\nint main()\n{\n    MM girl2(\"\u5c0f\u521a\", 20);\n    MM girl1(\"\u5c0f\u7f8e\", 18);\n    MM object1; //\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u51fd\u6570\n    object1 = girl1 + girl2;//\u9700\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\n    MM object2 = operator+(girl1, girl2);//\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5b9e\u8d28\u662f\u51fd\u6570\u8c03\u7528\n    MM object3 = girl2 - girl1;\n    MM object4 = girl2.operator-(girl1);\n    object1.print();\n    object2.print();\n    object3.print();\n    object4.print();\n\n\n}\n</code></pre> <p>\u8fd4\u56de\u7ed3\u679c\uff1a</p> Text Only<pre><code>\u5c0f\u7f8e:38\n\u5c0f\u7f8e\u5c0f\u521a:38\n\u5c0f\u521a:2\n\u5c0f\u521a:2\n</code></pre> <p>C++<pre><code>#include &lt;iostream&gt;\n\nclass Point {\npublic:\n    Point(int x = 0, int y = 0) : x(x), y(y) {}\n\n    // \u91cd\u8f7d &lt;&lt; \u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8f93\u51fa Point \u5bf9\u8c61\n    friend std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Point&amp; point) {\n        out &lt;&lt; \"(\" &lt;&lt; point.x &lt;&lt; \", \" &lt;&lt; point.y &lt;&lt; \")\";\n        return out;\n    }\n\n    // \u91cd\u8f7d &gt;&gt; \u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8f93\u5165 Point \u5bf9\u8c61\n    friend std::istream&amp; operator&gt;&gt;(std::istream&amp; in, Point&amp; point) {\n        std::cout &lt;&lt; \"Enter x: \";\n        in &gt;&gt; point.x;\n        std::cout &lt;&lt; \"Enter y: \";\n        in &gt;&gt; point.y;\n        return in;\n    }\n\nprivate:\n    int x, y;\n};\n\nint main() {\n    Point p1;\n    std::cout &lt;&lt; \"Input a point:\" &lt;&lt; std::endl;\n    std::cin &gt;&gt; p1;  // \u4f7f\u7528\u91cd\u8f7d\u7684 &gt;&gt; \u8fd0\u7b97\u7b26\u8f93\u5165\u70b9\u7684\u5750\u6807\n\n    std::cout &lt;&lt; \"You entered: \" &lt;&lt; p1 &lt;&lt; std::endl;  // \u4f7f\u7528\u91cd\u8f7d\u7684 &lt;&lt; \u8fd0\u7b97\u7b26\u8f93\u51fa\u70b9\u7684\u5750\u6807\n\n    return 0;\n}\n</code></pre> \u8f93\u5165\uff1a Text Only<pre><code>Enter x: 1\nEnter y: 2\n</code></pre> \u8f93\u51fa\uff1a Text Only<pre><code>You entered: (1, 2)\n</code></pre></p> <p>\u7279\u6b8a\u91cd\u8f7d</p> <ul> <li> <p>\u524d\u7f6e++\u548c\u540e\u7f6e++ C++<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Num\n{\npublic:\n    Num(int iNum = 0) : iNum(iNum) {}\n    void print()\n    {\n        cout &lt;&lt; iNum &lt;&lt; endl;\n    }\n    Num operator++(int)//\u540e\u7f6e\u7684++\u548c--\u8981\u7528int\u6807\u8bc6\n    {\n        return(this-&gt;iNum++);\n    }\n    Num operator++()\n    {\n        return(++this-&gt;iNum);\n    }\nprotected:\n    int iNum;//\u9650\u5236\u5728\u7c7b\u5185\u8bbf\u95ee\uff1b\n};\nint main()\n{\n    Num a(1);\n    Num b = a++;\n    Num c = ++a;\n    b.print();\n    a.print();\n    c.print();\n    return 0;\n}\n</code></pre></p> </li> <li> <p>\u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d</p> <ul> <li>\u6d41\u5bf9\u8c61\uff1aostream: \u8f93\u51fa\u6d41\uff0c <code>cout</code> \u5c31\u662f ostream \u7c7b\u7684\u5bf9\u8c61\uff0cistream: \u8f93\u5165\u6d41 <code>cin</code> \u5c31\u662f istream \u7c7b\u7684\u5bf9\u8c61</li> <li>\u6d41\u91cd\u8f7d\uff0c\u5fc5\u987b\u91c7\u7528\u7684\u5f15\u7528\u7684\u65b9\u5f0f\uff0c\u5fc5\u987b\u91c7\u7528\u53cb\u5143\u7684\u65b9\u5f0f\u3002</li> </ul> </li> </ul> <p>\u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\nclass MM\n{\npublic:\n    MM(string name = \"\", int age = 0) :name(name), age(age) {}  \n    friend ostream&amp; operator&lt;&lt;(ostream&amp; , MM&amp;);\n    friend istream&amp; operator&gt;&gt;(istream&amp; , MM&amp;);\nprotected:\n    string name;\n    int age;\n};\n\n\nclass girl // \u8fd9\u79cd\u65b9\u6cd5\u907f\u514d\u4e86\u4f7f\u7528\u53cb\u5143\u51fd\u6570\uff0c\u4f46\u662f\u5b9e\u73b0\u7a0b\u5e8f\u548c\u53cb\u5143\u51fd\u6570\u5dee\u4e0d\u591a\n{\npublic:\n    girl(string name = \"\", int age = 0) :name(name), age(age) {}\n    void output(ostream&amp; out)\n    {\n        out &lt;&lt; this-&gt;name &lt;&lt; \":\" &lt;&lt; this-&gt;age;\n    }\n    void input(istream&amp; in)\n    {\n        in &gt;&gt; this-&gt;name &gt;&gt; this-&gt;age;\n    }\nprotected:\n    string name;\n    int age;\n};\nostream&amp; operator&lt;&lt;(ostream&amp; out, MM&amp; mm)\n{\n    out &lt;&lt; mm.name &lt;&lt; '\\t' &lt;&lt; mm.age;\n    return out;\n}\nistream&amp; operator&gt;&gt;(istream&amp; in, MM&amp; mm)\n{\n    in &gt;&gt; mm.name &gt;&gt; mm.age;\n    return in;\n}\nostream&amp; operator&lt;&lt;(ostream&amp; out, girl&amp; girl)\n{\n    girl.output(out);\n    return out;\n}\nistream&amp; operator&gt;&gt;(istream&amp; in, girl&amp; girl)\n{\n    girl.input(in);\n    return in;\n}\nint main()\n{\n    MM mm;\n    cin &gt;&gt; mm; //cin:istream\n    cout &lt;&lt; mm;//cout:ostream\n    girl girl;\n    cin &gt;&gt; girl;\n    cout &lt;&lt; girl;\n    return 0;\n}\n</code></pre></p> <ul> <li>\u540e\u7f00\u91cd\u8f7d\u548c\u6587\u672c\u91cd\u8f7d</li> <li>PS\uff1a\u540e\u7f00\u91cd\u8f7d\u548c\u6587\u672c\u91cd\u8f7d\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u4e3a <code>unsigned long long</code> \u548c<code>const char*</code></li> <li>PS\uff1a\u540e\u7f00\u91cd\u8f7d\u548c\u6587\u672c\u91cd\u8f7d\u7684\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u4e3a <code>unsigned long long</code> \u548c<code>const char*</code></li> </ul> <p>\u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\nunsigned long long operator\"\"_h(unsigned long long num)\n{\n    return num * 60 * 60;\n}\nint main()\n{\n    int num = 1_h;\n    cout &lt;&lt; num;\n    return 0;\n}\n</code></pre></p> <ul> <li>\u9690\u5f0f\u8f6c\u6362\uff1a<ul> <li>\u5728C++\u4e2d\uff0c\u9690\u5f0f\u8f6c\u6362\u662f\u6307\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u5c06\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</li> <li>\u683c\u5f0f\uff1a<code>operator \u76ee\u6807\u7c7b\u578b() {return \u76ee\u6807\u7c7b\u578b\u6570\u636e;}</code> \u793a\u4f8b\uff1a C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\nclass MM\n{\npublic:\n    MM(string name = \"\", int age = 0) : name(name), age(age) {};\n    operator int()\n    {\n        return this-&gt;age;\n    }\nprivate:\n    int age;\n    string name;\n};\nint main()\n{\n    MM girl(\"\u5c0f\u7f8e\", 18);\n    int sum = girl;\n    cout &lt;&lt; sum;\n    return 0;\n}\n</code></pre> \u8f93\u51fa\u7ed3\u679c\uff1a Text Only<pre><code>18\n</code></pre></li> </ul> </li> </ul>","text":""},{"location":"computer/C%2B%2B/ac_cpp/","title":"\u901f\u6210 C++","text":"<p> \u7ea6 3837 \u4e2a\u5b57  871 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 30 \u5206\u949f</p> <code>#programming_language</code> <ul> <li>\u8bb0\u8f7d\u4e86\u524d\u4e5d\u7ae0\u5185\u5bb9\u7684\u7b14\u8bb0\u5e76\u6458\u51fa\u4e86\u6e90\u7801</li> <li>\u76f8\u5173\u8d44\u6e90<ul> <li>E-book in Cn</li> <li>E-book in En</li> <li>GitHub - Joyounger/accelerated_cpp: Accelerated C++ win-net-source  \u8fd9\u4e2a\u4ed3\u5e93\u5305\u542b\u4e86\u4e66\u4e2d\u6e90\u7801</li> <li>\u524d\u56db\u7ae0\u5f88\u597d\u7684\u7b14\u8bb0</li> </ul> </li> <li>\u98df\u7528\u5efa\u8bae<ul> <li>\u901f\u8bfb\u539f\u6587-&gt;\u5199\u5173\u952e\u8bcd-&gt;\u4e3b\u52a8\u56de\u5fc6-&gt;\u6574\u5408\u7b14\u8bb0</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#0-c","title":"0 \u5f00\u59cb\u5b66\u4e60 C++","text":"C++<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n    std::cout &lt;&lt; \"Hello, world!\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#01","title":"0.1 \u6ce8\u91ca","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#02-include","title":"0.2 <code>#include</code> \u6307\u4ee4","text":"<ul> <li>C++<ul> <li>\u8bed\u8a00\u6838\u5fc3</li> <li>\u6807\u51c6\u5e93</li> </ul> </li> <li><code>#include</code> \u628a\u4e0d\u5728\u8bed\u8a00\u6838\u5fc3\u7684\u540d\u79f0\u5305\u542b\u5230\u5f53\u524d\u6587\u4ef6\u4e2d\uff0c\u662f\u9884\u5904\u7406\u6307\u4ee4\u7684\u4e00\u79cd\uff0c\u672c\u8d28\u4e0a\u4f1a\u628a\u5176\u540e\u7684\u6587\u4ef6\u5185\u5bb9\u590d\u5236\u5230\u5f53\u524d\u6587\u4ef6\u6307\u5b9a\u7684\u4f4d\u7f6e</li> <li><code>&lt;iostream&gt;</code> \u8868\u793a\u5bf9\u987a\u5e8f\u6216\u6d41\u8f93\u5165/\u8f93\u51fa\u7684\u652f\u6301</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#03-main","title":"0.3 main \u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u662f\u4e00\u6bb5\u5177\u6709\u540d\u79f0\u7684\u7a0b\u5e8f\u7247\u6bb5</li> <li>C++ \u7a0b\u5e8f\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a <code>main</code> \u51fd\u6570</li> <li>main \u51fd\u6570\u8981\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u7c7b\u578b\u7684\u503c\u4f5c\u4e3a\u7ed3\u679c\uff0c\u96f6\u8868\u793a\u6210\u529f\uff0c\u5176\u4ed6\u4efb\u610f\u610f\u5473\u7740\u7a0b\u5e8f\u8fd0\u884c\u6709\u95ee\u9898</li> <li><code>int</code> \u662f\u8bed\u8a00\u6838\u5fc3\u5185\u7528\u4e8e\u8868\u793a\u6574\u6570\u7684\u540d\u79f0</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#04","title":"0.4 \u82b1\u62ec\u53f7","text":"<ul> <li>C++ \u4e2d\uff0c\u7f16\u8bd1\u5668\u628a\u51fa\u73b0\u5728\u82b1\u62ec\u53f7\u4e4b\u95f4\u7684\u6240\u6709\u5185\u5bb9\u5f53\u4f5c\u4e00\u4e2a\u5355\u5143\u5904\u7406\uff0c\u8fd9\u4e2a\u5355\u5143\u5c31\u662f\u6808\u5e27</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#05","title":"0.5 \u4f7f\u7528\u6807\u51c6\u5e93\u8fdb\u884c\u8f93\u51fa","text":"<ul> <li>\u540d\u5b57\u7a7a\u95f4\u662f\u4e00\u4e2a\u76f8\u5173\u540d\u79f0\u7684\u96c6\u5408</li> <li><code>std::cout</code> \uff1a\u540d\u79f0\u4e4b\u524d\u7684 <code>std::</code> \u8868\u660e <code>cout</code> \u662f\u540d\u4e3a std \u7684\u540d\u5b57\u7a7a\u95f4\u7684\u4e00\u90e8\u5206</li> <li><code>std::cout</code> \u662f\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u6807\u51c6\u8f93\u51fa\u6d41\u662f C++\u5b9e\u73b0\u7528\u6765\u8fdb\u884c\u666e\u901a\u7684\u7a0b\u5e8f\u8f93\u51fa\u7684\u5de5\u5177\u3002\u5728\u7a97\u53e3\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u4e0b\u7684\u4e00\u4e2a\u5178\u578b\u7684 C++ \u5b9e\u73b0\u4e2d\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u7cfb\u7edf\u73af\u5883\u4f1a\u628a\u7a0b\u5e8f\u548c\u4e00\u4e2a\u7a97\u53e3\u8054\u7cfb\u8d77\u6765\uff0c <code>std::cout</code> \u6307\u793a\u4e86\u8fd9\u4e2a\u7a97\u53e3</li> <li><code>std::endl</code>\u8868\u793a\u4e00\u4e2a\u8bed\u53e5\u884c\u7684\u7ed3\u675f\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u540e\u7eed\u8fd8\u6709\u8f93\u51fa\uff0c\u5219\u4f1a\u5728\u65b0\u4e00\u884c\u4e2d\u5f00\u59cb</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#06","title":"0.6 \u8fd4\u56de\u8bed\u53e5","text":"<ul> <li>\u5982 <code>return 0;</code></li> <li>\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5fc5\u987b\u548c\u51fd\u6570\u58f0\u660e\u7684\u8fd4\u56de\u7c7b\u578b\u4e00\u81f4</li> <li>\u63a5\u53d7 main \u7684\u8fd4\u56de\u503c\u7684\u7a0b\u5e8f\u662f C++ \u5b9e\u73b0\u672c\u8eab (\u6709\u70b9\u62bd\u8c61...)</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#07","title":"0.7 \u6df1\u5165\u89c2\u5bdf","text":"<ul> <li>\u8868\u8fbe\u5f0f\u6307\u793a C++ \u7f16\u8bd1\u5668\u5bf9\u67d0\u4e9b\u4e8b\u7269\u8fdb\u884c\u8fd0\u7b97\u3002</li> <li>\u8fd0\u7b97\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7ed3\u679c, \u5e76\u4e14\u53ef\u80fd\u6709\u526f\u4f5c\u7528(\u7c7b\u4f3c python \u4e2d\u7684\u7eaf\u51fd\u6570\u548c\u975e\u7eaf\u51fd\u6570)\uff0c\u526f\u4f5c\u7528\u4e0d\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u989d\u76f4\u63a5\u7ed3\u679c\uff0c\u4f46\u662f\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6216\u7cfb\u7edf\u73af\u5883\u7684\u72b6\u6001\u3002\u5982\u679c\u5728\u8868\u8fbe\u5f0f\u540e\u7d27\u8ddf\u5206\u53f7\uff0c\u8868\u793a\u8ba9\u7cfb\u7edf\u4e22\u6389\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\uff0c\u8868\u793a\u6211\u4eec\u53ea\u5bf9\u8be5\u8868\u8fbe\u5f0f\u7684\u526f\u4f5c\u7528\u5173\u5fc3\u3002</li> <li>\u4f8b\u5982 <code>3 + 4</code> \u8fd9\u4e2a\u8fd0\u7b97\u7684\u7ed3\u679c\u662f 7 \u4f46\u662f\u6ca1\u6709\u526f\u4f5c\u7528\u3002</li> <li>\u8868\u8fbe\u5f0f\u5305\u542b\u8fd0\u7b97\u7b26\u548c\u64cd\u4f5c\u6570</li> <li>\u6bcf\u4e2a\u64cd\u4f5c\u6570\u90fd\u5177\u6709\u7c7b\u578b\uff0c <code>std::cout</code> \u7684\u7c7b\u578b\u5c31\u662f <code>std::ostream</code></li> <li>C++ <ul> <li>\u5185\u5efa\u6a21\u578b\uff0c\u5982 <code>int</code></li> <li>\u8bed\u8a00\u6a21\u578b\u4e4b\u5916\u7684\u5176\u4ed6\u7c7b\u578b</li> </ul> </li> <li><code>std::endl</code> \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u63a7\u5236\u5668</li> <li>\u63a7\u5236\u5668\u7684\u5173\u952e\u6027\u8d28\uff1a\u628a\u63a7\u5236\u5668\u5199\u5230\u6d41\u4e2d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u63a7\u5236\u8fd9\u4e2a\u6d41\u3002</li> <li>\u5c31 <code>std::endl</code> \u800c\u8a00\uff0c\u6211\u4eec\u6240\u4f5c\u7684\u52a8\u4f5c\u662f\u7ed3\u675f\u5f53\u524d\u7684\u8f93\u51fa\u884c</li> <li><code>std::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;</code>\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7c7b\u578b\u4e3a<code>std::ostream</code>\u7684<code>std::cout</code>\u4f5c\u4e3a\u5176\u7ed3\u679c\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fdb\u884c\u94fe\u5f0f\u8c03\u7528\u7684\u539f\u56e0\uff09\uff0c\u4f5c\u4e3a\u526f\u4f5c\u7528\uff0c\u5b83\u4f1a\u5c06 Hello, World! \u5199\u5165\u6807\u51c6\u8f93\u51fa\u4e2d\u5e76\u7ed3\u675f\u5f53\u524d\u8f93\u51fa\u884c\u3002</li> <li>\u4f5c\u7528\u57df\u662f\u7528\u6765\u907f\u514d\u540d\u79f0\u51b2\u7a81\u7684\u624b\u6bb5</li> <li>\u540d\u5b57\u7a7a\u95f4\u4f5c\u7528\u57df\uff1a <code>std::cout</code> \u662f\u4e00\u79cd\u9650\u5b9a\u540d\u79f0\uff0c\u5176\u4e2d <code>::</code> \u662f\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26</li> <li>\u82b1\u62ec\u53f7\u662f\u53e6\u4e00\u79cd\u4f5c\u7528\u57df</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#08","title":"0.8 \u5c0f\u7ed3","text":"<ul> <li>C++\u7a0b\u5e8f\u901a\u5e38\u5177\u6709\u81ea\u7531\u98ce\u683c</li> <li>\u81ea\u7531\u98ce\u683c\uff1a\u9632\u6b62\u76f8\u90bb\u540d\u79f0\u6df7\u5728\u4e00\u8d77\u65f6\u5fc5\u987b\u4f7f\u7528\u7a7a\u767d\u7684\u7f16\u7801\u98ce\u683c</li> <li>\u4e09\u4e2a\u4e0d\u80fd\u5177\u6709\u81ea\u7531\u98ce\u683c\u7684\u4f8b\u5916 (\u4e0d\u53ef\u4ee5\u8de8\u884c)<ul> <li>\u5b57\u7b26\u4e32\u76f4\u63a5\u91cf</li> <li><code>#include</code> \u540d\u79f0</li> <li><code>//</code> \u6ce8\u91ca</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#01-c","title":"01 \u5f00\u59cb\u5b66\u4e60 C++","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#11","title":"1.1 \u8f93\u5165","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main()\n{\n  std::cout &lt;&lt; \"Please enter your first name: \";\n  std::string name;\n  std::cin &gt;&gt; name;\n\n  std::cout &lt;&lt; \"Hello, \" + name + \"!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <ul> <li>\u53d8\u91cf\uff1a\u5177\u6709\u540d\u79f0\u7684\u5bf9\u8c61\u3002\u6709\u7684\u5bf9\u8c61\u53ef\u80fd\u6ca1\u6709\u540d\u79f0\u3002</li> <li>\u5bf9\u8c61\u662f\u8ba1\u7b97\u673a\u4e2d\u4e00\u6bb5\u5177\u6709\u7c7b\u578b\u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> <li>\u5b9a\u4e49\u53d8\u91cf\uff0c\u540d\u79f0 + \u7c7b\u578b\uff0c <code>std::string name</code> \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a <code>std::string</code> \u7684\u53d8\u91cf <code>name</code></li> <li><code>std::string</code> \u5b9a\u4e49\u5728\u6807\u51c6\u5934 <code>&lt;string&gt;</code> \u4e2d\uff0c\u53d8\u91cf name \u5b9a\u4e49\u5728 main \u51fd\u6570\u4e2d\uff0c\u8868\u793a name \u662f\u4e00\u4e2a \u5c40\u90e8\u53d8\u91cf</li> <li>\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u662f\u5927\u62ec\u53f7\u5185</li> <li>\u63a5\u53e3\u662f\u67d0\u7c7b\u578b\u5bf9\u8c61\u53ef\u5b9e\u73b0\u64cd\u4f5c\u7684\u96c6\u5408</li> <li>\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u4e3a<code>string</code>\u7684\u5177\u540d\u5bf9\u8c61 name\uff0c\u5219\u8868\u793a\u80fd\u591f\u5bf9 name \u505a\u5e93\u6240\u5141\u8bb8\u5bf9<code>string</code>\u7c7b\u578b\u5bf9\u8c61\u505a\u7684\u6240\u6709\u64cd\u4f5c</li> <li>\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u662f\u521d\u59cb\u5316\uff0c\u6807\u51c6\u5e93\u8981\u6c42\u6bcf\u4e00\u4e2a<code>string</code>\u7c7b\u578b\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u521d\u59cb\u503c\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e0d\u663e\u793a\u4e3a<code>string</code>\u7c7b\u578b\u5bf9\u8c61\u6307\u5b9a\u503c\uff0c\u5219\u7cfb\u7edf\u73af\u5883\u4f1a\u5bf9\u8be5\u5bf9\u8c61\u8fdb\u884c\u9690\u5f0f\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u7684\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u4e0d\u542b\u4efb\u4f55\u5b57\u7b26\u7684\u7a7a\u4e32\u3002</li> <li>\u8f93\u5165\u8bed\u53e5<ul> <li>\u5c31<code>std::cin &gt;&gt; name</code>\u800c\u8a00\uff0c<code>&gt;&gt;</code>\u8fd0\u7b97\u7b26\u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u5b58\u50a8\u5728 name \u53d8\u91cf\u4e2d\u3002\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u662f<code>std::cin</code>\uff0c\u8fd9\u8868\u660e\u5176\u4e5f\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u3002</li> <li>\u5b83\u4f1a\u7565\u53bb\u8f93\u5165\u5f00\u59cb\u6240\u78b0\u5230\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u4f8b\u5982\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u7b49\u7b49\uff09\uff0c\u4e4b\u540e\u4f1a\u8fde\u7eed\u8bfb\u5165\u5b57\u7b26\u5230\u53d8\u91cf name \u4e2d\uff0c\u76f4\u5230\u9047\u5230\u5176\u4ed6\u7a7a\u767d\u5b57\u7b26\u6216\u6587\u4ef6\u7ed3\u675f\u6807\u8bb0\u3002</li> </ul> </li> <li>\u7f13\u51b2\u533a(buffer)<ul> <li>\u901a\u5e38\uff0c\u8f93\u5165/\u8f93\u51fa\u64cd\u4f5c\u4f1a\u5c06\u5b83\u7684\u8f93\u51fa\u4fdd\u5b58\u5728\u7f13\u51b2\u533a\u8fd9\u6837\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\u4e2d\u3002</li> <li>\u7f13\u51b2\u533a\u662f\u7528\u6765\u4f18\u5316\u8f93\u51fa\u64cd\u4f5c\u7684\uff0c\u53ea\u6709\u5728\u5fc5\u8981\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u624d\u4f1a\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u5230\u8f93\u51fa\u88c5\u7f6e\u4e2d\uff0c\u4ece\u800c\u5237\u65b0\u7f13\u51b2\u533a\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u8f93\u51fa\u64cd\u4f5c\u5408\u5e76\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u5199\u64cd\u4f5c\u4e2d\u4e86\u3002</li> <li>\u7f13\u51b2\u533a\u5237\u65b0<ul> <li>\u7f13\u51b2\u533a\u6ee1\u4e86</li> <li>\u8bf7\u6c42\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u6570\u636e</li> <li>\u660e\u786e\u8981\u6c42\u5237\u65b0\uff0c\u5982 <code>std::flush</code> , <code>std::endl</code></li> </ul> </li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#12","title":"1.2 \u4e3a\u59d3\u540d\u88c5\u6846","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main()\n{\n  std::cout &lt;&lt; \"Please enter your first name: \";\n  std::string name;\n  std::cin &gt;&gt; name;\n\n    const std::string greeting = \"Hello, \" + name + \"!\";\n  const std::string spaces(greeting.size(), ' ');\n  const std::string second = \"* \" + spaces + \" *\";\n  const std::string first(second.size(), '*');\n\n\n  std::cout &lt;&lt; std::endl;\n  std::cout &lt;&lt; first &lt;&lt; std::endl;\n  std::cout &lt;&lt; second &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"* \" + greeting + \" *\" &lt;&lt; std::endl;\n  std::cout &lt;&lt; second &lt;&lt; std::endl;\n  std::cout &lt;&lt; first &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <ul> <li>C++ \u5141\u8bb8\u4f7f\u7528<code>+</code>\u8fde\u63a5\u4e00\u4e2a\u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u76f4\u63a5\u91cf\u6216\u4e24\u4e2a\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff1a<code>\"Hello, \" + name + \"!\"</code>\u3002</li> <li>\u4f46 <code>+</code> \u4e0d\u5141\u8bb8\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f4\u63a5\u91cf\u3002\u5982 <code>cout &lt;&lt; \"hello,\" + \"world\" &lt;&lt; end;</code> (error!!)</li> <li>\u8fd0\u7b97\u7b26\u91cd\u8f7d: \u5982\u679c\u4e00\u4e2a\u8fd0\u7b97\u7b26\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u64cd\u4f5c\u6570\u6765\u8bf4\u5177\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u88ab\u91cd\u8f7d\u4e86\uff0c\u672c\u4f8b\u4e2d <code>+</code> \u53ef\u4ee5\u7528\u4e8e\u6570\u5b66\u8ba1\u7b97\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\uff0c\u6240\u4ee5 <code>+</code> \u88ab\u91cd\u8f7d\u4e86\u3002</li> <li><code>const</code> : \u7528\u4e8e\u8868\u793a\u5e38\u91cf\u7684\u5173\u952e\u5b57\uff0c\u5bf9\u5e38\u91cf\u5b9a\u4e49\u7684\u540c\u65f6\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5426\u5219\u5c06\u4e0d\u4f1a\u518d\u6709\u673a\u4f1a\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u7cfb\u7edf\u73af\u5883\u4f1a\u5bf9<code>string</code>\u7c7b\u578b\u5bf9\u8c61\u8fdb\u884c\u9690\u5f0f\u521d\u59cb\u5316\uff0c\u800c\u5e38\u91cf\u7684\u503c\u4e0d\u5141\u8bb8\u4fee\u6539\u3002</li> <li>\u53e6\u5916\u6ce8\u610f\u5230 <code>const std::string greeting = \"Hello, \" + name + \"!\"</code> \uff0c\u8fd9\u8868\u793a\u5bf9\u5e38\u91cf\u7684\u521d\u59cb\u5316\u503c\u4e0d\u5fc5\u662f\u4e00\u4e2a\u5e38\u91cf\u3002(name \u662f\u53d8\u91cf)</li> <li>\u6210\u5458\u51fd\u6570\uff1a <code>greeting.size()</code> , <code>string</code> \u7c7b\u578b\u5bf9\u8c61\u5185\u90e8\u6709\u4e00\u4e2a\u6210\u5458 size \u51fd\u6570</li> <li>\u5b57\u7b26\u76f4\u63a5\u91cf\uff1a \u5355\u5f15\u53f7 <code>' '</code> \u7528\u6765\u8868\u793a\u5b57\u7b26\u76f4\u63a5\u91cf\u3002\u5176\u6240\u5bf9\u5e94\u7684\u5185\u5efa\u7c7b\u578b\u4e3a <code>char</code> \u3002</li> <li>C++ \u5141\u8bb8\u6839\u636e\u4e00\u4e2a\u6574\u6570\u503c\u548c\u4e00\u4e2a\u5b57\u7b26\u503c\u6765\u6784\u9020\u5b57\u7b26\u4e32\u3002</li> <li>\u4f8b\u5982<code>std::string stars(10, '*')</code>\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u670910\u4e2a<code>'*'</code>\u5b57\u7b26\u7684\u5b57\u7b26\u4e32 starts \u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#13","title":"1.3 \u5c0f\u7ed3","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#02","title":"02 \u5faa\u73af\u548c\u8ba1\u6570","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#21","title":"2.1 \u95ee\u9898","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n// say what standard-library names we use\nusing std::cin;         using std::endl;\nusing std::cout;        using std::string;\n\n\nint main()\n{\n    // ask for the person's name\n    cout &lt;&lt; \"Please enter your first name: \";\n\n    // read the name\n    string name;\n    cin &gt;&gt; name;\n\n    // build the message that we intend to write\n    const string greeting = \"Hello, \" + name + \"!\";\n\n    // the number of blanks surrounding the greeting\n    const int pad = 1;\n\n    // the number of rows and columns to write\n    const int rows = pad * 2 + 3;\n    const string::size_type cols = greeting.size() + pad * 2 + 2;\n\n    // write a blank line to separate the output from the input\n    cout &lt;&lt; endl;\n\n    // write `rows' rows of output\n    // invariant: we have written `r' rows so far\n    for (int r = 0; r != rows; ++r) {\n\n        string::size_type c = 0;\n\n        // invariant: we have written `c' characters so far in the current row\n        while (c != cols) {\n\n            // is it time to write the greeting?\n            if (r == pad + 1 &amp;&amp; c == pad + 1) {\n                cout &lt;&lt; greeting;\n                c += greeting.size();\n            } else {\n\n                // are we on the border?\n                if (r == 0 || r == rows - 1 ||\n                    c == 0 || c == cols - 1)\n                    cout &lt;&lt; \"*\";\n                else\n                    cout &lt;&lt; \" \";\n                ++c;\n            }\n        }\n\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#22","title":"2.2 \u7a0b\u5e8f\u7684\u6574\u4f53\u7ed3\u6784","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#23","title":"2.3 \u8f93\u51fa\u6570\u76ee\u672a\u77e5\u7684\u884c","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#24","title":"2.4 \u8f93\u51fa\u4e00\u884c","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#25","title":"2.5 \u5b8c\u6574\u7684\u6846\u67b6\u7a0b\u5e8f","text":"<ul> <li>using \u58f0\u660e\uff1a <code>using std::cout</code>\u8fd9\u4e2a\u58f0\u660e\u53ef\u4ee5\u5b9e\u73b0\u4ec5\u4e00\u6b21\u7684\u8bf4\u660e<code>cout</code>\u8fd9\u4e2a\u540d\u79f0\u662f\u6765\u81ea\u4e8e<code>std</code>\u8fd9\u4e2a\u540d\u79f0\u7a7a\u95f4\u7684\uff0c\u4ece\u800c\u907f\u514d\u91cd\u590d\u4f7f\u7528<code>std::</code>\uff0c\u5f53\u7136\u8fd9\u540c\u65f6\u9690\u542b\u7740 \" \u6211\u4eec\u4e0d\u4f1a\u5b9a\u4e49\u81ea\u5df1\u7684<code>cout</code>\u00a0\" \u8fd9\u4e00\u4fe1\u606f</li> <li>\u4f7f\u7528<code>using</code>\u58f0\u660e\u7684\u540d\u79f0\u4e0e\u5176\u4ed6\u540d\u79f0\u5177\u6709\u540c\u6837\u7684\u7279\u6027\uff0c\u4f8b\u5982\u5728\u5927\u62ec\u53f7\u4e2d\u4f7f\u7528<code>using</code>\u58f0\u660e\u7684\u540d\u79f0\u5176\u751f\u5b58\u671f\u81ea\u5b9a\u4e49\u5f00\u59cb\uff0c\u5230\u5927\u62ec\u53f7\u7ed3\u675f\u3002</li> <li>\u77ed\u8def\u73b0\u8c61\uff1a<ul> <li><code>condition1 || condition2</code> ,\u5982\u679c condition1 \u4e3a\u771f\uff0c\u540e\u7eed\u4e0d\u518d\u6267\u884c</li> <li><code>condition1 &amp;&amp; condition2</code> ,\u5982\u679c condition1 \u4e3a\u5047\uff0c\u540e\u7eed\u4e0d\u518d\u6267\u884c</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#26","title":"2.6 \u8ba1\u6570","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#27","title":"2.7 \u5c0f\u7ed3","text":"<ul> <li>\u64cd\u4f5c\u6570\u7ec4\u5408\u65b9\u5f0f--\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\u51b3\u5b9a\u3002</li> <li>\u64cd\u4f5c\u6570\u600e\u6837\u88ab\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b</li> <li>\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u6b21\u5e8f</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#03","title":"03 \u4f7f\u7528\u6279\u91cf\u6570\u636e","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;ios&gt;\n#include &lt;iomanip&gt;\nusing std::cout; using std::string; \nusing std::cin; using std::endl; \nusing std::streamsize;  using std::setprecision;\n\nint main()\n{\n  cout &lt;&lt; \"Please enter your first name: \";\n  string name;\n  cin &gt;&gt; name;\n  cout &lt;&lt; \"Hello, \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; endl;\n\n  cout &lt;&lt; \"Please enter your midterm and final exam grades: \";\n  double midterm, final;\n  cin &gt;&gt; midterm &gt;&gt; final;\n\n  cout &lt;&lt; \"Enter all your homework grades, \"\n          \"followed by end-of-file: \";\n  int count = 0;\n  double sum = 0;\n  double x;\n  while (cin &gt;&gt; x) {\n    ++count;\n    sum += x;\n  }\n\n  streamsize prec = cout.precision();\n  cout &lt;&lt; \"Your final grade is \" &lt;&lt; setprecision(3)\n       &lt;&lt; 0.2 * midterm + 0.4 * final + 0.4 * sum / count\n       &lt;&lt; setprecision(prec) &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#31","title":"3.1 \u8ba1\u7b97\u5b66\u751f\u6210\u7ee9","text":"<ul> <li>\u4e24\u4e2a\u4ee5\u4e0a\u5b57\u7b26\u4e32\u76f4\u63a5\u91cf\u4ec5\u4ec5\u88ab\u7a7a\u767d\u7b26\u5206\u9694\u5f00\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u4e32\u76f4\u63a5\u91cf\u5c31\u4f1a\u88ab\u81ea\u52a8\u8fde\u63a5\u5230\u4e00\u8d77\u3002</li> </ul> C++<pre><code>cout &lt;&lt; \"Enter all your homework grades, \"\n          \"followed by end-of-file: \";\n</code></pre> <p>\u548c</p> C++<pre><code>cout &lt;&lt; \"Enter all your homework grades, followed by end-of-file: \";\n</code></pre> <p>\u7b49\u4ef7\u3002</p> <ul> <li>\u7f3a\u7701\u521d\u59cb\u5316<ul> <li>\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f8b\u5982<code>string</code>\uff0c\u5f53\u6211\u4eec\u5728\u58f0\u660e\u8be5\u7c7b\u578b\u53d8\u91cf\u7684\u540c\u65f6\u4e0d\u8fdb\u884c\u521d\u59cb\u5316\u8d4b\u503c\u64cd\u4f5c\uff0c\u5219\u8be5\u7c7b\u578b\u4f1a\u81ea\u52a8\u7684\u88ab\u9690\u542b\u521d\u59cb\u5316\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002</li> <li>\u4f46\u662f\u5b9a\u4e49\u5185\u7f6e\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u63d0\u4f9b\u8be5\u4fbf\u5229\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5728\u5b9a\u4e49\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u624b\u52a8\u4e3a\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\u3002</li> <li>\u9519\u8bef\u6307\uff1a\u7cfb\u7edf\u7ed9\u8fd9\u4e9b\u53d8\u91cf\u5206\u914d\u9002\u5f53\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u53d8\u91cf\u7684\u503c\u5c31\u6709\u8fd9\u4e9b\u5355\u5143\u4e2d\u7684\u968f\u673a\u4fe1\u606f\u7ec4\u6210\u3002</li> </ul> </li> <li><code>setprecision</code><ul> <li>\u4f4d\u4e8e\u5934\u6587\u4ef6<code>&lt;iomanip&gt;</code>\u4e2d\uff0c\u7528\u4e8e\u6307\u660e\u8f93\u51fa\u6240\u5305\u542b\u7684\u6709\u6548\u4f4d\u6570\u3002</li> <li>\u662f\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u4e3a\u6d41\u7684\u540e\u7ee7\u8f93\u51fa\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u6709\u6548\u4f4d\u6570</li> </ul> </li> <li><code>streamsize</code><ul> <li>\u4f4d\u4e8e\u5934\u6587\u4ef6<code>&lt;ios&gt;</code>\u4e2d\uff0c\u8f93\u5165\u8f93\u51fa\u4f7f\u7528\u8be5\u7c7b\u578b\u8868\u793a\u957f\u5ea6</li> </ul> </li> <li><code>precision</code> <ul> <li>cout \u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u8fd4\u56de\u6d41\u5728\u8f93\u51fa\u6d6e\u70b9\u6570\u65f6\u6240\u4f7f\u7528\u7684\u7cbe\u5ea6\u3002</li> </ul> </li> <li><code>cin &gt;&gt; x</code> \u4f5c\u4e3a\u6761\u4ef6\uff1a<ul> <li>\u7c7b istream \u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f6c\u6362\u6765\u628a cin \u8f6c\u6362\u6210\u4e00\u4e2a\u53ef\u4ee5\u5728\u6761\u4ef6\u4e2d\u4f7f\u7528\u7684\u503c\u3002</li> <li>\u7528 cin \u4f5c\u4e3a\u6761\u4ef6\u7b49\u4ef7\u4e8e\u68c0\u6d4b\u6700\u8fd1\u4e00\u6b21\u4ece cin \u8bfb\u6570\u636e\u7684\u5c1d\u8bd5\u662f\u5426\u6210\u529f\u3002</li> <li>\u4ee5\u4e0b\u60c5\u51b5\u53ef\u80fd\u4f1a\u5931\u8d25<ul> <li>\u5230\u8fbe\u8f93\u5165\u6587\u4ef6\u7684\u672b\u5c3e</li> <li>\u8f93\u5165\u548c\u8bd5\u56fe\u8bfb\u53d6\u7684\u53d8\u91cf\u4e0d\u4e00\u81f4</li> <li>\u7cfb\u7edf\u5728\u8f93\u5165\u88c5\u7f6e\u4e2d\u68c0\u6d4b\u5230\u4e00\u4e2a\u786c\u4ef6\u95ee\u9898</li> </ul> </li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#32","title":"3.2 \u4e2d\u503c\u4ee3\u66ff\u5e73\u5747\u503c","text":"C++<pre><code>#include &lt;algorithm&gt;\n#include &lt;iomanip&gt;\n#include &lt;ios&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nusing std::cin;             using std::sort;\nusing std::cout;            using std::streamsize;\nusing std::endl;            using std::string;\nusing std::setprecision;    using std::vector;\n\nint main()\n{\n    // ask for and read the student's name\n    cout &lt;&lt; \"Please enter your first name: \";\n    string name;\n    cin &gt;&gt; name;\n    cout &lt;&lt; \"Hello, \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; endl;\n\n    // ask for and read the midterm and final grades\n    cout &lt;&lt; \"Please enter your midterm and final exam grades: \";\n    double midterm, final;\n    cin &gt;&gt; midterm &gt;&gt; final;\n\n    // ask for and read the homework grades\n    cout &lt;&lt; \"Enter all your homework grades, \"\n            \"followed by end-of-file: \";\n\n    vector&lt;double&gt; homework;\n    double x;\n    // invariant: `homework' contains all the homework grades read so far\n    while (cin &gt;&gt; x)\n        homework.push_back(x);\n\n    // check that the student entered some homework grades\n    typedef vector&lt;double&gt;::size_type vec_sz;\n    vec_sz size = homework.size();\n    if (size == 0) {\n        cout &lt;&lt; endl &lt;&lt; \"You must enter your grades.  \"\n                        \"Please try again.\" &lt;&lt; endl;    \n        return 1;\n    }\n\n    // sort the grades\n    sort(homework.begin(), homework.end());\n\n    // compute the median homework grade\n    vec_sz mid = size/2;\n    double median;\n    median = size % 2 == 0 ? (homework[mid] + homework[mid-1]) / 2\n                           : homework[mid];\n\n    // compute and write the final grade\n    streamsize prec = cout.precision();\n    cout &lt;&lt; \"Your final grade is \" &lt;&lt; setprecision(3)\n         &lt;&lt; 0.2 * midterm + 0.4 * final + 0.4 * median\n         &lt;&lt; setprecision(prec) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <ul> <li>\u4e2d\u503c\u907f\u514d\u4e86\u4e00\u4e9b\u7cdf\u7cd5\u7684\u6210\u7ee9\u8ba9\u5e73\u5747\u6210\u7ee9\u4e0b\u964d\u592a\u591a</li> <li><code>vector</code> \u7c7b\u578b\u8868\u793a\u5411\u91cf\uff0c\u957f\u5ea6\u53ef\u53d8</li> <li><code>vector&lt;double&gt;::size_type</code> \u662f\u4e00\u4e2a unsigned \u7c7b\u578b\uff0c\u4fdd\u5b58\u5411\u91cf\u957f\u5ea6\u3002</li> <li><code>type_def</code> \u628a vec_sz \u8bbe\u7f6e\u6210\u4e86 <code>vector&lt;double&gt;::size_type</code> \u7684\u66ff\u4ee3\u540d</li> <li>sort -- \u6392\u5e8f</li> <li>\u666e\u901a\u6574\u6570\u548c\u65e0\u7b26\u53f7\u6574\u6570\u7ed3\u5408\uff0c\u666e\u901a\u6574\u6570\u4f1a\u88ab\u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u6574\u6570</li> <li>C++ \u5f3a\u8c03\u901f\u5ea6\uff0c\u4e3a\u6ce8\u91cd\u6027\u80fd\u7684\u5e94\u7528\u670d\u52a1</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#04_1","title":"04 \u7ec4\u7ec7\u7a0b\u5e8f\u548c\u6570\u636e","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#41","title":"4.1 \u7ec4\u7ec7\u8ba1\u7b97","text":"C++<pre><code>#include &lt;stdexcept&gt;\n#include &lt;vector&gt;\n#include \"grade.h\"\n#include \"median.h\"\n#include \"Student_info.h\"\n\nusing std::domain_error;  using std::vector;\n\n\n// compute a student's overall grade from midterm and final exam grades and homework grade\ndouble grade(double midterm, double final, double homework)\n{\n    return 0.2 * midterm + 0.4 * final + 0.4 * homework;\n}\n\n// compute a student's overall grade from midterm and final exam grades\n// and vector of homework grades.\n// this function does not copy its argument, because `median' does so for us.\ndouble grade(double midterm, double final, const vector&lt;double&gt;&amp; hw)\n{\n    if (hw.size() == 0)\n        throw domain_error(\"student has done no homework\");\n    return grade(midterm, final, median(hw));\n}\n\ndouble grade(const Student_info&amp; s)\n{\n    return grade(s.midterm, s.final, s.homework);\n}\n</code></pre> <ul> <li>\u6309\u503c\u8c03\u7528: \u53c2\u6570\u83b7\u5f97\u7684\u53ea\u662f\u53c2\u6570\u503c\u7684\u4e00\u4e2a\u590d\u5236\uff0c<code>double grade(double midterm, double final, double homework)</code></li> <li>\u5f15\u7528\uff1a <code>vector&lt;double&gt;&amp; hw</code> \u5bf9 hw \u64cd\u4f5c\u76f8\u5f53\u4e8e\u5bf9 homework \u64cd\u4f5c</li> <li>\u5f02\u5e38\uff1a </li> </ul> C++<pre><code>if (hw.size() == 0)\n        throw domain_error(\"student has done no homework\");\n</code></pre> <ul> <li>\u5982\u679c\u5411\u91cf\u4e3a\u7a7a\u5c31\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u7a0b\u5e8f\u4f1a\u5728\u629b\u51fa\u5f02\u5e38\u7684\u5730\u65b9\u4e2d\u6b62\u6267\u884c\u5e76\u8f6c\u79fb\u5230\u7a0b\u5e8f\u7684\u53e6\u4e00\u90e8\u5206(\u7c7b\u4f3cpython \u4e2d\u7684 try-except \u8bed\u53e5)\uff0c\u5e76\u5411\u8fd9\u4e00\u90e8\u5206\u63d0\u4f9b\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61</li> <li><code>domain_error</code> \u544a\u8bc9\u6211\u4eec\u53d6\u503c\u6709\u95ee\u9898\uff0c\u6211\u4eec\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u63cf\u8ff0\u9519\u8bef\u4fe1\u606f</li> <li>\u5de6\u503c\u53c2\u6570\uff1a\u6307\u793a\u975e\u4e34\u65f6\u53d8\u91cf\u7684\u503c</li> </ul> <p>\u8bfb\u53d6\u903b\u8f91\u4f18\u5316</p> C++<pre><code>// read homework grades from an input stream into a `vector&lt;double&gt;'\nistream&amp; read_hw(istream&amp; in, vector&lt;double&gt;&amp; hw)\n{\n    if (in) {\n        // get rid of previous contents\n        hw.clear();\n\n        // read homework grades\n        double x;\n        while (in &gt;&gt; x)\n            hw.push_back(x);\n\n        // clear the stream so that input will work for the next student\n        in.clear(); // avoid failure by wrong input\n    }\n    return in;\n}\n</code></pre> <ul> <li><code>vector&lt;double&gt;&amp; hw</code> \u662f\u5f15\u7528\uff0c\u8282\u7701\u4e86\u590d\u5236\u7684\u5f00\u9500</li> <li>\u4e09\u79cd\u53c2\u6570\u7c7b\u578b<ul> <li><code>vector&lt;double&gt;</code> </li> <li><code>const vector&lt;double&gt;</code></li> <li><code>vector&lt;double&gt;&amp;</code></li> </ul> </li> <li><code>try-catch</code> \u8bed\u53e5\u793a\u4f8b</li> </ul> C++<pre><code>try {\n        double final_grade = grade(midterm, final, homework);\n        streamsize prec = cout.precision();\n        cout &lt;&lt; \"Your final grade is \" &lt;&lt; setprecision(3)\n             &lt;&lt; final_grade &lt;&lt; setprecision(prec) &lt;&lt; endl;\n    } catch (domain_error) {\n        cout &lt;&lt; endl &lt;&lt; \"You must enter your grades.  \"\n            \"Please try again.\" &lt;&lt; endl;\n        return 1;\n    }\n</code></pre> <ul> <li>\u4fdd\u8bc1\u4e00\u6761\u8bed\u53e5\u7684\u526f\u4f5c\u7528\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e00\u4e2a\uff0c\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u662f\u4e00\u4e2a\u526f\u4f5c\u7528\uff0c\u56e0\u6b64\u5728\u4e00\u6761\u53ef\u80fd\u4f1a\u5f15\u53d1\u5f02\u5e38\u7684\u8bed\u53e5\u4e2d\u4e0d\u5e94\u8be5\u518d\u51fa\u73b0\u4efb\u4f55\u5176\u4ed6\u7684\u526f\u4f5c\u7528\uff0c\u5c24\u5176\u662f\u54ea\u4e9b\u5305\u542b\u6709\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8bed\u53e5\u3002\u4e0a\u9762\u7684\u8bed\u53e5\u6ee1\u8db3\u4e86\u8fd9\u4e2a\u8981\u6c42\uff0c\u6ca1\u6709\u628a final_grade \u653e\u5165\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\u4e2d\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#42","title":"4.2 \u7ec4\u7ec7\u6570\u636e","text":"C++<pre><code>int main()\n{\n    vector&lt;Student_info&gt; students;\n    student_info record;\n    string::size_type maxlen = 0;\n\n    //\u8bfb\u5e76\u5b58\u50a8\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u7136\u540e\u627e\u51fa\u6700\u957f\u7684\u59d3\u540d\u7684\u957f\u5ea6\n    while(read(cin, record))\n    {\n        maxlen = max(maxlen, record.name.size());\n        students.push_back(record);\n    }\n\n    //\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u8bb0\u5f55\n    sort(Students.begin(), students.end(), compare);\n    for (vector&lt;Student_info&gt;::size_type i = 0; i != students.size(); i++)\n    {\n        //\u8f93\u51fa\u59d3\u540d\uff0c\u586b\u5145\u59d3\u540d\u4ee5\u8fbe\u5230maxlen + 1\u7684\u957f\u5ea6\n        cout &lt;&lt; setw(maxlen + 1) &lt;&lt; students[i].name;\n    }\n\n    //\u8ba1\u7b97\u5e76\u8f93\u51fa\u6210\u7ee9\n    try\n    {\n        double final_grade = grade(students[i]);\n        streamsize prec = cout.precision();\n        cout &lt;&lt; setprecision(3) &lt;&lt; final_grade &lt;&lt; setprecision(prec);\n    }\n    catch(domain_error e){\n        cout &lt;&lt; e.what();\n    }\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <ul> <li>max \u51fd\u6570\u5728 <code>algorithm</code> \u4e2d\u5b9a\u4e49</li> <li>e \u662f\u5f02\u5e38\u7684\u540d\u79f0\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8f93\u51fa what() \u4e2d\u7684\u4fe1\u606f\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#43","title":"4.3 \u628a\u5404\u90e8\u5206\u4ee3\u7801\u8fde\u63a5\u5230\u4e00\u8d77","text":"<ul> <li>\u7ec4\u88c5 median \u51fd\u6570</li> </ul> C++<pre><code>// median \u51fd\u6570\u7684\u6e90\u6587\u4ef6 -- median.cpp\n#include &lt;algorithm&gt;    // to get the declaration of `sort'\n#include &lt;stdexcept&gt;    // to get the declaration of `domain_error'\n#include &lt;vector&gt;       // to get the declaration of `vector'\n\nusing std::domain_error;   using std::sort;   using std::vector;\n\n#include \"median.h\"\n\n// compute the median of a `vector&lt;double&gt;'\n// note that calling this function copies the entire argument `vector'\ndouble median(vector&lt;double&gt; vec)\n{\n    typedef vector&lt;double&gt;::size_type vec_sz;\n\n    vec_sz size = vec.size();\n    if (size == 0)\n        throw domain_error(\"median of an empty vector\");\n\n    sort(vec.begin(), vec.end());\n\n    vec_sz mid = size/2;\n\n    return size % 2 == 0 ? (vec[mid] + vec[mid-1]) / 2 : vec[mid];\n}\n</code></pre> <ul> <li>\u9700\u8981\u5305\u542b median \u51fd\u6570\u4f7f\u7528\u7684\u6240\u6709\u540d\u79f0\u7684\u58f0\u660e\u3002</li> <li>\u5982\u4f55\u5728\u522b\u7684\u6587\u4ef6\u4f7f\u7528 median \u51fd\u6570</li> </ul> C++<pre><code>#include \"median.h\"\nint main {/* */}\n</code></pre> <ul> <li>\u81ea\u5df1\u7684\u6587\u4ef6\u79f0\u4f5c\u5934\u6587\u4ef6\uff0c\u7cfb\u7edf\u73af\u5883\u63d0\u4f9b\u7684\u5934\u6587\u4ef6\u79f0\u4f5c\u6807\u51c6\u5934</li> </ul> C++<pre><code>//median.h \u6700\u7ec8\u5f62\u5f0f\n#ifndef GUARD_median_h\n#define GUARD_median_h\n#include &lt;vector&gt;\ndouble median(std::vector&lt;double&gt;);\n\n#endif\n</code></pre> <ul> <li>\u5934\u6587\u4ef6\u5e94\u8be5\u6709\u4ec0\u4e48<ul> <li>median \u7684\u58f0\u660e<ul> <li>\u4fdd\u8bc1 vector \u53ef\u7528\uff0c\u6240\u4ee5\u8981\u6709 vector \u5934</li> <li>\u5934\u6587\u4ef6\u5e94\u8be5\u4f7f\u7528\u5b8c\u6574\u7684\u9650\u5b9a\u540d\u800c\u4e0d\u662f using \u58f0\u660e</li> </ul> </li> <li><code>#ifndef</code> \u68c0\u67e5 median.h \u662f\u5426\u88ab\u91cd\u590d\u5305\u542b\uff0c\u5fc5\u987b\u4f4d\u4e8e\u6587\u4ef6\u7684\u7b2c\u4e00\u884c</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#44","title":"4.4 \u628a\u8ba1\u7b97\u6210\u7ee9\u7684\u7a0b\u5e8f\u5206\u5757","text":"C++<pre><code>#ifndef GUARD_Student_info\n#define GUARD_Student_info\n\n// `Student_info.h' \u5934\u6587\u4ef6\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nstruct Student_info {\n    std::string name;\n    double midterm, final;\n    std::vector&lt;double&gt; homework;\n};\n\nbool compare(const Student_info&amp;, const Student_info&amp;);\nstd::istream&amp; read(std::istream&amp;, Student_info&amp;);\nstd::istream&amp; read_hw(std::istream&amp;, std::vector&lt;double&gt;&amp;);\n#endif\n</code></pre> C++<pre><code>// median.cpp \u6e90\u6587\u4ef6\n#include \"Student_info.h\"\n\nusing std::istream;  using std::vector;\n\nbool compare(const Student_info&amp; x, const Student_info&amp; y)\n{\n    return x.name &lt; y.name;\n}\n\nistream&amp; read(istream&amp; is, Student_info&amp; s)\n{\n    // read and store the student's name and midterm and final exam grades\n    is &gt;&gt; s.name &gt;&gt; s.midterm &gt;&gt; s.final;\n\n    read_hw(is, s.homework);  // read and store all the student's homework grades\n    return is;\n}\n\n// read homework grades from an input stream into a `vector&lt;double&gt;'\nistream&amp; read_hw(istream&amp; in, vector&lt;double&gt;&amp; hw)\n{\n    if (in) {\n        // get rid of previous contents\n        hw.clear();\n\n        // read homework grades\n        double x;\n        while (in &gt;&gt; x)\n            hw.push_back(x);\n\n        // clear the stream so that input will work for the next student\n        in.clear();\n    }\n    return in;\n}\n</code></pre> <ul> <li>\u6e90\u6587\u4ef6\u4e2d\u5305\u542b\u5934\u6587\u4ef6\u53ef\u4ee5\u68c0\u67e5\u58f0\u660e\u548c\u5b9a\u4e49\u662f\u5426\u4e00\u81f4</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#45","title":"4.5 \u4fee\u6b63\u540e\u7684\u8ba1\u7b97\u6210\u7ee9\u7684\u7a0b\u5e8f","text":"C++<pre><code>#include &lt;algorithm&gt;\n#include &lt;iomanip&gt;\n#include &lt;ios&gt;\n#include &lt;iostream&gt;\n#include &lt;stdexcept&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include \"grade.h\"\n#include \"Student_info.h\"\n\nusing std::cin;                     using std::setprecision;\nusing std::cout;                    using std::sort;\nusing std::domain_error;            using std::streamsize;\nusing std::endl;                    using std::string;\nusing std::max;                     using std::vector;\n\nint main()\n{\n    vector&lt;Student_info&gt; students;\n    Student_info record;\n    string::size_type maxlen = 0;       // the length of the longest name\n\n    // read and store all the students' data.\n    // Invariant:   `students' contains all the student records read so far\n    //          `maxlen' contains the length of the longest name in `students'\n    while (read(cin, record)) {\n        // find length of longest name\n        maxlen = max(maxlen, record.name.size());\n        students.push_back(record);\n    }\n\n    // alphabetize the student records\n    sort(students.begin(), students.end(), compare);\n\n    // write the names and grades\n    for (vector&lt;Student_info&gt;::size_type i = 0;\n         i != students.size(); ++i) {\n\n        // write the name, padded on the right to `maxlen' `+' `1' characters\n        cout &lt;&lt; students[i].name\n             &lt;&lt; string(maxlen + 1 - students[i].name.size(), ' ');\n\n        // compute and write the grade\n        try {\n            double final_grade = grade(students[i]);\n            streamsize prec = cout.precision();\n            cout &lt;&lt; setprecision(3) &lt;&lt; final_grade\n                 &lt;&lt; setprecision(prec);\n        } catch (domain_error e) {\n            cout &lt;&lt; e.what();\n        }\n        cout &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#46","title":"4.6 \u5c0f\u7ed3","text":"<ul> <li><code>#include &lt;\u7cfb\u7edf\u5934&gt;</code> \uff1a\u7cfb\u7edf\u5934\u53ef\u80fd\u4e0d\u662f\u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u5b9e\u73b0\u7684</li> <li><code>#include \"\u81ea\u5b9a\u4e49\u5934\u6587\u4ef6\"</code> \uff1a\u901a\u5e38\u6709\u540e\u7f00 <code>.h</code></li> <li>\u7ed3\u6784\u7684\u5b9a\u4e49\u5728\u6bcf\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u53ea\u53ef\u4ee5\u51fa\u73b0\u4e00\u6b21\uff0c\u56e0\u6b64\u5b83\u5e94\u8be5\u51fa\u73b0\u5728\u4e00\u4e2a\u6709\u9002\u5f53\u9632\u62a4\u63aa\u65bd\u7684\u5934\u6587\u4ef6\u4e2d\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#05_1","title":"05 \u4f7f\u7528\u987a\u5e8f\u5bb9\u5668\u5e76\u5206\u6790\u5b57\u7b26\u4e32","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#51","title":"5.1 \u6309\u7c7b\u522b\u6765\u533a\u5206\u5b66\u751f","text":"<ul> <li>\u5728\u9664\u4e86\u5411\u91cf\u7ed3\u5c3e\u7684\u5176\u4ed6\u5730\u65b9\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u7684\u5f00\u9500\u53ef\u80fd\u4f1a\u5f88\u5927</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#52","title":"5.2 \u8fed\u4ee3\u5668","text":"<ul> <li>\u8fed\u4ee3\u5668(iterator)\u80fd\u591f<ul> <li>\u8bc6\u522b\u4e00\u4e2a\u5bb9\u5668\u4ee5\u53ca\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20</li> <li>\u68c0\u67e5\u5b58\u50a8\u5728\u8fd9\u4e2a\u5143\u7d20\u4e2d\u7684\u503c</li> <li>\u63d0\u4f9b\u64cd\u4f5c\u6765\u79fb\u52a8\u5728\u5bb9\u5668\u4e2d\u7684\u5143\u7d20</li> <li>\u91c7\u7528\u5bf9\u5e94\u4e8e\u5bb9\u5668\u6240\u80fd\u591f\u6709\u6548\u5904\u7406\u7684\u65b9\u5f0f\u6765\u5bf9\u53ef\u7528\u7684\u64cd\u4f5c\u8fdb\u884c\u7ea6\u675f</li> </ul> </li> </ul> C++<pre><code>for (vector&lt;Student_info&gt;::size_type i = 0; i!= students.sizes(); ++i) \n    cout &lt;&lt; students[i].name &lt;&lt; endl;\n// OR\nfor (vector&lt;Student_info&gt;::const_iterator iter = students.begin(); iter != students.end(); ++iter)\n    cout &lt;&lt; (*iter).name &lt;&lt; endl;\n</code></pre> <ul> <li>\u6bcf\u4e00\u4e2a\u6807\u51c6\u5bb9\u5668\u90fd\u5b9a\u4e49\u4e86\u4e24\u79cd\u76f8\u5173\u7684\u8fed\u4ee3\u5668\u7c7b\u578b<ul> <li><code>container-type::const_iterator</code> \u5982\u679c\u4ec5\u4ec5\u8bfb\u9009\u7528\u8fd9\u4e2a</li> <li><code>container-type::iterator</code></li> </ul> </li> <li><code>(*iter).name</code> \u53ef\u4ee5\u5199\u4e3a <code>iter-&gt;name</code></li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#53","title":"5.3 \u7528\u8fed\u4ee3\u5668\u4ee3\u66ff\u7d22\u5f15","text":"<ul> <li><code>iter = students.erase(iter)</code> \u53ea\u662f\u5220\u9664 iter \u4f1a\u4f7f\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u56e0\u4e3a iter \u6307\u5411\u7684\u5143\u7d20\u5df2\u7ecf\u6d88\u5931\u4e86\uff0c\u8fd9\u4e2a\u8bed\u53e5\u4f1a\u8ba9 iter \u6307\u5411\u88ab\u5220\u9664\u5143\u7d20\u540e\u9762\u7684\u7684\u90a3\u4e2a\u5143\u7d20\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#54","title":"5.4 \u91cd\u65b0\u601d\u8003\u6570\u636e\u7ed3\u6784\u4ee5\u5b9e\u73b0\u66f4\u597d\u7684\u6027\u80fd","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#55-list","title":"5.5 list \u7c7b\u578b","text":"<ul> <li>list \u7c7b\u578b\u5728 <code>&lt;list&gt;</code> \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49</li> <li>list \u4e0d\u652f\u6301\u7d22\u5f15\uff0c\u4f46\u662f\u652f\u6301\u8fed\u4ee3\u5668</li> <li>\u5bf9 list \u6765\u8bf4\uff0cerase \u548c push_back \u64cd\u4f5c\u4e0d\u4f1a\u4f7f\u6307\u5411\u5176\u4ed6\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u53ea\u6709\u6307\u5411\u5df2\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u624d\u4f1a\u5931\u6548\u3002</li> <li>\u4e0d\u80fd\u4f7f\u7528\u6807\u51c6\u5e93\u7684 sort \u51fd\u6570\u6765\u4e3a\u5b58\u50a8\u5728 list \u4e2d\u7684\u503c\u6392\u5e8f\u3002</li> </ul> <p>\u8fd9\u662f list \u7c7b\u63d0\u4f9b\u7684 sort \u6210\u5458\u51fd\u6570</p> C++<pre><code>list&lt;Student_info&gt; students\nstudents.sort(compare);\n</code></pre> <p>\u5bf9\u6bd4 vector</p> C++<pre><code>vector&lt;Student_info&gt; students;\nsort(students.begin(), students.end(), compare);\n</code></pre> <ul> <li>\u5c0f\u89c4\u6a21\u8f93\u5165 list \u6548\u7387\u8981\u6bd4 vector \u4f4e</li> <li>\u5927\u89c4\u6a21\u7684\u8f93\u5165\uff0cvector \u6027\u80fd\u4f1a\u98de\u901f\u4e0b\u964d</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#56","title":"5.6 \u5206\u5272\u5b57\u7b26\u4e32","text":"<ul> <li>substr \u662f string \u7c7b\u7684\u4e00\u4e2a\u6210\u5458<ul> <li>\u4ece\u7b2c\u4e00\u4e2a\u53c2\u6570\u7ed9\u5b9a\u7684\u7d22\u5f15\u5f00\u59cb\u590d\u5236\u5b57\u7b26\uff0c\u590d\u5236\u7684\u5b57\u7b26\u4e2a\u6570\u7531\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u3002</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#57-split","title":"5.7 \u6d4b\u8bd5 split \u51fd\u6570","text":"C++<pre><code>int main()\n{\n    string s;\n\n    // read and split each line of input\n    while (getline(cin, s)) {\n        vector&lt;string&gt; v = split(s);\n\n        // write each word in `v'\n        for (vector&lt;string&gt;::size_type i = 0; i != v.size(); ++i)\n            cout &lt;&lt; v[i] &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre> <ul> <li><code>getline</code> : <ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u8f93\u5165\u6d41\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f15\u7528\uff0c\u4f5c\u7528\u662f\u628a\u4ece\u8f93\u5165\u6d41\u4e2d\u8bfb\u53d6\u5230\u7684\u6570\u636e\u5b58\u5728\u5b57\u7b26\u4e32\u5f15\u7528\u4e2d\u3002</li> <li>\u8fd4\u56de\u503c\u903b\u8f91\u548c cin \u76f8\u540c</li> <li>\u8bfb\u53d6\u4e00\u884c\u8f93\u5165</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#58","title":"5.8 \u8fde\u63a5\u5b57\u7b26\u4e32","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#59","title":"5.9 \u5c0f\u7ed3","text":"<ul> <li><code>c.begin</code> \u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668</li> <li><code>c.end()</code> \u6307\u5411\u7d27\u8ddf\u5728\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e4b\u540e\u7684\u90a3\u4e2a\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#06_1","title":"06 \u4f7f\u7528\u5e93\u7b97\u6cd5","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#61","title":"6.1 \u5206\u6790\u5b57\u7b26\u4e32","text":"C++<pre><code>for(vector&lt;string&gt;::const_iterator it = bottom.begin(); it != bottom.end(); ++it)\n{\n    ret.push_back(*it)\n}\n\n// OR\nret.insert(ret.end(), bottom.begin(), bottom.end());\n\n// OR\ncopy(bottom.begin(), bottom.end(), back_intserter(ret));\n</code></pre> <ul> <li>\u8fed\u4ee3\u5668\u9002\u914d\u5668\u662f\u628a\u67d0\u4e2a\u5bb9\u5668\u4f5c\u4e3a\u53c2\u6570\u5e76\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668<ul> <li>back_inserter \u5c31\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\u9002\u914d\u5668</li> </ul> </li> </ul> C++<pre><code>vector&lt;string&gt; split(const string&amp; str)\n{\n    typedef string::const_iterator iter;\n    vector&lt;string&gt; ret;\n\n    iter i = str.begin();\n    while (i != str.end()) {\n\n        // ignore leading blanks\n        i = find_if(i, str.end(), not_space);\n\n        // find end of next word\n        iter j = find_if(i, str.end(), space);\n\n        // copy the characters in `[i,' `j)'\n        if (i != str.end())\n            ret.push_back(string(i, j));\n        i = j;\n    }\n    return ret;\n}\n</code></pre> <ul> <li><code>find_if</code> : \u5934\u4e24\u4e2a\u53c2\u6570\u662f\u8fed\u4ee3\u5668, \u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u8c13\u8bcd\uff0c\u5b83\u4f1a\u68c0\u6d4b\u81ea\u5df1\u7684\u53c2\u6570\u7136\u540e\u8fd4\u56de true \u6216 false. \u5f53\u78b0\u5230 true \u65f6\u505c\u6b62\u5e76\u8fd4\u56de\u5f53\u524d\u7684\u8fed\u4ee3\u5668</li> <li><code>substr</code> \u5bf9\u7d22\u5f15\u8fdb\u884c\u64cd\u4f5c\uff0cstring (i, j) \u662f\u533a\u95f4 (i, j) \u4e2d\u7684\u5b57\u7b26\u7684\u4e00\u4e2a\u590d\u4ef6</li> </ul> C++<pre><code>bool is_palindrome(const string&amp; s)\n{\n    return equal(s.begin(), s.end(), s.rbegin());\n}\n\nint main()\n{\n        string s;\n        while (cin &gt;&gt; s) {\n                if (is_palindrome(s))\n                        cout &lt;&lt; s &lt;&lt; \" is a palindrome\" &lt;&lt; endl;\n                else\n                        cout &lt;&lt; s &lt;&lt; \" is not a palindrome\" &lt;&lt; endl;\n        }\n        return 0;\n}\n</code></pre> <ul> <li><code>equal</code> : \u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u662f\u5426\u5305\u542b\u6709\u76f8\u7b49\u7684\u503c\uff0c\u524d\u4e24\u4e2a\u53c2\u6570\u6307\u5b9a\u4e86\u7b2c\u4e00\u4e2a\u5e8f\u5217\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u8d77\u70b9\uff0cequal \u51fd\u6570\u5047\u5b9a\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\u548c\u7b2c\u4e00\u4e2a\u76f8\u540c\u3002</li> <li><code>rbegin()</code> \u4ece\u7ed3\u5c3e\u5411\u524d\u9006\u5411\u5730\u6bd4\u8f83\u6570\u3002</li> </ul> <p>\u67e5\u627eURL:</p> <ul> <li>URL\uff1a <code>protocol://resource-name</code><ul> <li>protocol \u662f\u534f\u8bae\u540d\u79f0\uff0c\u4ec5\u5305\u542b\u5b57\u6bcd\uff0cresource \u53ef\u4ee5\u7531\u5b57\u6bcd\u6570\u5b57\u548c\u67d0\u4e9b\u6807\u70b9\u7ec4\u6210</li> </ul> </li> </ul> C++<pre><code>vector&lt;string&gt; find_urls(const string&amp; s)\n{\n    vector&lt;string&gt; ret;\n    typedef string::const_iterator iter;\n    iter b = s.begin(), e = s.end();\n\n    // look through the entire input\n    while (b != e) {\n\n        // look for one or more letters followed by `://'\n        b = url_beg(b, e);\n\n        // if we found it\n        if (b != e) {\n            // get the rest of the \\s-1URL\\s0\n            iter after = url_end(b, e);\n\n            // remember the \\s-1URL\\s0\n            ret.push_back(string(b, after));\n\n            // advance `b' and check for more \\s-1URL\\s0s on this line\n            b = after;\n        }\n    }\n    return ret;\n}\n</code></pre> <p></p> C++<pre><code>url_end(string::const_iterator b, string::const_iterator e)\n{\n    return find_if(b, e, not_url_char);\n}\n</code></pre> C++<pre><code>bool not_url_char(char c)\n{\n    // characters, in addition to alphanumerics, that can appear in a \\s-1URL\\s0\n    static const string url_ch = \"~;/?:@=&amp;$-_.+!*'(),\";\n\n    // see whether `c' can appear in a \\s-1URL\\s0 and return the negative\n    return !(isalnum(c) ||\n             find(url_ch.begin(), url_ch.end(), c) != url_ch.end());\n}\n</code></pre> <ul> <li>static \u58f0\u660e\u5730\u5c40\u90e8\u53d8\u91cf\u5177\u6709\u5168\u5c40\u5bff\u547d\uff0c</li> <li>find \uff1a\u5982\u679c\u67e5\u627e\u7684\u503c\u5b58\u5728\u7684\u8bdd\uff0c\u90a3\u4e48\u51fd\u6570\u8fd4\u56de\u7b2c\u4e00\u4e2a\u6307\u5411\u8fd9\u4e2a\u503c\u7684\u8fed\u4ee3\u5668\uff0c\u5426\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002</li> </ul> C++<pre><code>url_beg(string::const_iterator b, string::const_iterator e)\n{\n    static const string sep = \"://\";\n\n    typedef string::const_iterator iter;\n\n    // `i' marks where the separator was found\n    iter i = b;\n\n    while ((i = search(i, e, sep.begin(), sep.end())) != e) {\n\n        // make sure the separator isn't at the beginning or end of the line\n        if (i != b &amp;&amp; i + sep.size() != e) {\n\n            // `beg' marks the beginning of the protocol-name\n            iter beg = i;\n            while (beg != b &amp;&amp; isalpha(beg[-1]))\n                --beg;\n\n            // is there at least one appropriate character before and after the separator?\n            if (beg != i &amp;&amp; !not_url_char(i[sep.size()]))\n                return beg;\n        }\n\n        // the separator we found wasn't part of a \\s-1URL\\s0; advance `i' past this separator\n        i += sep.size();\n    }\n    return e;\n}\n</code></pre> <ul> <li><code>search</code> : \u7b2c\u4e00\u5bf9\u53c2\u6570\u6307\u793a\u4e86\u8981\u67e5\u627e\u7684\u5e8f\u5217\uff0c\u7b2c\u4e8c\u961f\u6307\u793a\u4e86\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u679c search \u5931\u8d25\u5c06\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\uff0c\u627e\u5230\u4e86\u5c31\u8fd4\u56de <code>sep.begin()</code></li> <li><code>beg[-1]</code> \u5373 <code>*(beg - 1)</code></li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#62","title":"6.2 \u5bf9\u8ba1\u7b97\u6210\u7ee9\u7684\u65b9\u6848\u8fdb\u884c\u6bd4\u8f83 (\u53ef\u8bfb\u6027\u5f88\u5dee)","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#65","title":"6.5 \u5c0f\u7ed3","text":"<ul> <li><code>accumulate(b, e, t)</code></li> <li><code>find(b,e,t)</code></li> <li><code>find_if(b,e,t)</code></li> <li><code>search(b,e,b2,e2)</code></li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#07_1","title":"07 \u4f7f\u7528\u5173\u8054\u5bb9\u5668","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#71","title":"7.1 \u652f\u6301\u9ad8\u6548\u67e5\u627e\u7684\u5bb9\u5668","text":"<ul> <li>\"\u952e-\u503c\"\u5bf9, \u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u88ab\u79f0\u4e3a\u5173\u8054\u6570\u7ec4</li> <li>C++\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u5173\u8054\u6570\u7ec4\u662f map, \u5728 <code>&lt;map&gt;</code> \u4e2d\u5b9a\u4e49</li> <li>\u5173\u8054\u5bb9\u5668\u81ea\u52a8\u6392\u5e8f</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#72","title":"7.2 \u8ba1\u7b97\u5355\u8bcd\u6570","text":"C++<pre><code>int main()\n{\n    string s;\n    map&lt;string, int&gt; counters; // store each word and an associated counter\n\n    // read the input, keeping track of each word and how often we see it\n    while (cin &gt;&gt; s)\n        ++counters[s];\n\n    // write the words and associated counts\n    for (map&lt;string, int&gt;::const_iterator it = counters.begin();\n         it != counters.end(); ++it) {\n        cout &lt;&lt; it-&gt;first &lt;&lt; \"\\t\" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u8981\u6307\u5b9a\u952e\u503c\u7c7b\u578b</li> <li>\u6dfb\u52a0\u952e\u7684\u65f6\u5019\u503c\u4f1a\u88ab\u521d\u59cb\u5316</li> <li>\u91cd\u590d\u8bbf\u95ee\u6620\u5c04\u8868\u7684\u65f6\u5019\u5b9e\u9645\u4e0a\u4f7f\u7528\u4e86\u6570\u5bf9</li> <li>\u6570\u5bf9(pair) <ul> <li>\u5305\u542b first \u548c second</li> <li>\u952e\u7c7b\u578b\u4e3a K\uff0c\u503c\u7c7b\u578b\u4e3a V \u7684\u6620\u5c04\u8868\uff0c <code>pair&lt;const K, V&gt;</code></li> <li>\u7981\u6b62\u4fee\u6539\u952e\u7684\u503c</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#73","title":"7.3 \u4ea7\u751f\u4e00\u4e2a\u4ea4\u53c9\u5f15\u7528\u8868","text":"C++<pre><code>map&lt;string, vector&lt;int&gt; &gt;\n    xref(istream&amp; in,\n         vector&lt;string&gt; find_words(const string&amp;) = split)\n{\n    string line;\n    int line_number = 0;\n    map&lt;string, vector&lt;int&gt; &gt; ret;\n\n    // read the next line\n    while (getline(in, line)) {\n        ++line_number;\n\n        // break the input line into words\n        vector&lt;string&gt; words = find_words(line);\n\n        // remember that each word occurs on the current line\n        for (vector&lt;string&gt;::const_iterator it = words.begin();\n             it != words.end(); ++it)\n            ret[*it].push_back(line_number);\n    }\n    return ret;\n}\n</code></pre> <ul> <li><code>vector&lt;string&gt; find_words(const string&amp;) = split</code> \u662f\u4e00\u4e2a\u7f3a\u7701\u53c2\u6570<ul> <li><code>xref(cin)</code> \u5219\u8c03\u7528 split</li> <li><code>xref(cin, find_urls)</code> \u5219\u8c03\u7528 find_urls</li> </ul> </li> </ul> <p>\u4ea7\u751f\u4ea4\u53c9\u5f15\u7528\u8868</p> C++<pre><code>int main()\n{\n    // call `xref' using `split' by default\n    map&lt;string, vector&lt;int&gt; &gt; ret = xref(cin);\n\n    // write the results\n    for (map&lt;string, vector&lt;int&gt; &gt;::const_iterator it = ret.begin();\n         it != ret.end(); ++it) {\n        // write the word\n        cout &lt;&lt; it-&gt;first &lt;&lt; \" occurs on line(s): \";\n\n        // followed by one or more line numbers\n        vector&lt;int&gt;::const_iterator line_it = it-&gt;second.begin();\n        cout &lt;&lt; *line_it;   // write the first line number\n\n        ++line_it;\n        // write the rest of the line numbers, if any\n        while (line_it != it-&gt;second.end()) {\n            cout &lt;&lt; \", \" &lt;&lt; *line_it;\n            ++line_it;\n        }\n        // write a new line to separate each word from the next\n        cout &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#74","title":"7.4 \u751f\u6210\u53e5\u5b50","text":"<ul> <li>\u8bfb\u5165\u6587\u6cd5</li> </ul> C++<pre><code>typedef vector&lt;string&gt; Rule;\ntypedef vector&lt;Rule&gt; Rule_collection;\ntypedef map&lt;string, Rule_collection&gt; Grammar;\n\n// read a grammar from a given input stream\nGrammar read_grammar(istream&amp; in)\n{\n    Grammar ret;\n    string line;\n\n    // read the input\n    while (getline(in, line)) {\n\n        // `split' the input into words\n        vector&lt;string&gt; entry = split(line);\n\n        if (!entry.empty())\n            // use the category to store the associated rule\n            ret[entry[0]].push_back(\n                Rule(entry.begin() + 1, entry.end()));\n    }\n    return ret;\n}\n</code></pre> <ul> <li>gen_aux \u4f7f\u7528\u6587\u6cd5 g \u5e76\u6309\u7167 <code>&lt;sentence&gt;</code> \u89c4\u5219\u751f\u6210\u4e00\u4e2a\u53e5\u5b50</li> </ul> C++<pre><code>void gen_aux(const Grammar&amp;, const string&amp;, vector&lt;string&gt;&amp;);\n\nint nrand(int);\n\nvector&lt;string&gt; gen_sentence(const Grammar&amp; g)\n{\n    vector&lt;string&gt; ret;\n    gen_aux(g, \"&lt;sentence&gt;\", ret);\n    return ret;\n}\n\nbool bracketed(const string&amp; s)\n{\n    return s.size() &gt; 1 &amp;&amp; s[0] == '&lt;' &amp;&amp; s[s.size() - 1] == '&gt;';\n}\n\nvoid\ngen_aux(const Grammar&amp; g, const string&amp; word, vector&lt;string&gt;&amp; ret)\n{\n\n    if (!bracketed(word)) {\n        ret.push_back(word);\n    } else {\n        // locate the rule that corresponds to `word'\n        Grammar::const_iterator it = g.find(word);\n        if (it == g.end())\n            throw logic_error(\"empty rule\");\n\n        // fetch the set of possible rules\n        const Rule_collection&amp; c = it-&gt;second;\n\n        // from which we select one at random\n        const Rule&amp; r = c[nrand(c.size())];\n\n        // recursively expand the selected rule\n        for (Rule::const_iterator i = r.begin(); i != r.end(); ++i)\n            gen_aux(g, *i, ret);\n    }\n}\n</code></pre> <ul> <li>\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570</li> </ul> C++<pre><code>int main()\n{\n    // generate the sentence\n    vector&lt;string&gt; sentence = gen_sentence(read_grammar(cin));\n\n    // write the first word, if any\n    vector&lt;string&gt;::const_iterator it = sentence.begin();\n    if (!sentence.empty()) {\n        cout &lt;&lt; *it;\n        ++it;\n    }\n\n    // write the rest of the words, each preceded by a space\n    while (it != sentence.end()) {\n        cout &lt;&lt; \" \" &lt;&lt; *it;\n        ++it;\n    }\n\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <ul> <li>\u7f16\u5199 nrand</li> <li><code>&lt;cstdlib&gt;</code> \u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u540d\u4e3a rand \u7684\u51fd\u6570\uff0c\u4e0d\u542b\u53c2\u6570\uff0c\u8fd4\u56de <code>[0, RAND_MAX]</code> \u4e2d\u7684\u4e00\u4e2a\u968f\u673a\u6574\u6570\uff0c\u8fd9\u91cc RAND_MAX \u662f\u4e00\u4e2a\u5927\u6574\u6570\uff0c\u4e5f\u5728 <code>&lt;cstdlib&gt;</code> \u4e2d\u5b9a\u4e49\uff0c</li> <li>\u4f7f\u7528 rand () % n \u4f1a\u4f7f\u5f97\u4e00\u4e9b\u4f59\u6570\u51fa\u73b0\u7684\u9891\u7387\u66f4\u9ad8\uff0c\u5047\u5b9a RAND_MAX \u4e3a 32767 \u90a3\u4e48\u51fa\u73b0 10000 \u7684\u60c5\u51b5\u6709 30000 % 20000 = 10000\uff0c10000 % 20000 = 10000\uff0c\u800c\u51fa\u73b0 15000 \u7684\u60c5\u51b5\u53ea\u6709 15000 % 20000 = 15000</li> <li>\u6211\u4eec\u4f7f\u7528\u5b58\u50a8\u6876\u7684\u65b9\u6cd5 </li> </ul> C++<pre><code>int nrand(int n)\n{\n    if (n &lt;= 0 || n &gt; RAND_MAX)\n        throw domain_error(\"Argument to nrand is out of range\");\n\n    const int bucket_size = RAND_MAX / n;\n    int r;\n\n    do r = rand() / bucket_size;\n    while (r &gt;= n);\n\n    return r;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#75","title":"7.5 \u5173\u4e8e\u6027\u80fd\u7684\u8bf4\u660e","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#76","title":"7.6 \u5c0f\u7ed3","text":"<ul> <li><code>pair&lt;k, v&gt;</code> \u4fdd\u5b58\u4e86\u4e00\u5bf9\u6570\u503c\uff0c\u901a\u8fc7 first \u548c second \u6765\u8bbf\u95ee</li> <li><code>map&lt;k, v&gt;</code> \u662f\u4e00\u4e2a\u5173\u8054\u6570\u7ec4\uff0c\u952e\u4e3a K\uff0c\u503c\u4e3a V\u3002\u5982\u679c iter \u662f\u6307\u5411\u67d0\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u7528 iter-&gt;first, iter-&gt;second \u6765\u8bbf\u95ee\u952e\u548c\u503c</li> <li><code>map&lt;k, v&gt; m</code> <code>m.find(k)</code> \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u952e\u4e3a K \u7684\u5143\u7d20</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#08_1","title":"08 \u7f16\u5199\u6cdb\u578b\u51fd\u6570","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#81","title":"8.1 \u6cdb\u578b\u51fd\u6570\u662f\u4ec0\u4e48","text":"C++<pre><code>template &lt;class T&gt;\nT median(vector&lt;T&gt; v)\n{\n    typedef typename vector&lt;T&gt;::size_type vec_sz;\n\n    vec_sz size = v.size();\n    if (size == 0)\n        throw domain_error(\"median of an empty vector\");\n\n    sort(v.begin(), v.end());\n\n    vec_sz mid = size/2;\n\n    return size % 2 == 0 ? (v[mid] + v[mid-1]) / 2 : v[mid];\n}\n</code></pre> <ul> <li>\u5b9e\u73b0\u4e86\u6cdb\u578b\u51fd\u6570\u7684\u8bed\u8a00\u7279\u5f81\u88ab\u79f0\u4e3a\u6a21\u677f\u51fd\u6570</li> <li><code>template&lt;class T&gt;</code> \u544a\u77e5\u7cfb\u7edf\u73af\u5883\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6a21\u677f\u51fd\u6570</li> <li><code>typename</code> \u544a\u77e5\u7cfb\u7edf\u73af\u5883\u540e\u9762\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u7c7b\u578b\u540d</li> <li>\u5982\u679c\u7528 <code>&lt;vector&lt;int&gt;</code> \u7c7b\u578b\u8c03\u7528 median\uff0c\u90a3\u4e48 int \u4f1a\u4ee3\u66ff\u6240\u6709 T \u7684\u4f7f\u7528</li> </ul> C++<pre><code>// \u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\ntemplate &lt;class T&gt;\nT max(const T&amp; left, const T&amp; right)\n{   \n    return left &gt; right ? left : right;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#82","title":"8.2 \u6570\u636e\u7ed3\u6784\u72ec\u7acb\u6027","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#09","title":"09 \u5b9a\u4e49\u65b0\u7c7b\u578b","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#91-student_info","title":"9.1 \u56de\u987e\u4e00\u4e0b Student_info","text":"","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#92","title":"9.2 \u81ea\u5b9a\u4e49\u7c7b\u578b","text":"C++<pre><code>struct Student_info(){\n    std:: string name;\n    double midterm, final;\n    std:: vector&lt;double&gt; homework;\n}\n</code></pre> <ul> <li>\u7c7b\u7684\u58f0\u660e\u5e38\u5e38\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u4e00\u822c\u6ca1\u6709 using \u58f0\u660e</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#921","title":"9.2.1 \u6210\u5458\u51fd\u6570","text":"C++<pre><code>struct Student_info(){\n    std:: string name;\n    double midterm, final;\n    std:: vector&lt;double&gt; homework;\n\n    std::istream(std::istream&amp;);\n    double grade() const; // const \u8bf4\u660e\u4e0d\u4f1a\u4fee\u6539\u6210\u5458\u53d8\u91cf\n}\n</code></pre> C++<pre><code>istream&amp; Student_info::read(istream&amp; in)\n{\n    in &gt;&gt; n &gt;&gt; midterm &gt;&gt; final;\n    read_hw(in, homework);\n    return in;\n}\n</code></pre> <ul> <li>read \u51fd\u6570\u5c06\u88ab\u653e\u5165\u540d\u4e3a <code>Student_info.cpp</code> \u7684\u6e90\u6587\u4ef6\u4e2d\u3002</li> <li>\u51fd\u6570\u540d\u662f <code>Student_info::read</code> \u800c\u4e0d\u662f <code>read</code> ,\u56e0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u662f <code>Student_info</code> \u7684\u6210\u5458</li> <li>\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u8c61\u7684\u6570\u636e\u5143\u7d20\u3002 </li> </ul> C++<pre><code>double Student_info::grade() const\n{\n    return ::grade(midterm, final, homework);\n}\n</code></pre> <ul> <li><code>::grade</code> \u5982\u679c\u6211\u4eec\u628a <code>::</code> \u653e\u5728\u4e00\u4e2a\u540d\u79f0\u4e4b\u524d\u90a3\u5c31\u8868\u660e\u6211\u4eec\u8981\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\u7684\u67d0\u4e00\u4e2a\u7248\u672c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u4e0d\u662f\u4efb\u4f55\u7ed3\u6784\u4f53\u7684\u6210\u5458\u3002</li> <li>\u4e0d\u80fd\u5bf9\u5e38\u91cf\u5bf9\u8c61\u8c03\u7528\u975e\u5e38\u91cf\u51fd\u6570</li> <li>\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u6539\u53d8\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#93","title":"9.3 \u4fdd\u62a4","text":"C++<pre><code>class Student_info {\npublic:\n    Student_info();              // construct an empty `Student_info' object\n    Student_info(std::istream&amp;); // construct one by reading a stream\n    std::string name() const { return n; }\n    bool valid() const { return !homework.empty(); }\n\n    // as defined in 9.2.1/157, and changed to read into `n' instead of `name'\n    std::istream&amp; read(std::istream&amp;);\n\n    double grade() const;    // as defined in 9.2.1/158\nprivate:\n    std::string n;\n    double midterm, final;\n    std::vector&lt;double&gt; homework;\n};\n</code></pre> <ul> <li><code>class</code> \u548c <code>struct</code> \u7684\u5dee\u522b<ul> <li><code>class</code> \u7f3a\u7701\u4e3a\u79c1\u6709\uff0c <code>struct</code> \u7f3a\u7701\u4e3a\u516c\u6709</li> </ul> </li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#931","title":"9.3.1 \u5b58\u53d6\u5668\u51fd\u6570","text":"C++<pre><code>class Student_info {\n    public:\n        std::string name() const { return n;}\n    private:\n        std::string n;\n}\n</code></pre> <p>compare():</p> C++<pre><code>bool compare(const Student_info&amp; x, const Student_info&amp; y)\n{\n    return x.name() &lt; y.name();\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#94-student_info","title":"9.4 Student_info \u7c7b","text":"C++<pre><code>class Student_info {\npublic:\n    Student_info();              // construct an empty `Student_info' object\n    Student_info(std::istream&amp;); // construct one by reading a stream\n    std::string name() const { return n; }\n    bool valid() const { return !homework.empty(); }\n\n    // as defined in 9.2.1/157, and changed to read into `n' instead of `name'\n    std::istream&amp; read(std::istream&amp;);\n\n    double grade() const;    // as defined in 9.2.1/158\nprivate:\n    std::string n;\n    double midterm, final;\n    std::vector&lt;double&gt; homework;\n};\n</code></pre> <ul> <li>\u7528\u6237\u53ea\u80fd\u901a\u8fc7\u8c03\u7528 read \u51fd\u6570\u6539\u53d8\u5bf9\u8c61\u72b6\u6001\uff0c\u4e0d\u80fd\u8fdb\u5165\u5185\u90e8\u4fee\u6539\u4efb\u4f55\u7684\u6570\u636e\u6210\u5458\u3002</li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#95","title":"9.5 \u6784\u9020\u51fd\u6570","text":"<ul> <li>\u7f3a\u7701\u6784\u9020\u51fd\u6570 <code>Student_info()</code> :</li> </ul> C++<pre><code>Student_info::Student_info(): midterm(0), final(0) { }\n</code></pre> <ul> <li>\u5e26\u53c2\u6784\u9020\u51fd\u6570 <code>Student_info(istream&amp; is) { read(is);}</code></li> </ul>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#96-student_info","title":"9.6 \u4f7f\u7528 Student_info \u7c7b","text":"C++<pre><code>int main()\n{\n    vector&lt;Student_info&gt; students;\n    Student_info record;\n    string::size_type maxlen = 0;\n\n    // read and store the data\n    while (record.read(cin)) {                           // changed\n        maxlen = max(maxlen, record.name().size());      // changed\n        students.push_back(record);\n    }\n\n    // alphabetize the student records\n    sort(students.begin(), students.end(), compare);\n\n    // write the names and grades\n    for (vector&lt;Student_info&gt;::size_type i = 0;\n         i != students.size(); ++i) {\n        cout &lt;&lt; students[i].name()   // this and the next line changed\n             &lt;&lt; string(maxlen + 1 - students[i].name().size(), ' ');\n        try {\n            double final_grade = students[i].grade();   // changed\n            streamsize prec = cout.precision();\n            cout &lt;&lt; setprecision(3) &lt;&lt; final_grade\n                 &lt;&lt; setprecision(prec) &lt;&lt; endl;\n        } catch (domain_error e) {\n            cout &lt;&lt; e.what() &lt;&lt; endl;\n        }\n    }\n    return 0;\n}\n</code></pre>","tags":["programming_language"]},{"location":"computer/C%2B%2B/ac_cpp/#97","title":"9.7 \u5c0f\u7ed3","text":"<ul> <li>\u4fdd\u62a4\u6807\u8bc6\u7b26</li> <li>\u6210\u5458\u51fd\u6570</li> <li>\u6784\u9020\u51fd\u6570</li> <li>\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7a0b\u5e8f\u5217\u8868</li> </ul>","tags":["programming_language"]},{"location":"computer/CS61A/CS61A_notes/","title":"CS61A_notes","text":"<code>#course_notes</code> <code>#programming language</code>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#cs61a_notes","title":"CS61A_notes","text":"<p> \u7ea6 5684 \u4e2a\u5b57  988 \u884c\u4ee3\u7801  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 41 \u5206\u949f</p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#1","title":"1 \u4f7f\u7528\u51fd\u6570\u6784\u5efa\u62bd\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#11","title":"1.1 \u5f00\u59cb","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#12","title":"1.2 \u7f16\u7a0b\u8981\u7d20","text":"<ul> <li>\u7eaf\u51fd\u6570\u548c\u975e\u7eaf\u51fd\u6570<ul> <li>\u975e\u7eaf\u51fd\u6570:\u9664\u4e86\u8fd4\u56de\u503c\u5916\uff0c\u8c03\u7528\u4e00\u4e2a\u975e\u7eaf\u51fd\u6570\u8fd8\u4f1a\u4ea7\u751f\u5176\u4ed6\u6539\u53d8\u89e3\u91ca\u5668\u548c\u8ba1\u7b97\u673a\u7684\u72b6\u6001\u7684\u526f\u4f5c\u7528\uff08side effect\uff09\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u526f\u4f5c\u7528\u5c31\u662f\u4f7f\u7528\u00a0<code>print</code>\u00a0\u51fd\u6570\u4ea7\u751f\uff08\u975e\u8fd4\u56de\u503c\u7684\uff09\u989d\u5916\u8f93\u51fa\u3002</li> <li>\u7eaf\u51fd\u6570\uff1a\u51fd\u6570\u6709\u4e00\u4e9b\u8f93\u5165\uff08\u53c2\u6570\uff09\u5e76\u8fd4\u56de\u4e00\u4e9b\u8f93\u51fa\uff08\u8c03\u7528\u8fd4\u56de\u7ed3\u679c\uff09\u3002 \u793a\u4f8b\uff1a</li> </ul> </li> </ul> Python<pre><code>&gt;&gt;&gt; print(print(1),print(2))  \n1\n2\nNone None\n</code></pre> Python<pre><code>&gt;&gt;&gt; two = print(2)\n2\n&gt;&gt;&gt; print(two)\nNone\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#13","title":"1.3 \u5b9a\u4e49\u65b0\u7684\u51fd\u6570","text":"<ul> <li>\u5982\u4f55\u5b9a\u4e49\u51fd\u6570\uff1a</li> </ul> Python<pre><code>def &lt;name&gt;(&lt;formal parameters&gt;):\n    return &lt;return expression&gt;\n</code></pre> <p>\u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def square(x):\n    return mul(x,x)\n</code></pre> <ul> <li>\u5f53\u51fd\u6570\u6ca1\u6709\u663e\u5f0freturn\uff0c\u9ed8\u8ba4\u8fd4\u56deNone\u503c</li> </ul> <p>\u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def square(x):\n...     mul(x,x) \n...\n&gt;&gt;&gt; a = square(4)  \n&gt;&gt;&gt; print(a)  \nNone\n</code></pre> <ul> <li>\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\u8fd4\u56de\u503c \u793a\u4f8b\uff1a</li> </ul> Python<pre><code>def divide_exact(n, d):\n    return n // d, n % d\na, b = divide_exact(10, 3)\nprint(a, b)\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#14","title":"1.4 \u8bbe\u8ba1\u51fd\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#141","title":"1.4.1 \u6587\u6863","text":"<p>\u51fd\u6570\u5b9a\u4e49\u901a\u5e38\u5305\u62ec\u63cf\u8ff0\u51fd\u6570\u7684\u6587\u6863\uff0c\u79f0\u4e3a\u201c\u6587\u6863\u5b57\u7b26\u4e32 docstring\u201d\uff0c\u5b83\u5fc5\u987b\u5728\u51fd\u6570\u4f53\u4e2d\u7f29\u8fdb\u3002\u6587\u6863\u5b57\u7b26\u4e32\u901a\u5e38\u4f7f\u7528\u4e09\u4e2a\u5f15\u53f7\uff0c\u7b2c\u4e00\u884c\u63cf\u8ff0\u51fd\u6570\u7684\u4efb\u52a1\uff0c\u968f\u540e\u7684\u51e0\u884c\u53ef\u4ee5\u63cf\u8ff0\u53c2\u6570\u5e76\u89e3\u91ca\u51fd\u6570\u7684\u610f\u56fe\uff1a</p> Python<pre><code>&gt;&gt;&gt; def pressure(v, t, n):\n        \"\"\"\u8ba1\u7b97\u7406\u60f3\u6c14\u4f53\u7684\u538b\u529b\uff0c\u5355\u4f4d\u4e3a\u5e15\u65af\u5361\n\n        \u4f7f\u7528\u7406\u60f3\u6c14\u4f53\u5b9a\u5f8b\uff1ahttp://en.wikipedia.org/wiki/Ideal_gas_law\n\n        v -- \u6c14\u4f53\u4f53\u79ef\uff0c\u5355\u4f4d\u4e3a\u7acb\u65b9\u7c73\n        t -- \u7edd\u5bf9\u6e29\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5f00\u5c14\u6587\n        n -- \u6c14\u4f53\u7c92\u5b50\n        \"\"\"\n        k = 1.38e-23  # \u73bb\u5c14\u5179\u66fc\u5e38\u6570\n        return n * k * t / v\n</code></pre> <p>\u5f53\u4f60\u4f7f\u7528\u51fd\u6570\u540d\u79f0\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528\u00a0<code>help</code>\u00a0\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u5b83\u7684\u6587\u6863\u5b57\u7b26\u4e32\uff08\u952e\u5165 q \u4ee5\u9000\u51fa Python help\uff09\u3002</p> Python<pre><code>&gt;&gt;&gt; help(pressure)\n</code></pre> <p>\u7f16\u5199 Python \u7a0b\u5e8f\u65f6\uff0c\u9664\u4e86\u6700\u7b80\u5355\u7684\u51fd\u6570\u4e4b\u5916\uff0c\u90fd\u8981\u5305\u542b\u6587\u6863\u5b57\u7b26\u4e32\u3002\u8981\u8bb0\u4f4f\uff0c\u867d\u7136\u4ee3\u7801\u53ea\u7f16\u5199\u4e00\u6b21\uff0c\u4f46\u662f\u4f1a\u5728\u4e4b\u540e\u9605\u8bfb\u591a\u6b21\u3002Python \u6587\u6863\u5305\u542b\u4e86\u00a0\u6587\u6863\u5b57\u7b26\u4e32\u51c6\u5219\uff0c\u5b83\u4f1a\u5728\u4e0d\u540c\u7684 Python \u9879\u76ee\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u6ce8\u91ca\uff1aPython \u4e2d\u7684\u6ce8\u91ca\u53ef\u4ee5\u9644\u52a0\u5230\u00a0<code>#</code>\u00a0\u53f7\u540e\u7684\u884c\u5c3e\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u00a0<code>\u73bb\u5c14\u5179\u66fc\u5e38\u6570</code>\u00a0\u63cf\u8ff0\u4e86\u00a0<code>k</code>\u00a0\u53d8\u91cf\u7684\u542b\u4e49\u3002\u8fd9\u4e9b\u6ce8\u91ca\u4e0d\u4f1a\u51fa\u73b0\u5728 Python \u7684\u00a0<code>help</code>\u00a0\u4e2d\uff0c\u800c\u4e14\u4f1a\u88ab\u89e3\u91ca\u5668\u5ffd\u7565\uff0c\u5b83\u4eec\u53ea\u4e3a\u4eba\u7c7b\u800c\u5b58\u5728\u3002</p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#142","title":"1.4.2 \u53c2\u6570\u9ed8\u8ba4\u503c","text":"Python<pre><code>&gt;&gt;&gt; def pressure(v, t, n=6.022e23):\n\"\"\"\u8ba1\u7b97\u7406\u60f3\u6c14\u4f53\u7684\u538b\u529b\uff0c\u5355\u4f4d\u4e3a\u5e15\u65af\u5361\n\n\u4f7f\u7528\u7406\u60f3\u6c14\u4f53\u5b9a\u5f8b\uff1ahttp://en.wikipedia.org/wiki/Ideal_gas_law\n\nv -- \u6c14\u4f53\u4f53\u79ef\uff0c\u5355\u4f4d\u4e3a\u7acb\u65b9\u7c73\nt -- \u7edd\u5bf9\u6e29\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5f00\u5c14\u6587\nn -- \u6c14\u4f53\u7c92\u5b50\uff0c\u9ed8\u8ba4\u4e3a\u4e00\u6469\u5c14\n\"\"\"\nk = 1.38e-23  # \u73bb\u5c14\u5179\u66fc\u5e38\u6570\nreturn n * k * t / v\n</code></pre> Python<pre><code>&gt;&gt;&gt; pressure(1, 273.15) \n2269.974834\n&gt;&gt;&gt; pressure(1, 273.15, 3 * 6.022e23) \n6809.924502\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#15","title":"1.5 \u63a7\u5236","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#151","title":"1.5.1 \u8bed\u53e5","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#152","title":"1.5.2 \u590d\u5408\u8bed\u53e5","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#153-ii","title":"1.5.3 \u5b9a\u4e49\u51fd\u6570 II\uff1a\u5c40\u90e8\u8d4b\u503c","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#154","title":"1.5.4 \u6761\u4ef6\u8bed\u53e5","text":"<p>\u8bed\u6cd5:</p> Python<pre><code>if &lt;expression&gt;:\n    &lt;suite&gt;\nelif &lt;expression&gt;:\n    &lt;suite&gt;\nelse:\n    &lt;suite&gt;\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#155","title":"1.5.5 \u8fed\u4ee3","text":"<p>\u8bed\u6cd5:</p> Python<pre><code>while &lt;expression&gt;:\n&lt;suite&gt;\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#156","title":"1.5.6 \u6d4b\u8bd5","text":"<ul> <li><code>assert</code> -\u65ad\u8a00\uff1a\u65ad\u8a00\uff08Assertions\uff09\uff1a\u7a0b\u5e8f\u5458\u4f7f\u7528\u00a0<code>assert</code>\u00a0\u8bed\u53e5\u6765\u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u9884\u671f\uff0c\u4f8b\u5982\u9a8c\u8bc1\u88ab\u6d4b\u8bd5\u51fd\u6570\u7684\u8f93\u51fa\u3002 <code>assert</code>\u00a0\u8bed\u53e5\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u540e\u9762\u662f\u4e00\u4e2a\u5e26\u5f15\u53f7\u7684\u6587\u672c\u884c\uff08\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u90fd\u53ef\u4ee5\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\uff09</li> <li>\u5982\u679c\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a\u5047\u503c\uff0c\u5219\u663e\u793a\u8be5\u884c\u3002</li> <li>\u5f53\u88ab\u65ad\u8a00\u7684\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a\u771f\u503c\u65f6\uff0c\u6267\u884c\u65ad\u8a00\u8bed\u53e5\u65e0\u6548\u3002\u800c\u5f53\u5b83\u662f\u5047\u503c\u65f6\uff0c<code>assert</code>\u00a0\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u505c\u6b62\u6267\u884c\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> Python<pre><code>def fib(n):\n    if n &lt; 2:\n        return 1\n    else:\n        a, b = 1, 1\n        while n - 2:\n            a, b = b,a + b\n            n = n - 1\n        return b\ndef fib_test():\n        assert fib(2) == 1, '\u7b2c\u4e8c\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n        assert fib(3) == 2, '\u7b2c\u4e09\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5e94\u8be5\u662f 1'\n\nfib_test()\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#16","title":"1.6 \u9ad8\u9636\u51fd\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#160","title":"1.6.0 \u9ad8\u9636\u51fd\u6570\u7684\u5b9a\u4e49","text":"<p>\u5728 Python \u4e2d\uff0c\u9ad8\u9636\u51fd\u6570\uff08Higher-order function\uff09\u662f\u6307\uff1a</p> <ol> <li>\u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u6216\u8005</li> <li>\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u3002</li> </ol> <p>\u9ad8\u9636\u51fd\u6570\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u51fd\u6570\u53ef\u4ee5\u50cf\u6570\u636e\u4e00\u6837\u4f20\u9012\u3002\u4f60\u53ef\u4ee5\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u6216\u8005\u5c06\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u3002</p> <p>\u9ad8\u9636\u51fd\u6570\u7684\u7279\u5f81</p> <ul> <li>\u63a5\u53d7\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff1a\u4f8b\u5982\uff0c<code>map()</code>\u3001<code>filter()</code>\u3001<code>sorted()</code> \u7b49\u5185\u7f6e\u51fd\u6570\u3002</li> <li>\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff1a\u4f8b\u5982\uff0cPython \u4e2d\u7684\u88c5\u9970\u5668\uff08decorators\uff09\u5c31\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u3002</li> </ul> <p>\u8bfe\u7a0b\u89c6\u9891\u4e2d\u7684\u90e8\u5206\u7b14\u8bb0\uff1a \u4e0d\u540c\u4e8e\u5e73\u5e38\u7684 if \u63a7\u5236\u8bed\u53e5\uff0c\u8c03\u7528 if_ \u8fd9\u4e2a\u51fd\u6570\u7684\u524d\u4f1a\u628a\u6240\u6709\u53c2\u6570\u6c42\u51fa\u6765</p> Python<pre><code>from math import sqrt\ndef if_(c,t,f):\n    if c:\n        return t\n    else:\n        return f\ndef real_sqrt(x):\n    return if_(x &gt;= 0,sqrt(x),0)\n\nprint(real_sqrt(-16))\n</code></pre> <p>\u62a5\u9519\uff01</p> Text Only<pre><code>Traceback (most recent call last):\n  File \"c:\\Users\\am\\Desktop\\python\\text.py\", line 11, in &lt;module&gt;\n    print(real_sqrt(-16))\n          ^^^^^^^^^^^^^^\n  File \"c:\\Users\\am\\Desktop\\python\\text.py\", line 8, in real_sqrt\n    return if_(x &gt;= 0,sqrt(x),0)\n                      ^^^^^^^\nValueError: math domain error\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#161","title":"1.6.1 \u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570","text":"<p>\u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def summation(n, term):\n        total, k = 0, 1\n        while k &lt;= n:\n            total, k = total + term(k), k + 1\n        return total\n&gt;&gt;&gt; def identity(x):\n        return x\n&gt;&gt;&gt; def sum_naturals(n):\n        return summation(n, identity)\n&gt;&gt;&gt; sum_naturals(10)\n55\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#162","title":"1.6.2 \u4f5c\u4e3a\u901a\u7528\u65b9\u6cd5\u7684\u51fd\u6570","text":"<ul> <li>\u8fed\u4ee3\u6539\u8fdb\u7b97\u6cd5\u901a\u7528\u8868\u8fbe\u5f0f</li> </ul> Python<pre><code>&gt;&gt;&gt; def improve(update, close, guess=1):\n\u00a0\u00a0\u00a0     while not close(guess):\n\u00a0\u00a0\u00a0         guess = update(guess)\n\u00a0\u00a0\u00a0     return guess\n</code></pre> <p>\u8fed\u4ee3\u6539\u8fdb\u7b97\u6cd5\u6c42\u9ec4\u91d1\u5206\u5272\uff1a</p> Python<pre><code>def improve(update,close,guess=1):\n    while not close(guess):\n        guess = update(guess)\n    return guess\n\ndef approx_eq(x,y,tolerance = 1e-15):\n    return abs(x - y) &lt; tolerance\n\ndef golden_update(x):\n    return 1/x + 1\n\ndef golden_close(x):\n    return approx_eq(x * x,x + 1)\n\nprint(improve(golden_update,golden_close))\n</code></pre> <p>\u6d4b\u8bd5\u4ee3\u7801\uff1a</p> Python<pre><code>from math import sqrt\nphi = 1/2 + sqrt(5)/2\ndef improve_test():\n    approx_phi = improve(golden_update, golden_close)\n    assert approx_eq(phi, approx_phi), 'phi differs from its approximation'\nimprove_test()\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#163-iii","title":"1.6.3 \u5b9a\u4e49\u51fd\u6570III: \u5d4c\u5957\u5b9a\u4e49","text":"<ul> <li>\u95ed\u5305\uff1a\u5728 Python \u4e2d\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5d4c\u5957\u7684\u51fd\u6570\u65f6\uff0c\u5d4c\u5957\u51fd\u6570\u4f1a\u201c\u6355\u83b7\u201d\u5916\u90e8\u51fd\u6570\u7684\u53d8\u91cf\u3002\u8fd9\u4e2a\u7279\u6027\u53eb\u505a \u95ed\u5305\u3002\u95ed\u5305\u4f7f\u5f97\u5d4c\u5957\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u5e76\u4fee\u6539\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u5916\u90e8\u51fd\u6570\u5df2\u7ecf\u6267\u884c\u5b8c\u6bd5\u3002</li> <li>\u53ef\u53d8\u5bf9\u8c61\uff08\u5982\u5217\u8868\u3001\u5b57\u5178\uff09\u5728\u5d4c\u5957\u51fd\u6570\u4e2d\u4fee\u6539\u65f6\uff0c\u4e0d\u9700\u8981 <code>nonlocal</code>\uff0c\u56e0\u4e3a\u4fee\u6539\u7684\u662f\u5bf9\u8c61\u7684\u5185\u90e8\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u3002</li> <li>\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff08\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\uff09\u5728\u5d4c\u5957\u51fd\u6570\u4e2d\u4fee\u6539\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528 <code>nonlocal</code> \u6765\u4fee\u6539\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u3002</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#164","title":"1.6.4 \u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u51fd\u6570","text":"<p>\u793a\u4f8b\uff1a</p> Python<pre><code>def composel1(f,g):\n    def h(x):\n        return f(g(x))\n    return h\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#165","title":"1.6.5 \u793a\u4f8b\uff1a\u725b\u987f\u6cd5","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#166-curring","title":"1.6.6 \u67ef\u91cc\u5316 (Curring)","text":"<p>\u793a\u4f8b\uff1apow \u51fd\u6570\u7684\u67ef\u91cc\u5316\u7248\u672c</p> Python<pre><code>from math import pow\ndef curry(x):\n    def f(y):\n        return pow(x,y)\n    return f\nh = curry(2)\nprint(h(3))\nprint(curry(2)(3))\n</code></pre> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u624b\u52a8\u8fdb\u884c\u4e86 pow \u51fd\u6570\u7684\u67ef\u91cc\u5316\u53d8\u6362\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u51fd\u6570\u6765\u4e86\u81ea\u52a8\u8fdb\u884c\u67ef\u91cc\u5316\u4ee5\u53ca\u9006\u67ef\u91cc\u5316 \u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def curry2(f):\n        \"\"\"\u8fd4\u56de\u7ed9\u5b9a\u7684\u53cc\u53c2\u6570\u51fd\u6570\u7684\u67ef\u91cc\u5316\u7248\u672c\"\"\"\n        def g(x):\n            def h(y):\n                return f(x, y)\n            return h\n        return g\n&gt;&gt;&gt; def uncurry2(g):\n        \"\"\"\u8fd4\u56de\u7ed9\u5b9a\u7684\u67ef\u91cc\u5316\u51fd\u6570\u7684\u53cc\u53c2\u6570\u7248\u672c\"\"\"\n        def f(x, y):\n            return g(x)(y)\n        return f\n&gt;&gt;&gt; pow_curried = curry2(pow)\n&gt;&gt;&gt; pow_curried(2)(5)\n32\n&gt;&gt;&gt; map_to_range(0, 10, pow_curried(2))\n1\n2\n4\n8\n16\n32\n64\n128\n256\n512\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#167-lambda","title":"1.6.7 Lambda \u8868\u8fbe\u5f0f","text":"<p>\u4f8b\u5982\u590d\u5408 f \u548c g \u4e24\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff081.6.3\uff09</p> Python<pre><code>def composel1(f,g):\n    def h(x):\n        return f(g(x))\n    return h\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u5199\u4f5c\uff1a</p> Python<pre><code>def composel1(f,g):\n    return lambda x: f(g(x))\n</code></pre> <p>\u903b\u8f91\u5982\u4e0b\uff1a</p> Text Only<pre><code>lambda              x         :              f(g(x))\n\"A function that    takes x   and returns    f(g(x))\"\n</code></pre> <p>PS\uff1a\u66f4\u7b80\u6d01\u7684\u5199\u6cd5</p> Python<pre><code>composel1 = lambda f,g: lambda x: f(g(x))\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#168","title":"1.6.8 \u62bd\u8c61\u548c\u4e00\u7b49\u51fd\u6570","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u7f16\u7a0b\u8bed\u8a00\u4f1a\u5bf9\u8ba1\u7b97\u5143\u7d20\u7684\u64cd\u4f5c\u65b9\u5f0f\u65bd\u52a0\u9650\u5236\u3002\u62e5\u6709\u6700\u5c11\u9650\u5236\u7684\u5143\u7d20\u53ef\u4ee5\u83b7\u5f97\u4e00\u7b49\u5730\u4f4d\uff08first-class status\uff09\u3002\u8fd9\u4e9b\u4e00\u7b49\u5143\u7d20\u7684\u201c\u6743\u5229\u548c\u7279\u6743\u201d\u5305\u62ec\uff1a</p> <ol> <li>\u53ef\u4ee5\u4e0e\u540d\u79f0\u7ed1\u5b9a</li> <li>\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570</li> <li>\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u7ed3\u679c\u8fd4\u56de</li> <li>\u53ef\u4ee5\u5305\u542b\u5728\u6570\u636e\u7ed3\u6784\u4e2d</li> </ol> <p>Python \u6388\u4e88\u51fd\u6570\u5b8c\u5168\u7684\u4e00\u7b49\u5730\u4f4d\uff0c\u7531\u6b64\u5e26\u6765\u7684\u8868\u8fbe\u80fd\u529b\u7684\u63d0\u5347\u662f\u5de8\u5927\u7684\u3002</p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#169","title":"1.6.9 \u51fd\u6570\u88c5\u9970\u5668","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#1610-self-reference","title":"1.6.10 self-reference","text":"<p>\u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def print_all(x):\n...     print(x)\n...     return print_all\n...\n&gt;&gt;&gt; print_all(1)(2)(100) \n1\n2\n100\n&lt;function print_all at 0x000002E6A80AF560&gt;\n\n&gt;&gt;&gt; def print_sum(x):  \n...     print(x)\n...     def h(y): \n...             return print_sum(x + y)\n...     return h\n...\n&gt;&gt;&gt; print_sum(1)(3)(3)(5)\n1\n4\n7\n12\n&lt;function print_sum.&lt;locals&gt;.h at 0x000002E6A80AF6A0&gt;\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#17","title":"1.7 \u9012\u5f52\u51fd\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#171","title":"1.7.1 \u9012\u5f52\u51fd\u6570\u5256\u6790","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#172","title":"1.7.2 \u4e92\u9012\u5f52","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#173","title":"1.7.3 \u9012\u5f52\u51fd\u6570\u4e2d\u7684\u6253\u5370","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#174","title":"1.7.4 \u6811\u9012\u5f52","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#175","title":"1.7.5 \u793a\u4f8b\uff1a\u5206\u5272\u6570","text":"<p>\u6c42\u6b63\u6574\u6570 n \u7684\u5206\u5272\u6570\uff0c\u6700\u5927\u90e8\u5206\u4e3a m\uff0c\u5373 n \u53ef\u4ee5\u5206\u5272\u4e3a\u4e0d\u5927\u4e8e m \u7684\u6b63\u6574\u6570\u7684\u548c\uff0c\u5e76\u4e14\u6309\u9012\u589e\u987a\u5e8f\u6392\u5217\u3002\u4f8b\u5982\uff0c\u4f7f\u7528 4 \u4f5c\u4e3a\u6700\u5927\u6570\u5bf9 6 \u8fdb\u884c\u5206\u5272\u7684\u65b9\u5f0f\u6709 9 \u79cd\u3002</p> Text Only<pre><code>1.  6 = 2 + 4\n2.  6 = 1 + 1 + 4\n3.  6 = 3 + 3\n4.  6 = 1 + 2 + 3\n5.  6 = 1 + 1 + 1 + 3\n6.  6 = 2 + 2 + 2\n7.  6 = 1 + 1 + 2 + 2\n8.  6 = 1 + 1 + 1 + 1 + 2\n9.  6 = 1 + 1 + 1 + 1 + 1 + 1\n</code></pre> <p>\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a\u00a0<code>count_partitions(n, m)</code>\u00a0\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4f7f\u7528\u00a0<code>m</code>\u00a0\u4f5c\u4e3a\u6700\u5927\u90e8\u5206\u5bf9 n \u8fdb\u884c\u5206\u5272\u7684\u65b9\u5f0f\u7684\u6570\u91cf\u3002\u8fd9\u4e2a\u51fd\u6570\u6709\u4e00\u4e2a\u4f7f\u7528\u6811\u9012\u5f52\u7684\u7b80\u5355\u7684\u89e3\u6cd5\uff0c\u5b83\u57fa\u4e8e\u4ee5\u4e0b\u7684\u89c2\u5bdf\u7ed3\u679c\uff1a</p> <p>\u4f7f\u7528\u6700\u5927\u6570\u4e3a m \u7684\u6574\u6570\u5206\u5272 n \u7684\u65b9\u5f0f\u7684\u6570\u91cf\u7b49\u4e8e</p> <ol> <li>\u4f7f\u7528\u6700\u5927\u6570\u4e3a m \u7684\u6574\u6570\u5206\u5272 n-m \u7684\u65b9\u5f0f\u7684\u6570\u91cf\uff0c\u52a0\u4e0a</li> <li>\u4f7f\u7528\u6700\u5927\u6570\u4e3a m-1 \u7684\u6574\u6570\u5206\u5272 n \u7684\u65b9\u5f0f\u7684\u6570\u91cf</li> </ol> <p>\u8981\u7406\u89e3\u4e3a\u4ec0\u4e48\u4e0a\u9762\u7684\u65b9\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 n \u7684\u6240\u6709\u5206\u5272\u65b9\u5f0f\u5206\u4e3a\u4e24\u7ec4\uff1a\u81f3\u5c11\u5305\u542b\u4e00\u4e2a m \u7684\u548c\u4e0d\u5305\u542b m \u7684\u3002\u6b64\u5916\uff0c\u7b2c\u4e00\u7ec4\u4e2d\u7684\u6bcf\u6b21\u5206\u5272\u90fd\u662f\u5bf9 n-m \u7684\u5206\u5272\uff0c\u7136\u540e\u5728\u6700\u540e\u52a0\u4e0a m\u3002\u5728\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c\u524d\u4e24\u79cd\u62c6\u5206\u5305\u542b 4\uff0c\u800c\u5176\u4f59\u7684\u4e0d\u5305\u542b\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u5730\u5c06\u4f7f\u7528\u6700\u5927\u6570\u4e3a m \u7684\u6574\u6570\u5206\u5272 n \u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u4e24\u4e2a\u8f83\u7b80\u5355\u7684\u95ee\u9898\uff1a\u2460 \u4f7f\u7528\u6700\u5927\u6570\u4e3a m \u7684\u6574\u6570\u5206\u5272\u66f4\u5c0f\u7684\u6570\u5b57 n-m\uff0c\u4ee5\u53ca \u2461 \u4f7f\u7528\u6700\u5927\u6570\u4e3a m-1 \u7684\u6574\u6570\u5206\u5272 n\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u5b83\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4ee5\u4e0b\u7684\u57fa\u7ebf\u60c5\u51b5\uff1a</p> <ol> <li>\u6574\u6570 0 \u53ea\u6709\u4e00\u79cd\u5206\u5272\u65b9\u5f0f</li> <li>\u8d1f\u6574\u6570 n \u65e0\u6cd5\u5206\u5272\uff0c\u5373 0 \u79cd\u65b9\u5f0f</li> <li>\u4efb\u4f55\u5927\u4e8e 0 \u7684\u6b63\u6574\u6570 n \u4f7f\u7528 0 \u6216\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u5206\u5272\u7684\u65b9\u5f0f\u6570\u91cf\u4e3a 0</li> </ol> <p>\u793a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; def count_partitions(n, m):\n\u00a0\u00a0\u00a0     \"\"\"\u8ba1\u7b97\u4f7f\u7528\u6700\u5927\u6570 m \u7684\u6574\u6570\u5206\u5272 n \u7684\u65b9\u5f0f\u7684\u6570\u91cf\"\"\"\n\u00a0\u00a0\u00a0     if n == 0:\n\u00a0\u00a0\u00a0         return 1\n\u00a0\u00a0\u00a0     elif n &lt; 0:\n\u00a0\u00a0\u00a0         return 0\n\u00a0\u00a0\u00a0     elif m == 0:\n\u00a0\u00a0\u00a0         return 0\n\u00a0\u00a0\u00a0     else:\n\u00a0\u00a0\u00a0         return count_partitions(n-m, m) + count_partitions(n, m-1)\n\n&gt;&gt;&gt; count_partitions(6, 4)\n9\n&gt;&gt;&gt; count_partitions(5, 5)\n7\n&gt;&gt;&gt; count_partitions(10, 10)\n42\n&gt;&gt;&gt; count_partitions(15, 15)\n176\n&gt;&gt;&gt; count_partitions(20, 20)\n627\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#2","title":"2 \u4f7f\u7528\u6570\u636e\u6784\u5efa\u62bd\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#21","title":"2.1 \u5f15\u8a00","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#211","title":"2.1.1 \u539f\u59cb\u6570\u636e\u7c7b\u578b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#22","title":"2.2 \u6570\u636e\u62bd\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#221","title":"2.2.1 \u793a\u4f8b\uff1a\u6709\u7406\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#222","title":"2.2.2 \u5bf9","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#223","title":"2.2.3 \u62bd\u8c61\u5c4f\u969c","text":"<p>\u62bd\u8c61\u5c4f\u969c\uff08Abstraction Barrier\uff09\u662f\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5e2e\u52a9\u6211\u4eec\u7ba1\u7406\u590d\u6742\u6027\uff0c\u786e\u4fdd\u4ee3\u7801\u6a21\u5757\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u89c4\u5b9a\u4e86\u5982\u4f55\u4f7f\u7528\u4e00\u4e2a\u6a21\u5757\uff0c\u4ee5\u53ca\u4e0d\u9700\u8981\u77e5\u9053\u6a21\u5757\u5185\u90e8\u7684\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u3002\u6211\u4eec\u53ea\u9700\u77e5\u9053\u6a21\u5757\u63d0\u4f9b\u4e86\u54ea\u4e9b\u529f\u80fd\uff0c\u800c\u4e0d\u5173\u5fc3\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\u7684\u3002</p> <p>1. \u5496\u5561\u673a\u7684\u4f8b\u5b50</p> <ul> <li>\u62bd\u8c61\u5c4f\u969c\uff1a \u4f60\u53ea\u9700\u8981\u6309\u4e0b\u201c\u5f00\u59cb\u201d\u6309\u94ae\uff0c\u7b49\u5f85\u4e00\u4f1a\u513f\uff0c\u5496\u5561\u5c31\u4f1a\u81ea\u52a8\u51fa\u6765\u3002</li> <li>\u5185\u90e8\u5b9e\u73b0\uff08\u88ab\u9690\u85cf\uff09\uff1a \u4f60\u4e0d\u9700\u8981\u77e5\u9053\u6c34\u5982\u4f55\u88ab\u52a0\u70ed\u3001\u5496\u5561\u8c46\u5982\u4f55\u88ab\u7814\u78e8\uff0c\u6216\u8005\u6c34\u662f\u5982\u4f55\u6d41\u8fc7\u5496\u5561\u7c89\u7684\u3002</li> </ul> <p>\u5728\u7f16\u7a0b\u4e2d\u7684\u7c7b\u6bd4\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a <code>CoffeeMachine</code> \u7c7b\uff0c\u4f60\u53ea\u9700\u8981\u8c03\u7528 <code>make_coffee()</code> \u65b9\u6cd5\uff0c\u800c\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u5185\u90e8\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002</p> Python<pre><code>class CoffeeMachine:\n    def make_coffee(self):\n        self._heat_water()\n        self._grind_beans()\n        self._brew()\n        print(\"Your coffee is ready!\")\n\n    def _heat_water(self):\n        print(\"Heating water...\")\n\n    def _grind_beans(self):\n        print(\"Grinding coffee beans...\")\n\n    def _brew(self):\n        print(\"Brewing the coffee...\")\n\n# \u4f7f\u7528\u8005\u53ea\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\nmachine = CoffeeMachine()\nmachine.make_coffee()\n</code></pre> <p>\u62bd\u8c61\u5c4f\u969c\uff1a \u4f60\u53ea\u8c03\u7528 <code>make_coffee()</code>\uff0c\u5e76\u4e0d\u9700\u8981\u4e86\u89e3 <code>_heat_water</code>\u3001<code>_grind_beans</code> \u8fd9\u4e9b\u7ec6\u8282\u3002</p> <p>\u5f53\u7a0b\u5e8f\u4e2d\u6709\u4e00\u90e8\u5206\u672c\u53ef\u4ee5\u4f7f\u7528\u66f4\u9ad8\u7ea7\u522b\u51fd\u6570\u4f46\u5374\u4f7f\u7528\u4e86\u4f4e\u7ea7\u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u8fdd\u53cd\u62bd\u8c61\u5c4f\u969c\u3002\u4f8b\u5982\uff0c\u8ba1\u7b97\u6709\u7406\u6570\u5e73\u65b9\u7684\u51fd\u6570\u6700\u597d\u7528\u00a0<code>mul_rational</code>\u00a0\u5b9e\u73b0\uff0c\u5b83\u4e0d\u5bf9\u6709\u7406\u6570\u7684\u5b9e\u73b0\u505a\u4efb\u4f55\u5047\u8bbe\u3002</p> Python<pre><code>&gt;&gt;&gt; def square_rational(x):\n        return mul_rational(x, x)\n</code></pre> <p>\u76f4\u63a5\u5f15\u7528\u5206\u5b50\u548c\u5206\u6bcd\u4f1a\u8fdd\u53cd\u4e00\u4e2a\u62bd\u8c61\u5c4f\u969c\u3002</p> Python<pre><code>&gt;&gt;&gt; def square_rational_violating_once(x):\n        return rational(numer(x) * numer(x), denom(x) * denom(x))\n</code></pre> <p>\u5047\u8bbe\u6709\u7406\u6570\u4f1a\u8868\u793a\u4e3a\u53cc\u5143\u7d20\u5217\u8868\u5c06\u8fdd\u53cd\u4e24\u4e2a\u62bd\u8c61\u5c4f\u969c\u3002</p> Python<pre><code>&gt;&gt;&gt; def square_rational_violating_twice(x):\n        return [x[0] * x[0], x[1] * x[1]]\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#224","title":"2.2.4 \u6570\u636e\u7684\u5c5e\u6027","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#23","title":"2.3 \u5e8f\u5217","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#231","title":"2.3.1 \u5217\u8868","text":"<ul> <li><code>s.pop (i)</code> :\u5220\u9664\u4e0b\u6807\u4e3a i \u7684\u5143\u7d20\u5e76\u8fd4\u56de s[i], \u5982\u679c\u65e0\u53c2\u6570\u5219\u5220\u9664\u5e76\u8fd4\u56de\u672b\u5c3e\u5143\u7d20 </li> <li><code>s.remove(x)</code> :\u5220\u9664\u5217\u8868\u4e2d\u7b2c\u4e00\u4e2a\u503c\u4e3a x \u7684\u5143\u7d20\uff0c\u65e0\u8fd4\u56de\u503c</li> <li><code>s.extend(iterable)</code> :\u5c06 <code>iterable</code> \uff08\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff09\u7684\u5143\u7d20\u9010\u4e2a\u6dfb\u52a0\u5230\u5217\u8868 s \u672b\u5c3e\u3002\u76f4\u63a5\u4fee\u6539 s\uff0c\u65e0\u8fd4\u56de\u503c</li> <li><code>s.append(i)</code> :\u5728\u5217\u8868 s \u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 i \uff0c\u5e76\u76f4\u63a5\u4fee\u6539 s</li> <li><code>s.insert(index,value)</code> :\u5728\u5217\u8868 s \u7684\u6307\u5b9a\u4f4d\u7f6e index \u5904\u63d2\u5165\u5143\u7d20 value \uff0c\u5e76\u76f4\u63a5\u4fee\u6539 s, \u82e5 index \u8d85\u8fc7\u5217\u8868\u957f\u5ea6\u5219\u6dfb\u52a0\u5230\u6700\u540e</li> <li><code>s.remove(value)</code> :\u5220\u9664\u5217\u8868\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d <code>value</code> \u7684\u5143\u7d20\u3002</li> <li><code>sorted(iterable, key=None, reverse=False)</code> : \u9ed8\u8ba4\u5347\u5e8f\u6392\u5217\uff0ckey \u662f\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\u7684\u51fd\u6570\uff0c\u4e0d\u4fee\u6539\u539f\u5217\u8868\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5217\u8868</li> <li><code>s.sort(key=None, reverse=False)</code> : \u76f4\u63a5\u4fee\u6539\u539f\u5217\u8868\u800c\u4e0d\u8fd4\u56de\u65b0\u5217\u8868</li> </ul> Python<pre><code>s1 = [1, 2, 3]\ns2 = [4, 5, 6]\ns1.extend(s2)\nprint(s1)  # \u8f93\u51fa: [1, 2, 3, 4, 5, 6]\n</code></pre> <p>\u4e00\u9053\u9519\u9898\uff1a</p> Python<pre><code>&gt;&gt;&gt; s = [3,4,5]\n&gt;&gt;&gt; s.extend([s.append(9), s.append(10)])\n&gt;&gt;&gt; s\n[3, 4, 5, 9, 10, None, None]\n&gt;&gt;&gt;\n</code></pre> <p></p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#232","title":"2.3.2 \u5e8f\u5217\u904d\u5386","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#233","title":"2.3.3 \u5e8f\u5217\u5904\u7406","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#234","title":"2.3.4 \u5e8f\u5217\u62bd\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#235","title":"2.3.5 \u5b57\u7b26\u4e32","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#236","title":"2.3.6 \u6811","text":"<p>\u56fe\u7247\u4e2d\u7684\u4ee3\u7801\uff1a</p> Python<pre><code>def tree(label,branches=[]):\n    for branch in branches:\n        assert is_tree(branch), 'branches must be tree'\n    return [label] + list(branches)\n\ndef label(tree):\n    return tree[0]\n\ndef branches(tree):\n    return tree[1:]\n\ndef is_leaf(tree):\n    if(not branches(tree)):\n        return True\n    else:\n        return False\n\ndef is_tree(tree):\n    if(type(tree) != list or len(tree) &lt; 1):\n        return False\n    else:\n        for branch in branches(tree):\n            if(not is_tree(branch)):\n                return False\n    return True\n</code></pre> <ul> <li>\u5206\u5272\u6811\uff1a</li> </ul> Python<pre><code>def partition_tree(n,m):\n    if(n == 0):\n        return tree(True)\n    elif(n &lt; 0 or m == 0):\n        return tree(False)      \n    else:\n        left = partition_tree(n - m, m)\n        right = partition_tree(n, m - 1)\n        return tree(m, [left,right])\n</code></pre> <ul> <li>\u6590\u6ce2\u90a3\u5951\u6811\uff1a</li> </ul> Python<pre><code>&gt;&gt;&gt; def fib_tree(n):\n        if n == 0 or n == 1:\n            return tree(n)\n        else:\n            left, right = fib_tree(n-2), fib_tree(n-1)\n            fib_n = label(left) + label(right)\n            return tree(fib_n, [left, right])\n&gt;&gt;&gt; fib_tree(5)\n[5, [2, [1], [1, [0], [1]]], [3, [1, [0], [1]], [2, [1], [1, [0], [1]]]]]\n</code></pre> Python<pre><code>&gt;&gt;&gt; def count_leaves(tree):\n      if is_leaf(tree):\n          return 1\n      else:\n          branch_counts = [count_leaves(b) for b in branches(tree)]\n          return sum(branch_counts)\n&gt;&gt;&gt; count_leaves(fib_tree(5))\n8\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#237","title":"2.3.7 \u94fe\u8868","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#24","title":"2.4 \u53ef\u53d8\u6570\u636e","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#241","title":"2.4.1 \u5bf9\u8c61\u9690\u55bb","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#242","title":"2.4.2 \u5e8f\u5217\u5bf9\u8c61","text":"<p>\u50cf\u6570\u5b57\u8fd9\u6837\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5b9e\u4f8b\u662f\u4e0d\u53ef\u53d8\uff08immutable\uff09\u7684\u3002\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u503c\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u662f\u4e0d\u53ef\u4ee5\u66f4\u6539\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5217\u8868\u5c31\u662f\u53ef\u53d8\u7684\uff08mutable\uff09\u3002</p> Python<pre><code>&gt;&gt;&gt; chinese = ['coin', 'string', 'myriad']  # \u4e00\u7ec4\u5b57\u7b26\u4e32\u5217\u8868\n&gt;&gt;&gt; suits = chinese                         # \u4e3a\u540c\u4e00\u4e2a\u5217\u8868\u6307\u5b9a\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u540d\n&gt;&gt;&gt; suits.pop()             # \u4ece\u5217\u8868\u4e2d\u79fb\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n'myriad'\n&gt;&gt;&gt; suits.remove('string')  # \u4ece\u5217\u8868\u4e2d\u79fb\u9664\u7b2c\u4e00\u4e2a\u4e0e\u53c2\u6570\u76f8\u540c\u7684\u5143\u7d20\n&gt;&gt;&gt; suits.append('cup')              # \u5728\u5217\u8868\u6700\u540e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n&gt;&gt;&gt; suits.extend(['sword', 'club'])  # \u5c06\u53e6\u5916\u4e00\u4e2a\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230\u5f53\u524d\u5217\u8868\u6700\u540e\n&gt;&gt;&gt; suits[2] = 'spade'  # \u66ff\u6362\u67d0\u4e2a\u5143\u7d20\n&gt;&gt;&gt; suits\n['coin', 'cup', 'spade', 'club']\n&gt;&gt;&gt; suits[0:2] = ['heart', 'diamond']  # \u66ff\u6362\u4e00\u7ec4\u6570\u636e\n&gt;&gt;&gt; suits\n['heart', 'diamond', 'spade', 'club']\n&gt;&gt;&gt; chinese  # \u8fd9\u4e2a\u53d8\u91cf\u540d\u4e0e \"suits\" \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\n['heart', 'diamond', 'spade', 'club']\n</code></pre> <ul> <li>\u6570\u636e\u5171\u4eab\u548c\u8eab\u4efd\uff08Sharing and Identity\uff09\u3002 \u6b63\u662f\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u5728\u64cd\u4f5c\u6570\u636e\u65f6\u521b\u5efa\u65b0\u7684\u5217\u8868\uff0c\u800c\u662f\u76f4\u63a5\u64cd\u4f5c\u7684\u6e90\u6570\u636e\uff0c\u8fd9\u5c31\u5bfc\u81f4\u53d8\u91cf chinese \u4e5f\u88ab\u6539\u53d8\u4e86\uff0c\u56e0\u4e3a\u5b83\u548c\u53d8\u91cf suits \u7ed1\u5b9a\u5230\u65f6\u540c\u4e00\u4e2a\u5217\u8868\uff01</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5217\u8868\u7684\u6784\u9020\u5668\u51fd\u6570\u00a0<code>list</code>\u00a0\u6765\u5bf9\u4e00\u4e2a\u5217\u8868\u8fdb\u884c\u590d\u5236\u3002\u590d\u5236\u5b8c\u6210\u540e\uff0c\u4e24\u4e2a\u5217\u8868\u6570\u636e\u7684\u6539\u52a8\u4e0d\u4f1a\u518d\u5f71\u54cd\u5f7c\u6b64\uff0c\u9664\u975e\u4e8c\u8005\u5171\u4eab\u4e86\u540c\u4e00\u4efd\u6570\u636e\u3002</p> Python<pre><code>&gt;&gt;&gt; nest = list(suits)  # \u590d\u5236\u4e00\u4e2a\u4e0e suits \u76f8\u540c\u7684\u5217\u8868\uff0c\u5e76\u547d\u540d\u4e3a nest\n&gt;&gt;&gt; nest[0] = suits     # \u521b\u5efa\u4e00\u4e2a\u5d4c\u5957\u5217\u8868\uff0c\u5217\u8868\u7b2c\u4e00\u9879\u662f\u53e6\u4e00\u4e2a\u5217\u8868\n</code></pre> <p>\u6839\u636e\u5f53\u524d\u7684\u8fd0\u884c\u73af\u5883\uff0c\u6539\u52a8\u53d8\u91cf\u00a0<code>suits</code>\u00a0\u6240\u5bf9\u5e94\u7684\u5217\u8868\u6570\u636e\u4f1a\u5f71\u54cd\u5230\u00a0<code>nest</code>\u00a0\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u521a\u521a\u521b\u5efa\u7684\u5d4c\u5957\u5217\u8868\uff0c\u800c\u00a0<code>nest</code>\u00a0\u4e2d\u7684\u5176\u5b83\u5143\u7d20\u4e0d\u53d7\u5f71\u54cd\uff1a</p> Python<pre><code>&gt;&gt;&gt; suits.insert(2, 'Joker')  # \u5728\u4e0b\u6807\u4e3a 2 \u7684\u4f4d\u7f6e\u63d2\u5165\u4e00\u6761\u65b0\u5143\u7d20\uff0c\u5176\u4f59\u5143\u7d20\u76f8\u5e94\u5411\u540e\u79fb\u52a8\n&gt;&gt;&gt; nest\n[['heart', 'diamond', 'Joker', 'spade', 'club'], 'diamond', 'spade', 'club']\n</code></pre> <ul> <li>\u53ef\u4ee5\u7528 <code>is</code> \u548c <code>is not</code> \u6765\u533a\u5206\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61</li> </ul> <p>\u5143\u7ec4\uff1a Python \u5185\u7f6e\u7c7b\u578b\u00a0<code>tuple</code>\u00a0\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5176\u662f\u4e0d\u53ef\u53d8\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u540c\u6570\u636e\u7528\u9017\u53f7\u5206\u9694\uff0c\u7528\u8fd9\u79cd\u5b57\u9762\u91cf\u7684\u65b9\u5f0f\u5373\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002\u62ec\u53f7\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u4e00\u822c\u90fd\u4f1a\u52a0\u4e0a\u3002\u5143\u7ec4\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4efb\u610f\u5bf9\u8c61\u3002</p> Python<pre><code>&gt;&gt;&gt; 1, 2 + 3\n(1, 5)\n&gt;&gt;&gt; (\"the\", 1, (\"and\", \"only\"))\n('the', 1, ('and', 'only'))\n&gt;&gt;&gt; type( (10, 20) )\n&lt;class 'tuple'&gt;\n&gt;&gt;&gt; ()    # 0 elements\n()\n&gt;&gt;&gt; (10,) # 1 element\n(10,)\n</code></pre> <ul> <li>\u548c\u5217\u8868\u76f8\u540c\uff0c\u5143\u7ec4\u6709\u786e\u5b9a\u7684\u957f\u5ea6\uff0c\u5e76\u652f\u6301\u5143\u7d20\u7d22\u5f15\u3002\u5143\u7ec4\u8fd8\u6709\u4e00\u4e9b\u4e0e\u5217\u8868\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u00a0<code>count</code>\u00a0\u548c\u00a0<code>index</code></li> </ul> Python<pre><code>&gt;&gt;&gt; code = (\"up\", \"up\", \"down\", \"down\") + (\"left\", \"right\") * 2\n&gt;&gt;&gt; len(code)\n8\n&gt;&gt;&gt; code[3]\n'down'\n&gt;&gt;&gt; code.count(\"down\")\n2\n&gt;&gt;&gt; code.index(\"left\")\n4\n</code></pre> <ul> <li>\u5c3d\u7ba1\u5143\u7ec4\u4e0d\u53ef\u53d8\uff0c\u4f46\u662f\u82e5\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u672c\u8eab\u662f\u53ef\u53d8\u6570\u636e\uff0c\u90a3\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u5bf9\u8be5\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\u7684</li> </ul> <p></p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#243","title":"2.4.3 \u5b57\u5178","text":"<ul> <li>\u5b57\u5178\u662f\u65e0\u5e8f\u7684\uff0c\u591a\u6b21\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5b57\u5178\u8f93\u51fa\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u6709\u6240\u53d8\u5316</li> </ul> <p>\u5b57\u5178\u7684\u4e00\u4e9b\u64cd\u4f5c</p> Python<pre><code>&gt;&gt;&gt; sum(numerals.values())\n66\n&gt;&gt;&gt; dict([(3, 9), (4, 16), (5, 25)])\n{3: 9, 4: 16, 5: 25}\n</code></pre> <ul> <li><code>key</code> \u4e0d\u80fd\u662f\u53ef\u53d8\u6570\u636e\u4e5f\u4e0d\u80fd\u5305\u542b\u53ef\u53d8\u6570\u636e\uff0c\u6bd4\u5982\u5143\u7ec4\u53ef\u4ee5\u505a <code>key</code> \u4f46\u662f\u5217\u8868\u4e0d\u884c</li> <li>\u4e00\u4e2a <code>key</code> \u53ea\u80fd\u5bf9\u5e94\u4e00\u4e2a <code>value</code></li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#244","title":"2.4.4 \u5c40\u90e8\u72b6\u6001","text":"Python<pre><code>&gt;&gt;&gt; def make_withdraw(balance):\n        \"\"\"\u8fd4\u56de\u4e00\u4e2a\u6bcf\u6b21\u8c03\u7528\u90fd\u4f1a\u51cf\u5c11 balance \u7684 withdraw \u51fd\u6570\"\"\"\n        def withdraw(amount):\n            nonlocal balance                 # \u58f0\u660e balance \u662f\u975e\u5c40\u90e8\u7684\n            if amount &gt; balance:\n                return '\u4f59\u989d\u4e0d\u8db3'\n            balance = balance - amount       # \u91cd\u65b0\u7ed1\u5b9a\n            return balance\n        return withdraw\n&gt;&gt;&gt; withdraw(25)\n75\n&gt;&gt;&gt; withdraw(25)\n50\n&gt;&gt;&gt; withdraw(60)\n'\u4f59\u989d\u4e0d\u8db3'\n&gt;&gt;&gt; withdraw(15)\n35\n</code></pre> <ul> <li>\u5f53 balance \u5c5e\u6027\u4e3a\u58f0\u660e\u4e3a nonlocal \u540e\uff0c\u6bcf\u5f53\u5b83\u7684\u503c\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u76f8\u5e94\u7684\u53d8\u5316\u90fd\u4f1a\u540c\u6b65\u66f4\u65b0\u5230\u00a0<code>balance</code>\u00a0\u5c5e\u6027\u7b2c\u4e00\u6b21\u88ab\u58f0\u660e\u7684\u4f4d\u7f6e</li> <li>\u7b2c\u4e8c\u6b21\u8c03\u7528 withdraw \u50cf\u5f80\u5e38\u4e00\u6837\u521b\u5efa\u4e86\u7b2c\u4e8c\u4e2a\u5c40\u90e8\u5e27\u3002\u5e76\u4e14\uff0c\u8fd9\u4e24\u4e2a withdraw \u5e27\u90fd\u5177\u6709\u76f8\u540c\u7684\u7236\u7ea7\u5e27\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u90fd\u96c6\u6210\u4e86 make_withdraw \u7684\u8fd0\u884c\u73af\u5883\uff0c\u800c\u53d8\u91cf balance \u5c31\u662f\u5728\u8be5\u73af\u5883\u4e2d\u5b9a\u4e49\u548c\u58f0\u660e\u7684\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230 balance \u53d8\u91cf\u7684\u7ed1\u5b9a\u5173\u7cfb\u3002\u8c03\u7528 withdraw \u4f1a\u6539\u53d8\u5f53\u524d\u8fd0\u884c\u73af\u5883\uff0c\u5e76\u4e14\u5f71\u54cd\u5230\u4e0b\u4e00\u6b21\u8c03\u7528 withdraw \u7684\u7ed3\u679c\u3002nonlocal \u58f0\u660e\u8bed\u53e5\u5141\u8bb8 withdraw \u66f4\u6539 make_withdraw \u8fd0\u884c\u5e27\u4e2d\u7684\u53d8\u91cf\u3002</li> <li>\u53e6\u5916\uff0c\u5982\u679c\u7528 python tutor \u5b9e\u8df5\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u9519\u8bef\u53d1\u751f\u5728\u7b2c 5 \u884c\u6267\u884c\u4e4b\u524d\uff0c\u8fd9\u610f\u5473\u7740 Python \u5728\u6267\u884c\u7b2c 3 \u884c\u4e4b\u524d\uff0c\u5c31\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8003\u8651\u4e86\u7b2c 5 \u884c\u7684\u4ee3\u7801\u3002</li> <li><code>global</code> \u548c <code>nonlocal</code> \u7684\u533a\u522b\u603b\u7ed3(from ChatGPT4o)</li> </ul> \u7279\u6027 <code>global</code> <code>nonlocal</code> \u4f5c\u7528\u8303\u56f4 \u5f71\u54cd\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf \u5f71\u54cd\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf \u9002\u7528\u573a\u666f \u5728\u51fd\u6570\u5185\u4fee\u6539\u5168\u5c40\u53d8\u91cf \u5728\u5d4c\u5957\u51fd\u6570\u5185\u4fee\u6539\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf \u5e38\u89c1\u9519\u8bef \u5fd8\u8bb0\u58f0\u660e <code>global</code>\uff0c\u5bfc\u81f4\u4fee\u6539\u7684\u662f\u5c40\u90e8\u53d8\u91cf \u5fd8\u8bb0\u58f0\u660e <code>nonlocal</code>\uff0c\u5bfc\u81f4\u4fee\u6539\u7684\u662f\u5d4c\u5957\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf \u591a\u5c42\u5d4c\u5957 \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6a21\u5757\u7ea7\u5168\u5c40\u53d8\u91cf \u53ea\u80fd\u4f5c\u7528\u4e8e\u6700\u8fd1\u4e00\u5c42\u7684\u5c01\u95ed\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf \u4e0d\u80fd\u505a\u7684\u4e8b \u65e0\u6cd5\u4fee\u6539\u5c40\u90e8\u53d8\u91cf\uff0c\u9664\u975e\u663e\u5f0f\u58f0\u660e <code>global</code> \u65e0\u6cd5\u4f5c\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u53ea\u80fd\u4fee\u6539\u5c01\u95ed\u4f5c\u7528\u57df\u4e2d\u7684\u53d8","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#245-non-local","title":"2.4.5 \u975e\u5c40\u90e8 Non-local \u8d4b\u503c\u7684\u597d\u5904","text":"Python<pre><code>def make_withdraw(balance):\n    def withdraw(amount):\n        nonlocal balance\n        if amount &gt; balance:\n            return 'Insufficient funds'\n        balance = balance - amount\n        return balance\n    return withdraw\n\nwd = make_withdraw(20)\nwd2 = make_withdraw(7)\nwd2(6)\nwd(8)\n</code></pre> <ul> <li>\u672a\u6765\u5bf9 wd \u7684\u8c03\u7528\u4e0d\u53d7 wd2 \u7684 balance \u53d8\u5316\u7684\u5f71\u54cd</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#246-non-local","title":"2.4.6 \u975e\u5c40\u90e8 Non-local \u8d4b\u503c\u7684\u4ee3\u4ef7","text":"Python<pre><code>def make_withdraw(balance):\n    def withdraw(amount):\n        nonlocal balance\n        if amount &gt; balance:\n            return 'Insufficient funds'\n        balance = balance - amount\n        return balance\n    return withdraw\n\nwd = make_withdraw(12)\nwd2 = wd\nwd2(1)\nwd(1)\n</code></pre> <ul> <li>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528 wd2 \u547d\u540d\u7684\u51fd\u6570\u786e\u5b9e\u6539\u53d8\u4e86 wd \u547d\u540d\u7684\u51fd\u6570\u7684\u503c\uff0c\u56e0\u4e3a\u4e24\u4e2a\u540d\u79f0\u90fd\u5f15\u7528\u540c\u4e00\u4e2a\u51fd\u6570\u3002</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#247","title":"2.4.7 \u5217\u8868\u548c\u5b57\u5178\u5b9e\u73b0","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#248-dispatch-dictionaries","title":"2.4.8 \u8c03\u5ea6\u5b57\u5178\uff08Dispatch Dictionaries\uff09","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#249-propagating-constraints","title":"2.4.9 \u7ea6\u675f\u4f20\u9012 (Propagating Constraints)","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#25","title":"2.5 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#251","title":"2.5.1 \u5bf9\u8c61\u548c\u7c7b","text":"<ul> <li>\u5b9e\u4f8b\u5c5e\u6027: \u5bf9\u4e8e\u7279\u5b9a\u5bf9\u8c61\uff0c\u5176\u6709\u7279\u5b9a\u503c\u7684\u5c5e\u6027\uff0c\uff08\u800c\u4e0d\u662f\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\uff09\u79f0\u4e3a\u5b9e\u4f8b\u5c5e\u6027</li> </ul> Python<pre><code>&gt;&gt;&gt; class Account:\n        def __init__(self, account_holder):\n            self.balance = 0                    #\u5b9e\u4f8b\u5c5e\u60271\n            self.holder = account_holder        #\u5b9e\u4f8b\u5c5e\u60272\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#252","title":"2.5.2 \u7c7b\u7684\u5b9a\u4e49","text":"Python<pre><code>&gt;&gt;&gt; class Account:\n        def __init__(self, account_holder):\n            self.balance = 0\n            self.holder = account_holder\n</code></pre> <ul> <li><code>Account</code>\u00a0\u7684\u00a0<code>__init__</code>\u00a0\u65b9\u6cd5\u6709\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u00a0<code>self</code>\u00a0\u7ed1\u5b9a\u5230\u65b0\u521b\u5efa\u7684\u00a0<code>Account</code>\u00a0\u5bf9\u8c61\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u00a0<code>account_holder</code>\u00a0\u7ed1\u5b9a\u5230\u8c03\u7528\u7c7b\u8fdb\u884c\u5b9e\u4f8b\u5316\u65f6\u4f20\u9012\u7ed9\u7c7b\u7684\u53c2\u6570\u3002</li> </ul> Python<pre><code>&gt;&gt;&gt; a = Account('Kirk')\n&gt;&gt;&gt; a.balance\n0\n&gt;&gt;&gt; a.holder\n'Kirk'\n</code></pre> <ul> <li>\u6bcf\u4e00\u4e2a <code>account</code> \u6709\u81ea\u5df1\u72ec\u7acb\u7684\u4f59\u989d\u5c5e\u6027</li> </ul> Python<pre><code>&gt;&gt;&gt; b = Account('Spock')\n&gt;&gt;&gt; b.balance = 200\n&gt;&gt;&gt; [acc.balance for acc in (a, b)]\n[0, 200]\n</code></pre> <ul> <li>\u8d4b\u503c\u5c06\u5bf9\u8c61\u7ed1\u5b9a\u5230\u65b0\u540d\u79f0\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u5bf9\u8c61</li> </ul> Python<pre><code>&gt;&gt;&gt; c = a\n&gt;&gt;&gt; c is a\nTrue\n</code></pre> Python<pre><code>&gt;&gt;&gt; class Account:\n        def __init__(self, account_holder):\n            self.balance = 0\n            self.holder = account_holder\n        def deposit(self, amount):\n            self.balance = self.balance + amount\n            return self.balance\n        def withdraw(self, amount):\n            if amount &gt; self.balance:\n                return 'Insufficient funds'\n            self.balance = self.balance - amount\n            return self.balance\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#253","title":"2.5.3 \u6d88\u606f\u4f20\u9012\u548c\u70b9\u8868\u8fbe\u5f0f","text":"<ul> <li>\u5728\u5bf9\u8c61\u4e0a\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u9690\u5f0f\u4f20\u9012\u7ed9\u8be5\u65b9\u6cd5\u3002\u5373\u5bf9\u8c61\u7ed1\u5b9a\u5230\u53c2\u6570 <code>self</code></li> </ul> <p>\u65b9\u6cd5\u548c\u51fd\u6570\u5728\u4ea4\u4e92\u89e3\u91ca\u5668\u4e0b\u7684\u5dee\u5f02\uff1a</p> Python<pre><code>&gt;&gt;&gt; type(Account.deposit)\n&lt;class 'Function'&gt;\n&gt;&gt;&gt; type(spock_account.deposit)\n&lt;class 'method'&gt;\n</code></pre> <ul> <li>\u547d\u540d\u7ea6\u5b9a\uff1a<ul> <li>\u7c7b\u540d\u901a\u5e38\u4f7f\u7528 CapWords \u7ea6\u5b9a\uff08\u4e5f\u79f0\u4e3a CamelCase\uff0c\u56e0\u4e3a\u540d\u79f0\u4e2d\u95f4\u7684\u5927\u5199\u5b57\u6bcd\u770b\u8d77\u6765\u50cf\u9a7c\u5cf0\uff09\u7f16\u5199\u3002\u793a\u4f8b\u5982\u4e0b<ul> <li><code>EmployeeRecord</code></li> <li><code>HttpRequestHandler</code></li> <li><code>DatabaseConnection</code></li> </ul> </li> <li>\u65b9\u6cd5\u540d\u79f0\u9075\u5faa\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u9694\u7684\u5c0f\u5199\u5355\u8bcd\u547d\u540d\u51fd\u6570\u7684\u6807\u51c6\u7ea6\u5b9a\u3002</li> </ul> </li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#254","title":"2.5.4 \u7c7b\u5c5e\u6027","text":"<ul> <li>\u7c7b\u5c5e\u6027\u4e0e\u7c7b\u672c\u8eab\u76f8\u5173\u8054\uff0c\u4e0d\u4e0e\u7c7b\u7684\u4efb\u4f55\u5355\u4e2a\u5b9e\u4f8b\u76f8\u5173\u8054</li> <li>\u7c7b\u5c5e\u6027\u7684\u8d4b\u503c\u4f1a\u6539\u53d8\u6240\u6709\u7c7b\u7684\u5b9e\u4f8b\u7684\u7c7b\u5c5e\u6027\u503c</li> </ul> Python<pre><code>&gt;&gt;&gt; class Account:\n        interest = 0.02            # \u7c7b\u5c5e\u6027\n        def __init__(self, account_holder):\n            self.balance = 0\n            self.holder = account_holder\n        # \u5728\u8fd9\u91cc\u5b9a\u4e49\u66f4\u591a\u7684\u65b9\u6cd5\n&gt;&gt;&gt; spock_account = Account('Spock')\n&gt;&gt;&gt; kirk_account = Account('Kirk')\n&gt;&gt;&gt; spock_account.interest\n0.02\n&gt;&gt;&gt; kirk_account.interest\n0.02\n&gt;&gt;&gt; Account.interest = 0.04 #\u7c7b\u5c5e\u6027\u7684\u8d4b\u503c\u4f1a\u6539\u53d8\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u5c5e\u6027\u503c\n&gt;&gt;&gt; spock_account.interest\n0.04\n&gt;&gt;&gt; kirk_account.interest\n0.04\n</code></pre> <p>\u7c7b\u5c5e\u6027\u548c\u5b9e\u4f8b\u5c5e\u6027\u5f88\u6709\u53ef\u80fd\u4f1a\u540c\u540d\uff0c\u6240\u4ee5\u8ba1\u7b97\u70b9\u8868\u8fbe\u5f0f\u65f6\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ol> <li>\u70b9\u8868\u8fbe\u5f0f\u5de6\u4fa7\u7684\u00a0<code>&lt;expression&gt;</code>\u00a0\uff0c\u751f\u6210\u70b9\u8868\u8fbe\u5f0f\u7684\u5bf9\u8c61\u3002</li> <li><code>&lt;name&gt;</code>\u00a0\u4e0e\u8be5\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5c5e\u6027\u5339\u914d\uff1b\u5982\u679c\u5b58\u5728\u5177\u6709\u8be5\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u5219\u8fd4\u56de\u5c5e\u6027\u503c\u3002</li> <li>\u5982\u679c\u5b9e\u4f8b\u5c5e\u6027\u4e2d\u6ca1\u6709\u00a0<code>&lt;name&gt;</code>\u00a0\uff0c\u5219\u5728\u7c7b\u4e2d\u67e5\u627e\u00a0<code>&lt;name&gt;</code>\uff0c\u751f\u6210\u7c7b\u5c5e\u6027\u3002</li> <li>\u9664\u975e\u5b83\u662f\u51fd\u6570\uff0c\u5426\u5219\u8fd4\u56de\u5c5e\u6027\u503c\u3002\u5982\u679c\u662f\u51fd\u6570\uff0c\u5219\u8fd4\u56de\u8be5\u540d\u79f0\u7ed1\u5b9a\u7684\u65b9\u6cd5\u3002</li> </ol> Python<pre><code>&gt;&gt;&gt; kirk_account.interest = 0.08\n&gt;&gt;&gt; kirk_account.interest\n0.08\n&gt;&gt;&gt; spock_account.interest\n0.04\n&gt;&gt;&gt; Account.interest = 0.05     # \u6539\u53d8\u7c7b\u5c5e\u6027\n&gt;&gt;&gt; spock_account.interest      # \u5b9e\u4f8b\u5c5e\u6027\u53d1\u751f\u53d8\u5316\uff08\u8be5\u5b9e\u4f8b\u4e2d\u6ca1\u6709\u548c\u7c7b\u5c5e\u6027\u540c\u540d\u79f0\u7684\u5b9e\u4f8b\u5c5e\u6027\uff09\n0.05\n&gt;&gt;&gt; kirk_account.interest       # \u5982\u679c\u5b9e\u4f8b\u4e2d\u5b58\u5728\u548c\u7c7b\u5c5e\u6027\u540c\u540d\u7684\u5b9e\u4f8b\u5c5e\u6027\uff0c\u5219\u6539\u53d8\u7c7b\u5c5e\u6027\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u4f8b\u5c5e\u6027\n0.08\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#255","title":"2.5.5 \u7ee7\u627f","text":"Python<pre><code>&gt;&gt;&gt; class CheckingAccount(Account):\n        \"\"\"\u4ece\u8d26\u53f7\u53d6\u94b1\u4f1a\u6263\u51fa\u624b\u7eed\u8d39\u7684\u8d26\u53f7\"\"\"\n        withdraw_charge = 1\n        interest = 0.01\n        def withdraw(self, amount):\n            return Account.withdraw(self, amount + self.withdraw_charge)\n&gt;&gt;&gt; ch = CheckingAccount('Spock')\n&gt;&gt;&gt; ch.interest     # Lower interest rate for checking accounts\n0.01\n&gt;&gt;&gt; ch.deposit(20)  # Deposits are the same\n20\n&gt;&gt;&gt; ch.withdraw(5)  # withdrawals decrease balance by an extra charge\n14\n</code></pre> <ul> <li>checkingAccount \u662f account \u7684\u5b50\u7c7b\uff0c\u5b50\u7c7b\u7ee7\u627f\u5176\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u91cd\u5199\u67d0\u4e9b\u5c5e\u6027\uff0c\u5728\u5b50\u7c7b\u4e2d\u672a\u6307\u5b9a\u7684\u4efb\u4f55\u5185\u5bb9\u90fd\u4f1a\u88ab\u81ea\u52a8\u5047\u5b9a\u4e3a\u4e0e\u7236\u7c7b\u7684\u884c\u4e3a\u4e00\u6837</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#256","title":"2.5.6 \u4f7f\u7528\u7ee7\u627f","text":"<p>\u4e0a\u8ff0\u4f8b\u5b50\u7684\u5b8c\u6574\u5b9e\u73b0\uff1a</p> Python<pre><code>&gt;&gt;&gt; class Account:\n        \"\"\"\u4e00\u4e2a\u4f59\u989d\u975e\u96f6\u7684\u8d26\u6237\u3002\"\"\"\n        interest = 0.02\n        def __init__(self, account_holder):\n            self.balance = 0\n            self.holder = account_holder\n        def deposit(self, amount):\n            \"\"\"\u5b58\u5165\u8d26\u6237 amount\uff0c\u5e76\u8fd4\u56de\u53d8\u5316\u540e\u7684\u4f59\u989d\"\"\"\n            self.balance = self.balance + amount\n            return self.balance\n        def withdraw(self, amount):\n            \"\"\"\u4ece\u8d26\u53f7\u4e2d\u53d6\u51fa amount\uff0c\u5e76\u8fd4\u56de\u53d8\u5316\u540e\u7684\u4f59\u989d\"\"\"\n            if amount &gt; self.balance:\n                return 'Insufficient funds'\n            self.balance = self.balance - amount\n            return self.balance\n&gt;&gt;&gt; class CheckingAccount(Account):\n        \"\"\"\u4ece\u8d26\u53f7\u53d6\u94b1\u4f1a\u6263\u51fa\u624b\u7eed\u8d39\u7684\u8d26\u53f7\"\"\"\n        withdraw_charge = 1\n        interest = 0.01\n        def withdraw(self, amount):\n            return Account.withdraw(self, amount + self.withdraw_charge)\n</code></pre> <p>\u5728\u7c7b\u4e2d\u67e5\u627e\u540d\u79f0\uff1a</p> <ul> <li>\u5982\u679c\u5b83\u547d\u540d\u5728\u6307\u5b9a\u7c7b\u4e2d\u7684\u5c5e\u6027\u5219\u8fd4\u56de\u5c5e\u6027\u503c</li> <li>\u5426\u5219\u5728\u8be5\u7c7b\u7684\u7236\u7c7b\u4e2d\u67e5\u627e\u8be5\u540d\u79f0\u7684\u5c5e\u6027</li> <li>\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u7ec4\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u786e\u4fdd\u4e0d\u540c\u7684\u7c7b\uff08 <code>Account</code> \u548c <code>CheckingAccount</code> \uff09\u90fd\u5177\u6709\u76f8\u540c\u7684\u884c\u4e3a\u3002  </li> <li>\u8fd9\u6837\uff0c\u65e0\u8bba\u662f\u54ea\u79cd\u8d26\u6237\u7c7b\u578b\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u653e\u5fc3\u5730\u4f7f\u7528 <code>deposit</code> \u3001 <code>withdraw</code> \u548c <code>balance</code> \uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u5177\u4f53\u7684\u8d26\u6237\u7c7b\u522b\u3002</li> </ul> <p>\u8fd9\u4e2a\u633a\u7ed5\u7684 </p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#257","title":"2.5.7 \u591a\u7ee7\u627f","text":"Python<pre><code>&gt;&gt;&gt; class SavingsAccount(Account):\n        deposit_charge = 2\n        def deposit(self, amount):\n            return Account.deposit(self, amount - self.deposit_charge)\n&gt;&gt;&gt; class AsSeenOnTVAccount(CheckingAccount, SavingsAccount):\n        def __init__(self, account_holder):\n            self.holder = account_holder\n            self.balance = 1           # \u8d60\u9001\u7684 1 $!\n&gt;&gt;&gt; such_a_deal = AsSeenOnTVAccount(\"John\")\n&gt;&gt;&gt; such_a_deal.balance\n1\n&gt;&gt;&gt; such_a_deal.deposit(20)            # \u8c03\u7528 SavingsAccount \u7684 deposit \u65b9\u6cd5\uff0c\u4f1a\u4ea7\u751f 2 $\u7684\u5b58\u50a8\u8d39\u7528\n19\n&gt;&gt;&gt; such_a_deal.withdraw(5)            # \u8c03\u7528 CheckingAccount \u7684 withdraw \u65b9\u6cd5\uff0c\u4ea7\u751f 1 $\u7684\u53d6\u6b3e\u8d39\u7528\u3002\n13\n</code></pre> <ul> <li>\u7ee7\u627f\u7ed3\u6784\uff1a</li> </ul> <p>\u9075\u5faa\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0b\u5230\u4e0a\u7684\u68c0\u7d22\u89c4\u5219</p> Text Only<pre><code>AsSeenOnTVAccount, CheckingAccount, SavingsAccount, Account, object\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#258","title":"2.5.8 \u5bf9\u8c61\u7684\u4f5c\u7528","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#27","title":"2.7 \u5bf9\u8c61\u62bd\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#271","title":"2.7.1 \u5b57\u7b26\u4e32\u8f6c\u6362","text":"<p>repr(object) -&gt; string</p> <p>Return the canonical string representation of the object.</p> <p>For most object types, eval(repr(object)) == object</p> <p>\u8fd4\u56de\u5bf9\u8c61\u7684\u6807\u51c6\u5b57\u7b26\u4e32\u8868\u793a\u3002</p> <p>\u5bf9\u4e8e\u5927\u591a\u6570\u5bf9\u8c61\u7c7b\u578b\uff0c <code>eval(repr(object)) == object</code> \u3002</p> Python<pre><code>&gt;&gt;&gt; 12e12\n12000000000000.0\n&gt;&gt;&gt; print(repr(12e12))\n12000000000000.0\n</code></pre> Python<pre><code>&gt;&gt;&gt; repr(min)\n'&lt;built-in function min&gt;'\n&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; tues = date(2011, 9, 12)\n&gt;&gt;&gt; repr(tues)\n'datetime.date(2011, 9, 12)'\n&gt;&gt;&gt; str(tues)\n'2011-09-12'\n</code></pre> <ul> <li><code>repr</code> \u51fd\u6570\u65e0\u6cd5\u6b63\u786e\u5730\u5e94\u7528\u5230\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528 object \u7cfb\u7edf-- <code>repr</code> \u603b\u662f\u518d\u5176\u53c2\u6570\u503c\u4e0a\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a <code>__repr__</code> \u7684\u65b9\u6cd5</li> </ul> Python<pre><code>def repr(x):\n    return type(x).__repr__(x)\n</code></pre> Python<pre><code>class Ratio:\n    def __init__(self, n, d):\n        self.numer = n\n        self.denom = d\n    def __repr__(self):\n        return 'Ratio({0}, {1})'.format(self.numer, self.denom)\n    def __str__(self):\n        return '{0}/{1}'.format(self.numer,self.denom)\n</code></pre> Python<pre><code>&gt;&gt;&gt; half = Ratio(1,2) \n&gt;&gt;&gt; half\nRatio(1, 2)\n&gt;&gt;&gt; print(half)\n1/2\n</code></pre> <ul> <li>\u5f53\u4f60\u76f4\u63a5\u8f93\u5165\u5bf9\u8c61\u65f6\uff0cPython \u4f1a\u81ea\u52a8\u8c03\u7528\u8be5\u5bf9\u8c61\u7684 <code>__repr__</code> \u65b9\u6cd5\u6765\u8fd4\u56de\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</li> <li>\u5728\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\uff0cPython \u4f1a\u81ea\u52a8 \u8c03\u7528\u5bf9\u8c61\u7684 <code>__repr__()</code> \u65b9\u6cd5 \u6765\u83b7\u5f97\u8be5\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5e76\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002</li> <li>\u8f93\u51fa <code>Ratio(1, 2)</code> \u6ca1\u6709\u5f15\u53f7\u5305\u56f4\uff0c\u56e0\u4e3a\u5b83\u662f\u5bf9\u8c61\u7684 \u663e\u793a\u5f62\u5f0f\uff0c\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u672c\u8eab\u3002Python \u4f1a\u5c06 <code>__repr__()</code> \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u6253\u5370\u51fa\u6765\u3002</li> <li>\u5f53\u4f60\u4f7f\u7528 <code>print()</code> \u51fd\u6570\u65f6\uff0cPython \u4f1a\u8c03\u7528\u8be5\u5bf9\u8c61\u7684 <code>__str__</code> \u65b9\u6cd5\u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</li> <li><code>format</code> : \u683c\u5f0f\u5316\u8f93\u51fa\uff0c{}\u5185\u7684\u6570\u5b57\u8868\u793a\u7d22\u5f15</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#272","title":"2.7.2 \u4e13\u7528\u65b9\u6cd5","text":"Python<pre><code>&gt;&gt;&gt; Account.__bool__ = lambda self: self.balance != 0\n</code></pre> Python<pre><code>&gt;&gt;&gt; bool(Account('Jack'))\nFalse\n&gt;&gt;&gt; if not Account('Jack'):\n        print('Jack has nothing')\nJack has nothing\n</code></pre> <ul> <li>\u5982\u679c\u5e8f\u5217\u6ca1\u6709\u63d0\u4f9b\u00a0<code>__bool__</code>\u00a0\u65b9\u6cd5\uff0c\u90a3\u4e48 Python \u4f1a\u4f7f\u7528\u5e8f\u5217\u7684\u957f\u5ea6\u6765\u786e\u5b9a\u5176\u771f\u5047\u503c\u3002\u7a7a\u7684\u5e8f\u5217\u662f\u5047\u503c\uff0c\u800c\u975e\u7a7a\u5e8f\u5217\u662f\u771f\u503c\u3002</li> </ul> Python<pre><code>&gt;&gt;&gt; bool('')\nFalse\n&gt;&gt;&gt; bool([])\nFalse\n&gt;&gt;&gt; bool('Go Bears!')\nTrue\n</code></pre> Python<pre><code>&gt;&gt;&gt; 'Go Bears!'[3]\n'B'\n&gt;&gt;&gt; 'Go Bears!'.__getitem__(3)\n'B'\n</code></pre> Python<pre><code>&gt;&gt;&gt; def make_adder(n):\n        def adder(k):\n            return n + k\n        return adder\n\n&gt;&gt;&gt; add_three = make_adder(3)\n&gt;&gt;&gt; add_three(4)\n7\n</code></pre> <ul> <li>\u4e0b\u9762\u662f\u7b49\u6548\u7684 <code>Adder</code> \u7c7b</li> </ul> Python<pre><code>&gt;&gt;&gt; class Adder(object):\n        def __init__(self, n):\n            self.n = n\n        def __call__(self, k):\n            return self.n + k\n&gt;&gt;&gt; add_three_obj = Adder(3)\n&gt;&gt;&gt; add_three_obj(4)\n7\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#273","title":"2.7.3 \u591a\u91cd\u8868\u793a","text":"<p>\u4ee5\u590d\u6570\u7684\u76f8\u4e58\u548c\u76f8\u52a0\u4e3a\u4f8b\uff1a</p> Python<pre><code>&gt;&gt;&gt; class Number:\n        def __add__(self, other):\n            return self.add(other)\n        def __mul__(self, other):\n            return self.mul(other)\n&gt;&gt;&gt; class Complex(Number): # \u7ee7\u627fNumber\u7c7b\n        def add(self, other):\n            return ComplexRI(self.real + other.real, self.imag + other.imag)\n        def mul(self, other):\n            magnitude = self.magnitude * other.magnitude\n            return ComplexMA(magnitude, self.angle + other.angle)\n&gt;&gt;&gt; from math import atan2\n&gt;&gt;&gt; class ComplexRI(Complex):  # \u7ee7\u627fComplex\u7c7b\n        def __init__(self, real, imag):\n            self.real = real\n            self.imag = imag\n        @property\n        def magnitude(self):\n            return (self.real ** 2 + self.imag ** 2) ** 0.5\n        @property\n        def angle(self):\n            return atan2(self.imag, self.real)\n        def __repr__(self):\n            return 'ComplexRI({0:g}, {1:g})'.format(self.real, self.imag)\n&gt;&gt;&gt; ri = ComplexRI(5, 12)\n&gt;&gt;&gt; ri.real\n5\n&gt;&gt;&gt; ri.magnitude\n13.0\n&gt;&gt;&gt; ri.real = 9\n&gt;&gt;&gt; ri.real\n9\n&gt;&gt;&gt; ri.magnitude\n15.0\n&gt;&gt;&gt; from math import sin, cos, pi\n&gt;&gt;&gt; class ComplexMA(Complex):\n        def __init__(self, magnitude, angle):\n            self.magnitude = magnitude\n            self.angle = angle\n        @property\n        def real(self):\n            return self.magnitude * cos(self.angle)\n        @property\n        def imag(self):\n            return self.magnitude * sin(self.angle)\n        def __repr__(self):\n            return 'ComplexMA({0:g}, {1:g} * pi)'.format(self.magnitude, self.angle/pi)\n&gt;&gt;&gt; ma = ComplexMA(2, pi/2)\n&gt;&gt;&gt; ma.imag\n2.0\n&gt;&gt;&gt; ma.angle = pi\n&gt;&gt;&gt; ma.real\n-2.0\n&gt;&gt;&gt; from math import pi\n&gt;&gt;&gt; ComplexRI(1, 2) + ComplexMA(2, pi/2)\nComplexRI(1, 4)\n&gt;&gt;&gt; ComplexRI(0, 1) * ComplexRI(0, 1)\nComplexMA(1, 1 * pi)\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#274","title":"2.7.4 \u6cdb\u578b\u51fd\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#28","title":"2.8 \u6548\u7387","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#281","title":"2.8.1 \u6d4b\u91cf\u6548\u7387","text":"Python<pre><code>&gt;&gt;&gt; def fib(n):\n        if n == 0:\n            return 0\n        elif n == 1:\n            return 1\n        else:\n            return fib(n - 2) + fib(n - 1)\n&gt;&gt;&gt; fib(5)\n5\n</code></pre> <ul> <li>\u5bf9\u8c03\u7528\u6b21\u6570\u8ba1\u6570\uff1a</li> </ul> Python<pre><code>&gt;&gt;&gt; def count(f):\n        def counted(n):\n            counted.call_count += 1\n            return f(n)\n        counted.call_count = 0\n        return counted\n&gt;&gt;&gt; fib = count(fib)\n&gt;&gt;&gt; fib(19)\n4181\n&gt;&gt;&gt; fib.call_count\n10946\n</code></pre> <ul> <li>python \u89e3\u91ca\u5668\u4f1a\u56de\u6536\u4e0d\u5f71\u54cd\u672a\u6765\u8ba1\u7b97\u7684\u5185\u5b58\uff0c\u6811\u9012\u5f52\u51fd\u6570\u6240\u9700\u7684\u7a7a\u95f4\u5c06\u4e0e\u6570\u7684\u6700\u5927\u6df1\u5ea6\u6210\u6bd4\u4f8b</li> <li>\u8ba1\u6570\u6700\u5927\u8c03\u7528\u5e27\uff1a</li> </ul> Python<pre><code>&gt;&gt;&gt; def count_frames(f):\n        def counted(n):\n            counted.open_count += 1 # \u5f00\u8f9f\u5e27\n            counted.max_count = max(counted.max_count, counted.open_count)\n            result = f(n)\n            counted.open_count -= 1 # \u8ba1\u7b97\u5b8c\u4e86\u91ca\u653e\u5e27\n            return result\n        counted.open_count = 0\n        counted.max_count = 0\n        return counted\n&gt;&gt;&gt; fib = count_frames(fib)\n&gt;&gt;&gt; fib(19)\n4181\n&gt;&gt;&gt; fib.open_count\n0\n&gt;&gt;&gt; fib.max_count\n19\n&gt;&gt;&gt; fib(24)\n46368\n&gt;&gt;&gt; fib.max_count\n24\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#282","title":"2.8.2 \u8bb0\u5fc6\u5316","text":"Python<pre><code>&gt;&gt;&gt; def memo(f):\n        cache = {}\n        def memorized(n):\n            if n not in cache:\n                cache[n] = f(n)\n            return cache[n]\n        return memorized\n&gt;&gt;&gt; counted_fib = count(fib)\n&gt;&gt;&gt; fib =memo(count_fib)\n&gt;&gt;&gt; fib(19)\n4181\n&gt;&gt;&gt; counted_fib.call_count\n20\n&gt;&gt;&gt; fib(34)\n5702887\n&gt;&gt;&gt; counted_fib.call_count\n35\n</code></pre> <ul> <li>\u5e94\u7528 memo \u540e\u65b0\u7684\u8ba1\u7b97\u6a21\u5f0f</li> </ul> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u552f\u4e00\u7684\u8f93\u5165, fib \u53ea\u88ab\u8c03\u7528\u4e00\u6b21</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#283","title":"2.8.3 \u589e\u957f\u9636\u6570","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#284","title":"2.8.4 \u793a\u4f8b\uff1a\u6307\u6570\u8fd0\u7b97","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#285","title":"2.8.5 \u589e\u957f\u7c7b\u522b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#data-example","title":"Data example","text":"<p><code>min(s, key=abs)</code> \uff1a\u6839\u636e\u6bcf\u4e2a\u5143\u7d20\u7684 \u7edd\u5bf9\u503c \u627e\u51fa <code>s</code> \u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002\u5982\u679c\u6709\u591a\u4e2a\u5143\u7d20\u7684\u7edd\u5bf9\u503c\u76f8\u540c\uff0c\u5b83\u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u6700\u5c0f\u7684\u5143\u7d20\u3002</p>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#link-list","title":"Link List","text":"Python<pre><code>class Link:\n    \"\"\"A linked list.\n\n    &gt;&gt;&gt; s = Link(1)\n    &gt;&gt;&gt; s.first\n    1\n    &gt;&gt;&gt; s.rest is Link.empty\n    True\n    &gt;&gt;&gt; s = Link(2, Link(3, Link(4)))\n    &gt;&gt;&gt; s.first = 5\n    &gt;&gt;&gt; s.rest.first = 6\n    &gt;&gt;&gt; s.rest.rest = Link.empty\n    &gt;&gt;&gt; s                                    # Displays the contents of repr(s)\n    Link(5, Link(6))\n    &gt;&gt;&gt; s.rest = Link(7, Link(Link(8, Link(9))))\n    &gt;&gt;&gt; s\n    Link(5, Link(7, Link(Link(8, Link(9)))))\n    &gt;&gt;&gt; print(s)                             # Prints str(s)\n    &lt;5 7 &lt;8 9&gt;&gt;\n    \"\"\"\n    empty = ()\n\n    def __init__(self, first, rest=empty):\n        assert rest is Link.empty or isinstance(rest, Link)\n        self.first = first\n        self.rest = rest\n\n    def __repr__(self):\n        if self.rest is not Link.empty:\n            rest_repr = ', ' + repr(self.rest)\n        else:\n            rest_repr = ''\n        return 'Link(' + repr(self.first) + rest_repr + ')'\n\n    def __str__(self):\n        string = '&lt;'\n        while self.rest is not Link.empty:\n            string += str(self.first) + ' '\n            self = self.rest\n        return string + str(self.first) + '&gt;'\n\ndef range_Link(start, end):\n    \"\"\"\n    &gt;&gt;&gt; range_Link(3,6)\n    Link(3, Link(4, Link(5)))\n    \"\"\"\n    # end -= 1\n    # res = Link.empty\n    # while(end &gt;= start):\n    #     res = Link(end, res)\n    #     end -= 1\n    # return res\n    if(start &gt;= end):\n        return Link.empty\n    else:\n        return Link(start,range_Link(start + 1, end))\n\ndef map_Link(f, s):\n    if(s == Link.empty):\n        return s\n    else:\n        return Link(f(s.first), map_Link(s.rest))\n\ndef filter_Link(f, s):\n    if(s == Link.empty):\n        return s\n    elif(f(s)):\n        return Link(s.first, filter_Link(f, s.rest))\n    elif(not f(s)):\n        return Link(filter_Link(f,s.rest))\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#3","title":"3 \u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u89e3\u91ca","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#31","title":"3.1 \u5f15\u8a00","text":"<ul> <li>\u672c\u7ae0\u5c06\u4ecb\u7ecd Scheme \u7f16\u7a0b\u8bed\u8a00</li> <li>\u8bed\u6cd5\u4ecb\u7ecd</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#32","title":"3.2 \u51fd\u6570\u5f0f\u7f16\u7a0b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#321","title":"3.2.1 \u8868\u8fbe\u5f0f","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#322","title":"3.2.2 \u5b9a\u4e49","text":"<ul> <li>\u8fd0\u7b97\u7b26\u524d\u7f6e</li> </ul> Scheme<pre><code>scm&gt; (* 3 (+ 4 2))\n18\nscm&gt; (+ 1 2)\n3\nscm&gt; (- 10 (/ 6 2))\n7\nscm&gt; (modulo 35 4)\n3\nscm&gt; (even? (quotient 45 2))\n#t\n</code></pre> <ul> <li>Define:</li> </ul> Scheme<pre><code>scm&gt; (define pi (+ 3 0.14))\npi\nscm&gt; pi\n3.14\n</code></pre> <ul> <li>define can alse create a procedure!</li> </ul> Scheme<pre><code>(define (&lt;name&gt; &lt;formal parameters&gt;) &lt;body&gt;)\n</code></pre> Scheme<pre><code>scm&gt; (define (double x) (* x 2))\ndouble\nscm&gt; (double 3)\n6\nscm&gt; (define (add-then-mul x y z)\n        (* (+ x y) z))\nscm&gt; (add-then-mul 3 4 5)\n35\n</code></pre> <ul> <li>if exp:</li> </ul> Scheme<pre><code>(if &lt;predicate&gt; &lt;if-true&gt; &lt;if-false&gt;)\n</code></pre> <p>`</p> Scheme<pre><code>scm&gt; (define x 3)\nx\nscm&gt; (if (&gt; (- x 3) 0) (/ 1 (- x 3)) (+ x 2))\n5\nscm&gt; (if (= x 3) (print x))\n3\n</code></pre> <ul> <li>Cond: scheme \u8bed\u8a00\u4e0d\u652f\u6301 elif </li> </ul> Scheme<pre><code>(cond  \n(&lt;p1&gt; &lt;e1&gt;)  \n(&lt;p2&gt; &lt;e2&gt;)  \n...  \n(&lt;pn&gt; &lt;en&gt;)  \n(else &lt;else-expression&gt;))\n</code></pre> <p>``</p> Scheme<pre><code>scm&gt; (define x 5)\nx\nscm&gt; (cond ((= (modulo x 3) 0) x)\n            ((= (modulo x 3) 1) (- x 1))\n            ((= (modulo x 3) 2) (+ x 1)))\n6\n</code></pre> <ul> <li>lambda:</li> </ul> Scheme<pre><code>(lambda (&lt;param1&gt; &lt;param2&gt; ...) &lt;body&gt;)\n</code></pre> Scheme<pre><code>scm&gt; (lambda (x y) (+ x y))        ; Returns a lambda procedure, but doesn't assign it to a name\n(lambda (x y) (+ x y))\nscm&gt; ((lambda (x y) (+ x y)) 3 4)  ; Create and call a lambda procedure in one line\n7\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#323","title":"3.2.3 \u590d\u5408\u7c7b\u578b","text":"<ul> <li>scheme \u8bed\u8a00\u4e2d\uff0cpair \u901a\u8fc7 cons \u521b\u5efa\uff0c\u800c\u5143\u7d20\u53ef\u4ee5\u901a\u8fc7 car \u548c cdr \u8bbf\u95ee</li> <li>scheme \u4e2d\u7684\u5217\u8868\u5c31\u50cf Python \u4e2d\u7684 <code>Link</code> \u7c7b</li> </ul> Scheme<pre><code>(cons 1\n      (cons 2\n            (cons 3\n                  (cons 4 nil))))\n(1 2 3 4)\n(list 1 2 3 4)\n(1 2 3 4)\n(define one-through-four (list 1 2 3 4))\n(car one-through-four)\n1\n(cdr one-through-four)\n(2 3 4)\n(car (cdr one-through-four))\n2\n(cons 10 one-through-four)\n(10 1 2 3 4)\n(cons 5 one-through-four)\n(5 1 2 3 4)\n</code></pre> <ul> <li>\u4f7f\u7528 <code>null?</code> \u5224\u65ad\u4e00\u4e2a\u5217\u8868\u662f\u5426\u4e3a\u7a7a</li> </ul> Scheme<pre><code>(define (length items)       ;; \u6d4b\u91cf\u5217\u8868\u7684\u957f\u5ea6\n  (if (null? items)\n      0\n      (+ 1 (length (cdr items)))))\n(define (getitem items n)    ;; \u83b7\u53d6\u5217\u8868\u7d22\u5f15\u4e3a n \u7684\u5143\u7d20 \n  (if (= n 0)\n      (car items)\n      (getitem (cdr items) (- n 1))))\n(define squares (list 1 4 9 16 25))\n(length squares)\n5\n(getitem squares 3)\n16\n</code></pre> <p>Scheme Lists &amp; Quotation</p> <ul> <li><code>nil</code>\u00a0and\u00a0<code>()</code>\u00a0are the same thing: the empty list.</li> <li><code>(cons first rest)</code>\u00a0constructs a linked list with\u00a0<code>first</code>\u00a0as its first element. and\u00a0<code>rest</code>\u00a0as the rest of the list, which should always be a list.</li> <li><code>(car s)</code>\u00a0returns the first element of the list\u00a0<code>s</code>.</li> <li><code>(cdr s)</code>\u00a0returns the rest of the list\u00a0<code>s</code>.</li> <li><code>(list ...)</code>\u00a0takes n arguments and returns a list of length n with those arguments as elements.</li> <li><code>(append ...)</code>\u00a0takes n lists as arguments and returns a list of all of the elements of those lists.</li> <li><code>(draw s)</code>\u00a0draws the linked list structure of a list\u00a0<code>s</code>. It only works on\u00a0code.cs61a.org/scheme.\u00a0Try it now with something like\u00a0<code>(draw (cons 1 nil))</code>.</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#324","title":"3.2.4 \u7b26\u53f7\u6570\u636e","text":"<ul> <li>scheme \u8bed\u8a00\u80fd\u591f\u5904\u7406\u4efb\u610f\u7b26\u53f7\u4f5c\u4e3a\u6570\u636e</li> </ul> Scheme<pre><code>(define a 1)\n(define b 2)\n(list a b)\n(1 2)\n(list 'a 'b)\n(a b)\n(list 'a b)\n(a 2)\n\n(list 'define 'list)\n(define list)\n(car '(a b c))\na\n(cdr '(a b c))\n(b c)\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#33","title":"3.3 \u5f02\u5e38","text":"<ul> <li>\u5f02\u5e38\u662f\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u5176\u7c7b\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f\u81ea <code>BaseException</code> \u7c7b\u3002</li> <li>assert \u8bed\u53e5\u629b\u51fa <code>AssertionError</code> \u7684\u5f02\u5e38\u3002</li> <li>\u901a\u5e38\u53ef\u4ee5\u7528 <code>raise</code> \u8bed\u53e5\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\u5b9e\u4f8b</li> </ul> Python<pre><code>&gt;&gt;&gt; raise Exception(' An error occurred')\nTraceback (most recent call last):\n    File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nException: an error occurred\n</code></pre> <ul> <li>\u629b\u51fa\u5f02\u5e38\u540e\uff0c\u5f53\u524d\u4ee3\u7801\u5757\u4e2d\u7684\u540e\u7eed\u8bed\u53e5\u5c06\u4e0d\u4f1a\u6267\u884c\uff0c\u9664\u975e\u5f02\u5e38\u88ab\u5904\u7406</li> <li>\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u6587\u4ef6\u540d <code>&lt;stdin&gt;</code> \u8868\u793a\u8be5\u5f02\u5e38\u662f\u7531\u7528\u6237\u5728\u4ea4\u4e92\u4f1a\u8bdd\u4e2d\u5f15\u53d1\u7684\uff0c\u800c\u4e0d\u662f\u6765\u81ea\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801</li> <li>\u5904\u7406\u5f02\u5e38-- try \u8bed\u53e5</li> </ul> Python<pre><code>try\n    &lt;try suite&gt;\nexcept &lt;exception class&gt; as &lt;name&gt;:\n    &lt;except suite&gt;\n</code></pre> <ul> <li><code>&lt;try suite&gt;</code> \u7acb\u5373\u6267\u884c\u3002\u53ea\u6709\u5728 <code>&lt;try suite&gt;</code> \u8fc7\u7a0b\u4e2d\u53d1\u751f\u5f02\u5e38\u65f6\uff0cexcept \u5b57\u53e5\u7684\u5185\u5bb9\u624d\u4f1a\u6267\u884c</li> <li>\u5982\u679c\u00a0<code>&lt;exception class&gt;</code>\u00a0\u4e3a\u00a0<code>AssertionError</code> \uff0c\u90a3\u4e48 <code>AssertionError</code> \u7ed1\u5b9a\u5230 <code>name</code> (\u4e0d\u4f1a\u5728 <code>except suite</code> \u5916\u5b58\u5728) , <code>&lt;try suite&gt;</code> \u8fc7\u7a0b\u4e2d\u5f15\u53d1\u7684\u4efb\u4f55\u7ee7\u627f\u81ea <code>AssertionError</code> \u7c7b\u7684\u5b9e\u4f8b\u7531\u968f\u540e\u7684 <code>&lt;except suite&gt;</code> \u5904\u7406\u3002</li> </ul> Python<pre><code>&gt;&gt;&gt; try:\n        x = 1 / 0:\n    except ZeroDivisionError as e:\n        print('handling a', type(e))\n        x = 0\nhandling a &lt;class 'ZeroDivisionError'&gt;\n&gt;&gt;&gt; x\n0\n</code></pre> Python<pre><code>&gt;&gt;&gt; def invert(x):\n        result = 1/x # \u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff08ZeroDivisionError) \u5982\u679c x \u4e3a 0\n        print('Never printed if x is 0')\n        return result\n&gt;&gt;&gt; def invert_safe(x):\n        try:\n            return invert(x)\n        except ZeroDivisionError as e:\n            return str(e)\n\n&gt;&gt;&gt; invert_safe(2)\nNever printed if x is 0\n0.5\n&gt;&gt;&gt; invert_safe(0)\n'division by zero'\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#331","title":"3.3.1 \u5f02\u5e38\u5bf9\u8c61","text":"Python<pre><code>&gt;&gt;&gt; class IterImproveError(Exception):\n\u00a0\u00a0\u00a0     def __init__(self, last_guess):\n\u00a0\u00a0\u00a0         self.last_guess = last_guess\n&gt;&gt;&gt; def improve(update, done, guess=1, max_updates=1000):\n\u00a0\u00a0\u00a0     k = 0\n\u00a0\u00a0\u00a0     try:\n\u00a0\u00a0\u00a0         while not done(guess) and k &lt; max_updates:\n\u00a0\u00a0\u00a0             guess = update(guess)\n\u00a0\u00a0\u00a0             k = k + 1\n\u00a0\u00a0\u00a0         return guess\n\u00a0\u00a0\u00a0     except ValueError:\n\u00a0\u00a0\u00a0         raise IterImproveError(guess)  # \u629b\u51fa\u5f02\u5e38\n&gt;&gt;&gt; def find_zero(f, guess=1):\n\u00a0\u00a0\u00a0     def done(x):\n\u00a0\u00a0\u00a0         return f(x) == 0\n\u00a0\u00a0\u00a0     try:\n\u00a0\u00a0\u00a0         return improve(newton_update(f), done, guess)\n\u00a0\u00a0\u00a0     except IterImproveError as e:   # raise \u629b\u51fa\u7684\u5f02\u5e38\u88ab\u6355\u83b7\n\u00a0\u00a0\u00a0         return e.last_guess\u00a0\u00a0\u00a0      # \u91c7\u7528\u81ea\u5b9a\u4e49\u65b9\u6cd5\u5904\u7406\u5f02\u5e38\n&gt;&gt;&gt; from math import sqrt\n&gt;&gt;&gt; find_zero(lambda x: 2*x*x + sqrt(x))\n-0.030211203830201594 \n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#34","title":"3.4 \u7ec4\u5408\u8bed\u8a00\u7684\u89e3\u91ca\u5668","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#341-scheme","title":"3.4.1 \u57fa\u4e8e Scheme \u8bed\u6cd5\u7684\u8ba1\u7b97\u5668","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#342","title":"3.4.2 \u8868\u8fbe\u5f0f\u6811","text":"<p>\u60f3\u8981\u7f16\u5199\u4e00\u4e2a Scheme \u8ba1\u7b97\u5668\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5d4c\u5957\u5bf9 Pair</p> Python<pre><code>&gt;&gt;&gt; s = Pair(1, Pair(2, nil))\n&gt;&gt;&gt; s\nPair(1, Pair(2, nil))\n&gt;&gt;&gt; print(s)\n(1 2)\n</code></pre> Python<pre><code>&gt;&gt;&gt; len(s)\n2\n&gt;&gt;&gt; s[1]\n2\n&gt;&gt;&gt; print(s.map(lambda x: x+4))\n(5 6)\n</code></pre> <p>\u5d4c\u5957\u5217\u8868\uff1a</p> Python<pre><code>&gt;&gt;&gt; expr = Pair('+', Pair(Pair('*', Pair(3, Pair(4, nil))), Pair(5, nil)))\n&gt;&gt;&gt; print(expr)\n(+ (* 3 4) 5)\n&gt;&gt;&gt; print(expr.second.first)\n(* 3 4)\n&gt;&gt;&gt; expr.second.first.second.first\n3\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#343","title":"3.4.3 \u89e3\u6790\u8868\u8fbe\u5f0f","text":"<p>\u89e3\u6790\u8fc7\u7a0b\uff1a</p> <ol> <li>\u8bcd\u6cd5\u5206\u6790\u5668\u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u51e0\u4e2a\u6700\u5c0f\u8bed\u6cd5\u5355\u5143\uff0c\u6bd4\u5982\u540d\u79f0\u548c\u7b26\u53f7\u3002</li> <li>\u8bed\u6cd5\u5206\u6790\u5668\u6839\u636e\u8fd9\u4e2a\u6807\u8bb0\u5e8f\u5217\u6784\u5efa\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6811\u3002</li> </ol> <p>\u6211\u4eec\u4f7f\u7528\u7684\u5206\u8bcd\u5668 <code>token_line</code> :</p> Python<pre><code>&gt;&gt;&gt; tokenize_line('(+ 1 (* 2.3 45))')\n['(', '+', 1, '(', '*', 2.3, 45, ')', ')']\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#344","title":"3.4.4 \u8ba1\u7b97\u5668\u8bed\u8a00\u6c42\u503c","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#35","title":"3.5 \u62bd\u8c61\u8bed\u8a00\u7684\u89e3\u91ca\u5668","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#4","title":"4 \u6570\u636e\u5904\u7406","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#41","title":"4.1 \u5f15\u8a00","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#42","title":"4.2 \u9690\u5f0f\u5e8f\u5217","text":"<ul> <li>\u60f0\u6027\u8ba1\u7b97\uff1a\u6307\u4efb\u4f55\u5ef6\u8fdf\u8ba1\u7b97\uff0c\u76f4\u5230\u9700\u8981\u8be5\u503c\u7684\u7a0b\u5e8f</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#421","title":"4.2.1 \u8fed\u4ee3\u5668","text":"<p>\u8fed\u4ee3\u5668\u62bd\u8c61\u7684\u4e24\u4e2a\u7ec4\u4ef6\uff1a</p> <ul> <li>\u68c0\u7d22\u4e0b\u4e00\u4e2a\u5143\u7d20</li> <li>\u5230\u8fbe\u5e8f\u5217\u672b\u5c3e\u5e76\u4e14\u6ca1\u6709\u5269\u4f59\u5143\u7d20\uff0c\u5219\u53d1\u51fa\u4fe1\u53f7</li> </ul> Python<pre><code>&gt;&gt;&gt; primes = [2, 3, 5, 7]\n&gt;&gt;&gt; type(primes)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; iterator = iter(primes)\n&gt;&gt;&gt; type(iterator)\n&lt;class 'list-iterator'&gt;\n&gt;&gt;&gt; next(iterator)\n2\n&gt;&gt;&gt; next(iterator)\n3\n&gt;&gt;&gt; next(iterator)\n5\n&gt;&gt;&gt; next(iterator)\n7\n&gt;&gt;&gt; next(iterator)\nTraceback (most recent call las):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n\n&gt;&gt;&gt; try:\n        next(iterator)\n    except StopIteration:\n        print('No more values')\nNo more values\n</code></pre> Python<pre><code>&gt;&gt;&gt; r = range(3, 13)\n&gt;&gt;&gt; s = iter(r)  # r \u7684\u7b2c\u4e00\u4e2a\u8fed\u4ee3\u5668\n&gt;&gt;&gt; next(s)\n3\n&gt;&gt;&gt; next(s)\n4\n&gt;&gt;&gt; t = iter(r)  # r \u7684\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\n&gt;&gt;&gt; next(t)\n3\n&gt;&gt;&gt; next(t)\n4\n&gt;&gt;&gt; u = t        # u \u7ed1\u5b9a\u5230 r \u7684\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\n&gt;&gt;&gt; next(u)\n5\n&gt;&gt;&gt; next(u)\n6\n</code></pre> <ul> <li>\u5728\u8fed\u4ee3\u5668\u4e0a\u8c03\u7528\u00a0<code>iter</code>\u00a0\u5c06\u8fd4\u56de\u8be5\u8fed\u4ee3\u5668\uff0c\u800c\u4e0d\u662f\u5176\u526f\u672c\u3002 Python \u4e2d\u5305\u542b\u6b64\u884c\u4e3a\uff0c\u4ee5\u4fbf\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5bf9\u67d0\u4e2a\u503c\u8c03\u7528\u00a0<code>iter</code>\u00a0\u6765\u83b7\u53d6\u8fed\u4ee3\u5668\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u5b83\u662f\u8fed\u4ee3\u5668\u8fd8\u662f\u5bb9\u5668\u3002</li> </ul> Python<pre><code>&gt;&gt;&gt; v = iter(t)  # v \u7ed1\u5b9a\u5230 r \u7684\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\n&gt;&gt;&gt; next(v)      # u, v, t \u90fd\u4e3a r \u7684\u7b2c\u4e8c\u4e2a\u8fed\u4ee3\u5668\n8\n&gt;&gt;&gt; next(u)\n9\n&gt;&gt;&gt; next(t)\n10\n</code></pre> <ul> <li>\u6bcf\u6b21\u8c03\u7528 iter(s) \u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668 </li> </ul> Python<pre><code>s = [1, 2, 3]\n\nnext(iter(s))  # \u521b\u5efa\u4e00\u4e2a\u65b0\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20 1\nnext(iter(s))  # \u53c8\u521b\u5efa\u4e00\u4e2a\u65b0\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20 1\nnext(iter(s))  # \u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20 1\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#422","title":"4.2.2 \u53ef\u8fed\u4ee3\u6027","text":"<ul> <li>\u53ef\u4ee5\u4f20\u9012\u7ed9 <code>iter</code> \u7684\u5bf9\u8c61\u90fd\u662f\u53ef\u8fed\u4ee3\u503c\uff08itreble value\uff09</li> <li>\u5305\u62ec\uff1a<ul> <li>\u5e8f\u5217\u503c\uff1a\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4</li> <li>\u5bb9\u5668\uff1a\u96c6\u5408\uff0c\u5b57\u5178</li> <li>\u8fed\u4ee3\u5668\u672c\u8eab</li> </ul> </li> <li>\u5b57\u5178\u5728\u751f\u6210\u8fed\u4ee3\u5668\u65f6\u4e5f\u5fc5\u987b\u5b9a\u4e49\u5176\u5185\u5bb9\u7684\u987a\u5e8f</li> <li>\u5982\u679c\u5b57\u5178\u7531\u4e8e\u6dfb\u52a0\u6216\u5220\u9664\u952e\u5bfc\u81f4\u7ed3\u6784\u53d1\u751f\u53d8\u5316\uff0c\u5219\u8fed\u4ee3\u5668\u5931\u6548</li> </ul> Python<pre><code>&gt;&gt;&gt; d = {'one': 1, 'two': 2, 'three': 3}\n&gt;&gt;&gt; d\n{'one': 1, 'three': 3, 'two': 2}\n&gt;&gt;&gt; k = iter(d)\n&gt;&gt;&gt; next(k)\n'one'\n&gt;&gt;&gt; next(k)\n'three'\n&gt;&gt;&gt; v = iter(d.values())\n&gt;&gt;&gt; next(v)\n1\n&gt;&gt;&gt; next(v)\n3\n</code></pre>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#423","title":"4.2.3 \u5185\u7f6e\u8fed\u4ee3\u5668","text":"<ul> <li><code>map</code></li> </ul> Python<pre><code>&gt;&gt;&gt; def double_and_print(x):\n        print('***', x, '=&gt;', 2*x, '***')\n        return 2*x\n&gt;&gt;&gt; s = range(3, 7)\n&gt;&gt;&gt; doubled = map(double_and_print, s)  # double_and_print \u672a\u88ab\u8c03\u7528\n&gt;&gt;&gt; next(doubled)                       # double_and_print \u8c03\u7528\u4e00\u6b21\n*** 3 =&gt; 6 ***\n6\n&gt;&gt;&gt; next(doubled)                       # double_and_print \u518d\u6b21\u8c03\u7528\n*** 4 =&gt; 8 ***\n8\n&gt;&gt;&gt; list(doubled)                       # double_and_print \u518d\u6b21\u8c03\u7528\u5169\u6b21\n*** 5 =&gt; 10 ***                         # list() \u4f1a\u628a\u5269\u4f59\u7684\u503c\u90fd\u8ba1\u7b97\u51fa\u6765\u5e76\u751f\u6210\u4e00\u4e2a\u5217\u8868\n*** 6 =&gt; 12 ***\n[10, 12]\n</code></pre> <ul> <li><code>filter</code></li> <li><code>zip</code></li> <li><code>reversed</code></li> <li>\u4ee5\u4e0a\u4e09\u4e2a\u51fd\u6570\u4e5f\u8fd4\u56de\u8fed\u4ee3\u5668</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#424-for","title":"4.2.4 For \u8bed\u53e5","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#425-yield","title":"4.2.5 \u751f\u6210\u5668\u548c Yield \u8bed\u53e5","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#426","title":"4.2.6 \u53ef\u8fed\u4ee3\u63a5\u53e3","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#427-yield","title":"4.2.7 \u4f7f\u7528 Yield \u521b\u5efa\u53ef\u8fed\u4ee3\u5bf9\u8c61","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#428","title":"4.2.8 \u8fed\u4ee3\u5668\u63a5\u53e3","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#429-streams","title":"4.2.9 Streams","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#4210-python","title":"4.2.10 Python \u6d41","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#43","title":"4.3 \u58f0\u660e\u5f0f\u7f16\u7a0b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#44-logic","title":"4.4 Logic \u8bed\u8a00\u7f16\u7a0b","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#45","title":"4.5 \u5408\u4e00","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#46","title":"4.6 \u5206\u5e03\u5f0f\u8ba1\u7b97","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#47","title":"4.7 \u5206\u5e03\u5f0f\u6570\u636e\u5904\u7406","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#48","title":"4.8 \u5e76\u884c\u8ba1\u7b97","text":"","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#sql","title":"SQL","text":"<ul> <li>\u8fd9\u91cc\u6709\u7b80\u5355\u6559\u7a0b Lab 12 SQL | CS\u81ea\u5b66\u793e\u533a</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_notes/#reference","title":"Reference","text":"<ul> <li>https://composingprograms.netlify.app/</li> <li>https://www.composingprograms.com/</li> <li>https://github.com/shuo-liu16/CS61A</li> </ul>","tags":["course_notes","programming language"]},{"location":"computer/CS61A/CS61A_resource/","title":"Somegthing related","text":"<p> \u7ea6 45 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p>"},{"location":"computer/CS61A/CS61A_resource/#sth","title":"sth.","text":"<ul> <li>\u8d28\u91cf\u5f88\u9ad8</li> <li>start @ 2025.1.25 </li> <li>end   @ 2025.2.18</li> <li>\u603b\u5b66\u65f6\u5728 100h \u4e0a\u4e0b</li> </ul>"},{"location":"computer/CS61A/CS61A_resource/#_1","title":"\u6211\u4f7f\u7528\u8fc7\u7684\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>My CS61A repository</li> <li>CS\u81ea\u5b66\u793e\u533a</li> <li>proj_answer</li> <li>\u4e2d\u6587\u6559\u6750</li> <li>\u539f\u7248\u6559\u6750</li> </ul>"},{"location":"computer/CS61C/CS61Cnotes/","title":"CS61C_notes","text":"<code>#course_notes</code>","tags":["course_notes"]},{"location":"computer/CS61C/CS61Cnotes/#cs61c","title":"CS61C \u8bfe\u7a0b\u7b14\u8bb0","text":"<p> \u7ea6 596 \u4e2a\u5b57  31 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <ul> <li>@start 2025.3.23</li> <li>@end...</li> <li>\u5148\u4e0a\u4f20\uff0c\u5f3a\u8feb\u5b66\u4e60\uff0c\u5199\u5b8c\u6574\u7406</li> </ul> <p></p> <p>Stack\uff08\u6808\uff09:</p> <ul> <li>\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740</li> <li>\u81ea\u52a8\u5206\u914d\u548c\u91ca\u653e</li> <li>\u4ece\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u589e\u957f</li> <li>\u5927\u5c0f\u6709\u9650\uff0c\u53ef\u80fd\u6808\u6ea2\u51fa</li> </ul> <p>Heap\uff08\u5806\uff09:</p> <ul> <li>\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff08malloc/free\uff09</li> <li>\u4ece\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u589e\u957f</li> <li>\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5185\u5b58</li> <li>\u53ef\u80fd\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u6216\u788e\u7247\u5316</li> </ul> <p>Static Data\uff08\u9759\u6001\u6570\u636e\uff09:</p> <ul> <li>\u5168\u5c40\u53d8\u91cf</li> <li>\u9759\u6001\u53d8\u91cf</li> <li>\u5e38\u91cf\u6570\u636e</li> <li>\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4e00\u76f4\u5b58\u5728</li> </ul> <p>Code\uff08\u4ee3\u7801\u6bb5\uff09:</p> <ul> <li>\u7a0b\u5e8f\u7684\u673a\u5668\u6307\u4ee4</li> <li>\u53ea\u8bfb</li> <li>\u7a0b\u5e8f\u52a0\u8f7d\u65f6\u786e\u5b9a</li> </ul> C<pre><code>void* malloc(size_t size);\nint *p = (int *)malloc(sizeof(int) * 5);  // \u5206\u914d5\u4e2aint\u7684\u7a7a\u95f4\n// - \u5206\u914d\u6307\u5b9a\u5b57\u8282\u6570\u7684\u5185\u5b58\n// - \u5185\u5b58\u5185\u5bb9\u662f\u672a\u521d\u59cb\u5316\u7684\uff08\u968f\u673a\u503c\uff09\n// - \u8fd4\u56devoid*\u6307\u9488\uff0c\u9700\u8981\u7c7b\u578b\u8f6c\u6362\n// - \u5931\u8d25\u8fd4\u56deNULL\nvoid* calloc(size_t num, size_t size);\nint *p = (int *)calloc(5, sizeof(int));  // \u5206\u914d5\u4e2aint\u7684\u7a7a\u95f4\n// - \u5206\u914d num*size \u5b57\u8282\u7684\u5185\u5b58\n// - \u81ea\u52a8\u5c06\u5185\u5b58\u521d\u59cb\u5316\u4e3a0\n// - \u8fd4\u56devoid*\u6307\u9488\n// - \u5931\u8d25\u8fd4\u56deNULL\nvoid free(void* ptr);\nfree(p);  // \u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\u5185\u5b58\n// - \u91ca\u653e\u4e4b\u524dmalloc/calloc\u5206\u914d\u7684\u5185\u5b58\n// - \u4e0d\u4f1a\u628a\u6307\u9488\u8bbe\u4e3aNULL\n// - \u91ca\u653e\u540e\u7ee7\u7eed\u4f7f\u7528\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\nvoid* realloc(void* ptr, size_t new_size);\np = (int *)realloc(p, sizeof(int) * 10);  // \u6269\u5c55\u523010\u4e2aint\n// - \u8c03\u6574\u5df2\u5206\u914d\u5185\u5b58\u7684\u5927\u5c0f\n// - \u53ef\u80fd\u4f1a\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e\n// - \u65b0\u589e\u90e8\u5206\u672a\u521d\u59cb\u5316\n// - \u5931\u8d25\u8fd4\u56deNULL\u4f46\u4e0d\u6539\u53d8\u539f\u5185\u5b58\n</code></pre> <p>\u4e00\u4e9b\u5fc3\u5f97\uff1a - \u6bcf\u4e2a malloc/calloc \u90fd\u8981\u914d\u5bf9 free - free \u540e\u8bbe\u7f6e\u6307\u9488\u4e3a NULL \u907f\u514d\u60ac\u6302\u6307\u9488 - \u603b\u662f\u68c0\u67e5 malloc/calloc/realloc \u7684\u8fd4\u56de\u503c - realloc (NULL, size) \u7b49\u4ef7\u4e8e malloc (size) - realloc (ptr, 0) \u7b49\u4ef7\u4e8e free (ptr)</p> <p>\u5173\u4e8e unions C<pre><code>union fubar {\n    int a;      // 4\u5b57\u8282\n    char *b;    // 8\u5b57\u8282\uff0864\u4f4d\u7cfb\u7edf\uff09\n    void **c;   // 8\u5b57\u8282\uff0864\u4f4d\u7cfb\u7edf\uff09\n} Fubar;\n</code></pre> - \u6240\u6709\u6210\u5458\u5171\u4eab\u4e00\u5757\u5185\u5b58 - \u5185\u5b58\u5927\u5c0f\u7b49\u4e8e\u6700\u5927\u6210\u5458\u5927\u5c0f - \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u5b89\u5168\u4f7f\u7528\u4e00\u4e2a\u6210\u5458 C<pre><code>Fubar *f = (Fubar *)malloc(sizeof(union fubar));\nf-&gt;a = 1312;    // \u73b0\u5728\u8fd9\u5757\u5185\u5b58\u88ab\u5f53\u4f5cint\u4f7f\u7528\nf-&gt;b = \"baz\";   // \u73b0\u5728\u540c\u4e00\u5757\u5185\u5b58\u88ab\u5f53\u4f5cchar*\u4f7f\u7528\n</code></pre></p> <p>\u5173\u4e8e struct \u7684\u5185\u5b58\u5bf9\u9f50\uff0c\u6211\u5728 [[C\u8bed\u8a00#3.2 \u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50]] \u4e2d\u6709\u63d0\u53ca</p> <p>\u5173\u4e8e GC (conservative garbage) \u4fdd\u5b88\u5f0f GC \u7684\u95ee\u9898 - \u4e0d\u80fd\u79fb\u52a8\u5185\u5b58\uff0c\u5bfc\u81f4\u5185\u5b58\u788e\u7247\u5316 - \u9700\u8981\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\uff08Stop the World\uff09\u6765\u8fdb\u884c\u5783\u573e\u56de\u6536 - \u5bfc\u81f4\u7a0b\u5e8f\u6682\u505c\uff0c\u5f71\u54cd\u6027\u80fd python \u7684\u89e3\u51b3\u65b9\u6848 - \u5f15\u7528\u8ba1\u6570\uff0c\u53ef\u4ee5\u968f\u65f6\u91ca\u653e\uff0c\u4f46\u662f\u65e0\u6cd5\u5904\u7406\u5faa\u73af\u5f15\u7528</p> <p></p> <p></p> <p>every number must have a \"1\" in the left (except \"0\"), that means we can save room for the leftmost \"1\"</p> <p></p> <ul> <li>bias fomual \\(N=-(2^{n-1}-1)\\)</li> <li>\u8fd9\u4e2a\u504f\u7f6e\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u6709\u7b26\u53f7\u6570\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u6570</li> <li>\u6d6e\u70b9\u6570\u53ef\u4ee5\u8868\u793a\u4e3a \\((-1)^{s}\\times 1.mantissa\\times 2^{exponent-127}\\)</li> </ul> <p></p> <p>\u8868\u793a\u7684\u6700\u5c0f\u7684\u6b63\u6570\u4e3a\uff0c \\(2^{-126}\\) \uff0c\u5982\u679c exponent = allzeros \u5c31\u662f 0 \u4e86 \u8868\u793a\u7684\u6700\u5927\u7684\u6b63\u6570\u4e3a\uff0c 0|11111110|111111111111111111111111 = \\((2-2^{-23})\\times 2^{127}\\) \u8d1f\u6570\u7684\u8303\u56f4\u540c\u7406</p> <p>\u4e0b\u56fe\u4e2d\u6709\u989c\u8272\u7684\u533a\u57df\u4e0d\u80fd\u8868\u793a </p> <p>\u8868\u793anorm\uff1a \\((1+y)*2^{x-127}\\) \uff0c\u5176\u4e2d y \u662f mantissa\uff0cx \u662f exponent \u4e0b\u4e00\u4e2a\u6570\u5b57 \\((1+y+2^{-23})*2^{x-127}\\) ,\u6240\u4ee5\u6b65\u957f\u5c31\u662f \\(2^{-23}*2^{x-127}=2^{x-150}\\) ,\u53ef\u4ee5\u770b\u51fa\u6765\u6b65\u957f\u4f1a\u968f\u7740\u6307\u6570\u7684\u6eda\u52a8\u800c\u53d8\u5316</p> <p>denormalized formula: \\((-1)^{s}\\times 0.mantissa\\times 2^{-126}\\) ,\u4e3a\u4e86\u8868\u793a\u66f4\u63a5\u8fd1\u96f6\u7684\u6570\u5b57 denorm range: \\(2^{-126}\\sim2^{-149}\\) \u8868\u793a denorm: \\(y*2^{-126}\\) ,\u4e0b\u4e00\u4e2a\u6570\u5b57 \\((y+2^{-23})*2^{-126}\\) \u6b65\u957f\u4e3a \\(2^{-149}\\) \u4e0d\u53d8</p> <p>\u4e00\u4e2a\u4f8b\u5b50\uff1a </p>","tags":["course_notes"]},{"location":"computer/CSAPP/resource/","title":"Resource","text":"<p> \u7ea6 66 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <code>#15-213</code> <code>#course_notes</code> <ul> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u8bfe\u7a0b\u89c6\u9891</li> <li>lab \u89e3\u6790</li> <li>\u76f8\u5173\u535a\u5ba2</li> <li>\u7a7aLab\u5907\u4efd</li> <li>CSAPP\u5b66\u4e60\u8d44\u6599\u548c\u5b9e\u9a8c\u8d44\u6599</li> <li>CSAPP\u91cd\u70b9\u89e3\u8bfb</li> </ul>","tags":["15-213","course_notes"]},{"location":"computer/Linux/linux/","title":"Linux","text":"<p> \u7ea6 1175 \u4e2a\u5b57  267 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p>"},{"location":"computer/Linux/linux/#1-linux","title":"1 Linux \u64cd\u4f5c\u7cfb\u7edf","text":"<ul> <li>Linux kernel \u5185\u6838</li> <li>GNU \u5de5\u5177</li> <li>GUI Desktop \u73af\u5883</li> <li>APPlication \u5e94\u7528</li> </ul> <p>Linux \u5b9e\u9645\u4e0a\u662fGNU/Linux</p>"},{"location":"computer/Linux/linux/#11-linux-kernel","title":"1.1 Linux kernel \u5185\u6838","text":"<ul> <li>Linux kernel \u5185\u6838</li> <li>\u786c\u4ef6</li> <li>\u8f6f\u4ef6</li> <li>\u5185\u5b58\u7ba1\u7406</li> <li>\u6587\u4ef6\u7ba1\u7406 </li> </ul>"},{"location":"computer/Linux/linux/#12-gnu","title":"1.2 GNU \u5de5\u5177\uff1a","text":"<p>\u539f\u672c\u5728Unix\u4e0a\u7684\u4e00\u4e9b\u547d\u4ee4\u548c\u5de5\u5177\uff0c\u88ab\u6a21\u4eff\uff08\u79fb\u690d\uff09\u5230\u4e86Linux\u4e0a \u4f9bLinux\u4f7f\u7528\u7684\u8fd9\u5957\u5de5\u5177\uff1acoreutils coreutilities\u8f6f\u4ef6\u5305</p> <ul> <li>\u7528\u6765\u5904\u7406\u6587\u4ef6\u7684\u5de5\u5177</li> <li>\u7528\u6765\u64cd\u4f5c\u6587\u672c\u7684\u5de5\u5177</li> <li>\u7528\u6765\u7ba1\u7406\u8fdb\u7a0b\u7684\u5de5\u5177</li> </ul> <p>shell: \u63d0\u4f9b\u7ed9\u7528\u6237\u4f7f\u7528\u7684\u8f6f\u4ef6\u7528\u6237\u62ff\u5b83\u6765\u4f7f\u7528\u7535\u8111\uff0c\u5e76\u4e14\u548c\u7535\u8111\u4ea4\u4e92</p> <p>\u547d\u4ee4\u884c\u58f3\u5c42\u63d0\u4f9b\u4e00\u4e2a\u547d\u4ee4\u884c\u754c\u9762(CLI)\uff0c\u800c\u56fe\u5f62\u58f3\u5c42\u63d0\u4f9b\u4e00\u4e2a\u7528\u6237\u56fe\u5f62\u754c\u9762(GUI)</p> <p>Linux shell --&gt; CLI</p>"},{"location":"computer/Linux/linux/#13-gui","title":"1.3 GUI","text":"<p>\u76f4\u89c2\u4f53\u73b0\u4e3a\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf</p> <ul> <li>X windows</li> <li>KDE(\u6700\u591a\u7684) </li> <li>GNOME</li> <li>Unity</li> </ul>"},{"location":"computer/Linux/linux/#2-bash-shell","title":"2 Bash shell","text":""},{"location":"computer/Linux/linux/#21-cd-ls","title":"2.1 cd ls\u7b49","text":"Bash<pre><code># \u5207\u6362\u5230\u6839\u76ee\u5f55 /\nauzers@auzers-virtual-machine:~/Desktop$ cd /  # \u8bb0\u5f97cd \u540e\u9762\u6709\u4e00\u4e2ablank\n# \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u5185\u5bb9\nauzers@auzers-virtual-machine:/$ ls\nbin    dev   lib    libx32      mnt   root  snap      sys  var\nboot   etc   lib32  lost+found  opt   run   srv       tmp\ncdrom  home  lib64  media       proc  sbin  swapfile  usr\n# \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55 \nauzers@auzers-virtual-machine:/$ cd\n# \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u7684\u5185\u5bb9\nauzers@auzers-virtual-machine:~$ ls\nDesktop  Documents  Downloads  Music  Pictures  Public  snap  Templates  Videos\n</code></pre> Bash<pre><code>auzers@auzers-virtual-machine:/home$ cd auzers\nauzers@auzers-virtual-machine:~$ cd /\nauzers@auzers-virtual-machine:/$ cd home/\nauzers@auzers-virtual-machine:/home$ ls\nauzers\nauzers@auzers-virtual-machine:/home$ cd auzers/\nauzers@auzers-virtual-machine:~$\n</code></pre> <ul> <li>\u8fd9\u90e8\u5206\u8bf4\u660e<code>~</code>\u5c31\u662f\u7528\u6237<code>home</code>\u76ee\u5f55</li> <li><code>$</code>  #\u7b49\u5f85\u7528\u6237\u8f93\u5165</li> <li><code>cd</code>  #change directory</li> <li><code>cd ..</code> #\u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55</li> <li><code>cd -</code> #\u8fd4\u56de\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\u76ee\u5f55</li> <li><code>ls</code>  #list</li> </ul> Bash<pre><code>auzers@auzers-virtual-machine:~$ ls -a\n.              .bashrc  Documents  .mozilla  Public                     Videos\n..             .cache   Downloads  Music     snap\n.bash_history  .config  .gnupg     Pictures  .sudo_as_admin_successful\n.bash_logout   Desktop  .local     .profile  Templates\nauzers@auzers-virtual-machine:~$ ls -l\ntotal 80\ndrwxr-xr-x 16 auzers auzers 4096 Jan 10 04:08 ./\ndrwxr-xr-x  3 root   root   4096 Jan  9 18:27 ../\n-rw-------  1 auzers auzers  113 Jan 10 04:04 .bash_history\n-rw-r--r--  1 auzers auzers  220 Jan  9 18:27 .bash_logout\n-rw-r--r--  1 auzers auzers 3771 Jan  9 18:27 .bashrc\ndrwx------ 13 auzers auzers 4096 Jan 10 04:22 .cache/\ndrwx------ 12 auzers auzers 4096 Jan 10 04:22 .config/\ndrwxr-xr-x  2 auzers auzers 4096 Jan 10 04:02 Desktop/\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Documents/\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Downloads/\ndrwx------  3 auzers auzers 4096 Jan  9 18:33 .gnupg/\ndrwxr-xr-x  3 auzers auzers 4096 Jan  9 18:33 .local/\ndrwx------  4 auzers auzers 4096 Jan 10 02:40 .mozilla/\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Music/\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Pictures/\n-rw-r--r--  1 auzers auzers  807 Jan  9 18:27 .profile\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Public/\ndrwx------  3 auzers auzers 4096 Jan 10 04:02 snap/\n-rw-r--r--  1 auzers auzers    0 Jan 10 03:58 .sudo_as_admin_successful\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Templates/\ndrwxr-xr-x  2 auzers auzers 4096 Jan  9 18:33 Videos/\n</code></pre> <ul> <li><code>ls -a</code> #\u7528\u4e8e\u663e\u793a\u6240\u6709\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\u53ef\u4ee5\u7b80\u5199\u4e3a<code>la</code></li> <li><code>ls -l</code> #\u53ef\u4ee5\u5217\u4e3e\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u7b80\u5199\u4e3a<code>ll</code>(\u6700\u5e38\u7528)</li> </ul> Bash<pre><code>LS(1)                            User Commands                           LS(1)\n\nNAME\n       ls - list directory contents\n\nSYNOPSIS\n       ls [OPTION]... [FILE]...\n\nDESCRIPTION\n       List  information  about  the FILEs (the current directory by default).\n       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci\u2010\n       fied.\n\n       Mandatory  arguments  to  long  options are mandatory for short options\n       too.\n\n       -a, --all\n              do not ignore entries starting with .\n\n       -A, --almost-all\n              do not list implied . and ..\n\n       --author\n</code></pre> <ul> <li><code>man ls</code> #\u67e5\u770bls\u547d\u4ee4\u7684manual(\u624b\u518c)\uff0c\u67e5\u770bls\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u6863\u770b\uff0c\u53ef\u4ee5\u4f7f\u7528<code>pgup</code>\u548c<code>pgdn</code>\u6765\u7ffb\u9875</li> <li><code>.</code> #\u5355\u70b9\u7b26\uff0c\u8868\u793a\u5f53\u524d\u76ee\u5f55</li> <li><code>..</code> #\u53cc\u70b9\u7b26\uff0c\u8868\u793a\u7236\u76ee\u5f55</li> </ul>"},{"location":"computer/Linux/linux/#22","title":"2.2 \u6587\u4ef6\u6269\u5c55\u5339\u914d\u7b26","text":"<p>Bash<pre><code>auzers@auzers-virtual-machine:~$ cd Documents/doc\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n'a-2.3 _copy_1.txt'  'a -2.3_copy_2 .txt'   a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ mv 'a -2.3_copy_2 .txt' a-2.3_copy_2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n'a-2.3 _copy_1.txt'   a-2.3_copy_2.txt   a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ mv 'a-2.3 _copy_1.txt' a-2.3_copy_1.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\na-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls a-2.3*\na-2.3_copy_1.txt  a-2.3_copy_2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls a*\na-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls a-2.?8\nls: cannot access 'a-2.?8': No such file or directory\nauzers@auzers-virtual-machine:~/Documents/doc$ ls a-2.?*\na-2.3_copy_1.txt  a-2.3_copy_2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls a-2.?\nls: cannot access 'a-2.?': No such file or directory\nauzers@auzers-virtual-machine:~/Documents/doc$ \nauzers@auzers-virtual-machine:~/Documents/doc$ ls -l a-*\n-rw-rw-r-- 1 auzers auzers 0 Jan 10 23:15 a-2.3_copy_1.txt\n-rw-rw-r-- 1 auzers auzers 0 Jan 10 23:15 a-2.3_copy_2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls *.txt\na-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\n</code></pre> - \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5355\u5f15\u53f7\u5305\u88f9 #\u5305\u542b\u7279\u6b8a\u5b57\u7b26\uff0c\u5305\u62ec\u7a7a\u683c\uff0c$\uff0c&amp;\u7b49 - <code>*</code> #\u4ee3\u66ff\u591a\u4e2a\u5b57\u7b26 - <code>\uff1f</code> #\u4ee3\u66ff\u4e00\u4e2a\u5b57\u7b26</p>"},{"location":"computer/Linux/linux/#23","title":"2.3 \u5143\u5b57\u7b26\u901a\u914d\u7b26","text":""},{"location":"computer/Linux/linux/#24-touch","title":"2.4 touch","text":"Bash<pre><code>auzers@auzers-virtual-machine:~/Documents$ cd doc\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\na-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ touch 1.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1.txt  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ touch 1.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ll\ntotal 8\ndrwxrwxr-x 2 auzers auzers 4096 Jan 11 08:22 ./\ndrwxr-xr-x 3 auzers auzers 4096 Jan 10 23:13 ../\n-rw-rw-r-- 1 auzers auzers    0 Jan 11 08:23 1.txt\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a-2.3_copy_1.txt\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a-2.3_copy_2.txt\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a.txt\n</code></pre>"},{"location":"computer/Linux/linux/#25-cp","title":"2.5 cp","text":"Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ cp 1.txt 2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1.txt  2.txt  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ gedit 2.txt\n</code></pre> <ul> <li>cp\u547d\u4ee4\u4f1a\u8986\u76d6,\u6240\u4ee5\u4e00\u822c\u8981\u6c42\u4f7f\u7528 <code>cp -i</code>\u4f7f\u7528\u524d\u5148\u8be2\u95ee\u7ba1\u7406\u5458 \u5982\u4f55\u590d\u5236\u4e00\u4e2a\u6587\u4ef6\u5939</li> </ul> Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ cp ~/Documents/doc/ ~/Download\ncp: -r not specified; omitting directory '/home/auzers/Documents/doc/'\nauzers@auzers-virtual-machine:~/Documents/doc$ cp ~/Documents/doc/* ~/Downloads\nauzers@auzers-virtual-machine:~/Documents/doc$ cd ..\nauzers@auzers-virtual-machine:~/Documents$ cd ..\nauzers@auzers-virtual-machine:~$ ls\n Desktop     Downloads           Music      Public   Templates\n Documents  'Downloads (copy)'   Pictures   snap     Videos\nauzers@auzers-virtual-machine:~$ cd Downloads\nauzers@auzers-virtual-machine:~/Downloads$ ls\n1.txt  2.txt  2.txt]  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents$ cp -r doc ~/Downloads\nauzers@auzers-virtual-machine:~/Documents$ cd ~\nauzers@auzers-virtual-machine:~$ cd Downloads\nauzers@auzers-virtual-machine:~/Downloads$ ls\n1.txt  2.txt  2.txt]  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt  doc\n</code></pre> <ul> <li>\u4f7f\u7528 <code>file/*</code> #\u4f46\u662f\u6b64\u65f6\u6ca1\u6709\u8fde\u540c\u6587\u4ef6\u5939\u4e00\u8d77\u590d\u5236\u8fc7\u53bb</li> <li>\u4f7f\u7528 <code>-r</code> #\u9012\u5f52\u5904\u7406\uff0c\u8868\u793a\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5939\u548c\u5b50\u76ee\u5f55\u4e00\u8d77\u5904\u7406</li> </ul>"},{"location":"computer/Linux/linux/#26-mv","title":"2.6 mv","text":"Bash<pre><code>auzers@auzers-virtual-machine:~$ cd Downloads/\nauzers@auzers-virtual-machine:~/Downloads$ ls\n1.txt  2.txt  2.txt]  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt  doc\nauzers@auzers-virtual-machine:~/Downloads$ mv doc/ ~/Documents/doc/\nauzers@auzers-virtual-machine:~/Downloads$ cd !$\ncd ~/Documents/doc/\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1_linkfile  2.txt   a-2.3_copy_1.txt  a.txt\n1.txt       2.txt]  a-2.3_copy_2.txt  doc\n</code></pre> <ul> <li><code>cd !$</code>  #\u8df3\u8f6c\u5230\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u76ee\u5f55</li> </ul>"},{"location":"computer/Linux/linux/#27-lnk","title":"2.7 lnk\u94fe\u63a5\u6587\u4ef6","text":"<ul> <li>\u7b26\u53f7\u94fe\u63a5 \uff08\u8f6f\u94fe\u63a5\uff09--\u5feb\u6377\u65b9\u5f0f\uff0c\u5feb\u6377\u65b9\u5f0f\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6 PS:\u539f\u6765\u7684\u6587\u4ef6\u5939\u5fc5\u987b\u5b58\u5728</li> <li>\u786c\u94fe\u63a5 \u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ea\u662f\u4e00\u4e2a\u526f\u672c\uff0c\u5728\u4e0d\u540c\u7684\u786c\u76d8\u4e2d\u5c31\u4f1a\u5931\u6548 PS:\u539f\u6765\u7684\u6587\u4ef6\u5939\u540c\u6837\u5fc5\u987b\u5b58\u5728</li> </ul> Bash<pre><code>auzers@auzers-virtual-machine:~$ cd Documents/doc/\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1.txt  2.txt  2.txt]  a-2.3_copy_1.txt  a-2.3_copy_2.txt  a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ln -s 1.txt 1_linkfile\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1_linkfile  2.txt   a-2.3_copy_1.txt  a.txt\n1.txt       2.txt]  a-2.3_copy_2.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ll\ntotal 20\ndrwxrwxr-x 2 auzers auzers 4096 Jan 11 21:18 ./\ndrwxr-xr-x 3 auzers auzers 4096 Jan 10 23:13 ../\nlrwxrwxrwx 1 auzers auzers    5 Jan 11 21:18 1_linkfile -&gt; 1.txt\n-rw-rw-r-- 1 auzers auzers   30 Jan 11 08:28 1.txt\n-rw-rw-r-- 1 auzers auzers   30 Jan 11 08:32 2.txt\n-rw-rw-r-- 1 auzers auzers   30 Jan 11 08:35 2.txt]\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a-2.3_copy_1.txt\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a-2.3_copy_2.txt\n-rw-rw-r-- 1 auzers auzers    0 Jan 10 23:15 a.txt\n</code></pre> <ul> <li><code>ln -s 1.txt 1_linkfile</code> #\u4e3a<code>1.txt</code>\u521b\u5efa\u8f6f\u94fe\u63a5 </li> <li><code>ln</code> #\u521b\u5efa\u786c\u94fe\u63a5</li> </ul>"},{"location":"computer/Linux/linux/#28-rm","title":"2.8 rm","text":"<ul> <li><code>rm -i</code> #\u6700\u5e38\u7528\u7684\u5220\u9664\u547d\u4ee4</li> <li><code>rm -rf -i</code> #\u8be2\u95ee\u7528\u6237\u540e\u5f3a\u5236\u5220\u9664</li> </ul>"},{"location":"computer/Linux/linux/#29-mkdir","title":"2.9 mkdir","text":""},{"location":"computer/Linux/linux/#210-more-cat-less","title":"2.10 more &amp; cat &amp; less","text":"<ul> <li>cat</li> </ul> Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ cat -n 1.txt\n     1  #include&lt;stdio.h&gt;\n     2  int main()\n     3  dadad\nauzers@auzers-virtual-machine:~/Documents/doc$ cat -A 1.txt\n#include&lt;stdio.h&gt;$\nint main()$\ndadad$\n</code></pre> <ul> <li>more</li> </ul> <p>Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ more 1.txt\n#include&lt;stdio.h&gt;\nint main()\ndadad\ndasd1d\na\nds\nfa\nsd\nf  \n f  \n f   f   f   f  x fxs   f\n    d   qd    sa d\n    asd     \n        wqdda   \n        f        \n f\n\n wd qwd qw\n d \n\n d\n--More--(56%)\n</code></pre> PS:\u4e2d\u95f4\u7684\u770b\u4e0a\u53bb\u50cf\u4e71\u7801\u4e00\u6837\u7684\u4e1c\u897f\u662f1.txt\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9</p> <ul> <li>less(\u53ef\u4ee5\u4f7f\u7528PgUp PgDn\u7ffb\u9875)</li> </ul>"},{"location":"computer/Linux/linux/#3-bash-shell","title":"3 Bash shell \u8fdb\u9636","text":""},{"location":"computer/Linux/linux/#31-linux","title":"3.1 Linux \u7684\u4efb\u52a1\u7ba1\u7406\u5668","text":"<ul> <li><code>top</code> #\u7528\u4e8e\u663e\u793a\u6216\u7ba1\u7406\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f</li> <li><code>ps</code> #\u7528\u4e8e\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u8fdb\u7a0b\u72b6\u6001</li> <li><code>kill</code> #\u7ed3\u675f\u8fdb\u7a0b</li> </ul>"},{"location":"computer/Linux/linux/#32","title":"3.2 \u6302\u8f7d","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>mount</code>\u547d\u4ee4\u9009\u62e9\u6302\u8f7d\u7684\u76ee\u5f55,\u53ef\u4ee5\u7528<code>umount</code>\u6765\u53d6\u6d88\u6302\u8f7d</p> <ul> <li>\u4e3a\u4ec0\u4e48\u8981\u6709\u6302\u8f7d\uff1f</li> <li><code>df</code> #\u7528\u4e8e\u663e\u793a\u78c1\u76d8\u5206\u533a\u4e0a\u7684\u53ef\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u9ed8\u8ba4\u663e\u793a\u5355\u4f4d\u4e3aKB\u3002\u53ef\u4ee5\u5229\u7528\u8be5\u547d\u4ee4\u6765\u83b7\u53d6\u786c\u76d8\u88ab\u5360\u7528\u4e86\u591a\u5c11\u7a7a\u95f4\uff0c\u76ee\u524d\u8fd8\u5269\u4e0b\u591a\u5c11\u7a7a\u95f4\u7b49\u4fe1\u606f\u3002  </li> <li><code>sudo fdisk -l</code> #\u89c2\u5bdf\u786c\u76d8\u5b9e\u4f53\u4f7f\u7528\u60c5\u51b5</li> </ul>"},{"location":"computer/Linux/linux/#33-sort","title":"3.3 sort","text":""},{"location":"computer/Linux/linux/#34-grep","title":"3.4 grep","text":"Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ cat -n 1.txt\n     1  #include&lt;stdio.h&gt;\n     2  int main()\n     3  dadad\n     4  dasd1d\n     5  a\n     6  ds\n     7  fa\n     8  sd\n     9  f  \n    10   f  \n    11   f   f   f   f  x fxs   f\n    12      d   qd    sa d\n    13      asd     \n    14          wqdda   \n    15          f        \n    16   f\n    17   \n    18   wd qwd qw\n    19   d \n    20   \n    21   d\n    22      qw\n    23      d \n    24          qw\n    25          d   \n    26          qwd\n    27              \n    28               d\n    29                  qw\n    30                  \n    31                  \n    32                  \n    33                      \n    34                      \n    35                      \n    36                      dwqdqwd\n    37                      \nauzers@auzers-virtual-machine:~/Documents/doc$ grep -n qw 1.txt\n18: wd  qwd qw\n22:     qw\n24:         qw\n26:         qwd\n29:                 qw\n36:                     dwqdqwd\n</code></pre>"},{"location":"computer/Linux/linux/#35","title":"3.5 \u6253\u5305\u538b\u7f29\u5f52\u6863\u89e3\u538b\u7f29","text":"<p>\u538b\u7f29 Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ ls\n1_linkfile  2.txt   a-2.3_copy_1.txt  a.txt\n1.txt       2.txt]  a-2.3_copy_2.txt  doc\nauzers@auzers-virtual-machine:~/Documents/doc$ tar -zcvf mytxt.tar.gz doc\ndoc/\ndoc/2.txt\ndoc/a-2.3_copy_2.txt\ndoc/2.txt]\ndoc/a-2.3_copy_1.txt\ndoc/1.txt\ndoc/a.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1_linkfile  2.txt   a-2.3_copy_1.txt  a.txt  mytxt.tar.gz\n1.txt       2.txt]  a-2.3_copy_2.txt  doc\nauzers@auzers-virtual-machine:~/Documents/doc$ \n</code></pre></p> <p>\u89e3\u538b\u7f29 Bash<pre><code>auzers@auzers-virtual-machine:~/Documents/doc$ tar -zcvf mytest.tar.gz 1.txt\n1.txt\nauzers@auzers-virtual-machine:~/Documents/doc$ ls\n1_linkfile  2.txt   a-2.3_copy_1.txt  a.txt  mytest.tar.gz\n1.txt       2.txt]  a-2.3_copy_2.txt  doc    mytxt.tar.gz\nauzers@auzers-virtual-machine:~/Documents/doc$ cp mytest.tar.gz ../\nauzers@auzers-virtual-machine:~/Documents/doc$ cd ..\nauzers@auzers-virtual-machine:~/Documents$ ls\ndoc  mytest.tar.gz\nauzers@auzers-virtual-machine:~/Documents$ tar -zxvf mytest.tar.gz \n1.txt\nauzers@auzers-virtual-machine:~/Documents$ ls\n1.txt  doc  mytest.tar.gz\nauzers@auzers-virtual-machine:~/Documents$ \n</code></pre></p> <ul> <li><code>tar -zcvf</code> #\u6253\u5305\u540e\uff0c\u4ee5 gzip \u538b\u7f29,\u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29 <code>tar -cvf</code> PS:\u547d\u4ee4\u540e\u5fc5\u987b\u7d27\u8ddf\u6587\u4ef6\u6863\u540d</li> </ul>"},{"location":"computer/Linux/linux/#4","title":"4 \u76ee\u5f55\u542b\u4e49","text":"<ul> <li><code>/</code> Linux\u6839\u76ee\u5f55</li> <li><code>/bin</code> \u4e8c\u8fdb\u5236\u76ee\u5f55 GNU\u5de5\u5177 ls\u7b49\u81ea\u5e26\u7684\u547d\u4ee4</li> <li><code>/cdrom</code> \u4e00\u4e2a\u6302\u8f7d\u70b9\uff08mount point\uff09\uff0c\u901a\u5e38\u7528\u4e8e\u4e34\u65f6\u6302\u8f7d CD \u6216 DVD \u9a71\u52a8\u5668\u7684\u5185\u5bb9\uff08\u5982\u5149\u76d8\u7684\u6587\u4ef6\u7cfb\u7edf</li> <li><code>/etc</code> \u7cfb\u7edf\u914d\u7f6e\u76ee\u5f55</li> <li><code>/home</code> \u4e3b\u76ee\u5f55\uff0c\u663e\u793a\u6240\u6709\u7528\u6237\u76ee\u5f55</li> <li><code>/lib</code> \u5e93\u76ee\u5f55</li> <li><code>/lost+found</code> ...</li> <li><code>/mnt</code> \u4e3b\u8981\u6302\u8f7d\u76ee\u5f55\uff0c\u6302\u8f7d---\u5916\u5728\u7684\u8bbe\u5907\u548c\u7535\u8111\u8fdb\u884c\u94fe\u63a5\uff08U\u76d8\u7b49\uff09</li> <li><code>/run</code> \u8fd0\u884c\u76ee\u5f55</li> <li><code>/proc</code> \u4f2a\u6587\u4ef6\u7cfb\u7edf</li> <li><code>/tmp</code> \u4e34\u65f6\u6587\u4ef6</li> <li><code>/var</code> \u53ef\u53d8\u76ee\u5f55</li> <li><code>/boot</code> \u542f\u52a8\u76ee\u5f55</li> <li><code>/dev</code> \u8bbe\u5907\u76ee\u5f55</li> <li><code>/media</code> \u5a92\u4f53\u76ee\u5f55</li> <li><code>opt</code> \u53ef\u9009\u76ee\u5f55\uff08\u7b2c\u4e09\u65b9\u7684\u8f6f\u4ef6\u5305\u548c\u6570\u636e\u7b49\uff09</li> <li><code>/root</code> root\u7528\u6237\u7684\u4e3b\u76ee\u5f55 \u7ba1\u7406\u5458</li> <li><code>/sbin</code> \u7cfb\u7edf\u4e8c\u8fdb\u5236\u76ee\u5f55 GNU\u9ad8\u7ea7\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u547d\u4ee4\u5de5\u5177</li> <li><code>/srv</code> \u670d\u52a1\u76ee\u5f55</li> <li><code>/usr</code> \u7528\u6237\u4e8c\u8fdb\u5236\u76ee\u5f55\uff0cGNU\u5de5\u5177,\u53ef\u80fd\u6709\u4e00\u4e9b\u81ea\u5df1\u8bbe\u7f6e\u7684\u547d\u4ee4</li> </ul>"},{"location":"computer/Linux/linux/#5-tips","title":"5 tips","text":"<ul> <li><code>ctrl + u</code> #\u5220\u9664\u5149\u6807\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26</li> <li><code>ctrl + k</code> #\u5220\u9664\u5149\u6807\u4e4b\u540e\u7684\u6240\u6709\u5b57\u7b26</li> <li><code>ctrl + l</code> #\u6e05\u5c4f </li> <li><code>ctrl + c</code> #\u7ec8\u6b62\u5f53\u524d\u547d\u4ee4</li> <li><code>ctrl + d</code> #\u9000\u51fashell</li> <li><code>ctrl + z</code> #\u5c06\u5f53\u524d\u547d\u4ee4\u653e\u5230\u540e\u53f0</li> <li><code>ctrl + y</code> #\u5c06\u540e\u53f0\u547d\u4ee4\u6062\u590d\u5230\u524d\u53f0</li> <li><code>ctrl + a</code> #\u5c06\u5149\u6807\u79fb\u5230\u884c\u9996</li> <li><code>ctrl + e</code> #\u5c06\u5149\u6807\u79fb\u5230\u884c\u5c3e</li> <li><code>ctrl + w</code> #\u5220\u9664\u5149\u6807\u524d\u7684\u4e00\u4e2a\u5355\u8bcd</li> <li><code>ctrl + r</code> #\u641c\u7d22\u5386\u53f2\u547d\u4ee4  </li> </ul>"},{"location":"computer/Linux/linux2/","title":"Linux \u5e38\u7528\u547d\u4ee4\u4e0e\u7cfb\u7edf\u7ba1\u7406","text":"<code>#Linux</code>","tags":["Linux"]},{"location":"computer/Linux/linux2/#linux","title":"Linux \u5e38\u7528\u547d\u4ee4\u4e0e\u7cfb\u7edf\u7ba1\u7406","text":"<p> \u7ea6 1792 \u4e2a\u5b57  7 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>\u5bf9Linux\u7684\u7b80\u5355\u590d\u4e60</p>","tags":["Linux"]},{"location":"computer/Linux/linux2/#1","title":"1. \u57fa\u7840\u547d\u4ee4","text":"","tags":["Linux"]},{"location":"computer/Linux/linux2/#11","title":"1.1 \u6587\u4ef6\u4e0e\u76ee\u5f55\u64cd\u4f5c","text":"<ul> <li><code>ls -a -l</code> (\u522b\u540d: <code>ll</code> , <code>la</code> ) - \u5217\u51fa\u6587\u4ef6\u548c\u76ee\u5f55</li> <li><code>cd</code> - \u5207\u6362\u76ee\u5f55</li> <li><code>pwd</code> - \u663e\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55</li> <li><code>mkdir</code> - \u521b\u5efa\u76ee\u5f55</li> <li><code>touch</code> - \u521b\u5efa\u6587\u4ef6</li> <li><code>cat</code> - \u67e5\u770b\u6587\u4ef6\u5185\u5bb9</li> <li><code>more</code> - \u4ee5\u7ffb\u9875\u5f62\u5f0f\u67e5\u770b\u6587\u4ef6\u5185\u5bb9</li> <li><code>less</code> - \u53ef\u4ee5\u4f7f\u7528 PgUp/PgDn \u7ffb\u9875\u67e5\u770b\u6587\u4ef6</li> <li><code>cp</code> - \u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55</li> <li><code>mv</code> - \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6</li> <li><code>rm</code> - \u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#12","title":"1.2 \u6587\u4ef6\u67e5\u627e\u4e0e\u5185\u5bb9\u8fc7\u6ee4","text":"<ul> <li><code>which</code> - \u67e5\u627e\u547d\u4ee4\u7684\u7a0b\u5e8f\u6587\u4ef6\u8def\u5f84</li> <li><code>find</code> - \u67e5\u627e\u6307\u5b9a\u7684\u6587\u4ef6</li> <li><code>find &lt;src&gt; -name \"\u88ab\u67e5\u627e\u6587\u4ef6\u540d\"</code> - \u6309\u540d\u79f0\u67e5\u627e</li> <li><code>find &lt;src&gt; -size +|-n[kmg]</code> - \u6309\u5927\u5c0f\u67e5\u627e</li> <li><code>grep</code> - \u8fc7\u6ee4\u6587\u672c\u5185\u5bb9</li> <li><code>wc</code> - \u7edf\u8ba1\u884c\u6570\u3001\u5b57\u6570\u3001\u5b57\u8282\u6570</li> <li><code>|</code> - \u7ba1\u9053\u7b26\uff0c\u5c06\u5de6\u4fa7\u547d\u4ee4\u8f93\u51fa\u4f5c\u4e3a\u53f3\u4fa7\u547d\u4ee4\u8f93\u5165</li> <li><code>echo</code> - \u8f93\u51fa\u6587\u672c</li> <li><code>tail</code> - \u663e\u793a\u6587\u4ef6\u672b\u5c3e\u5185\u5bb9</li> <li><code>&gt;</code> \u548c <code>&gt;&gt;</code> - \u91cd\u5b9a\u5411\u7b26\uff0c <code>&gt;</code> \u8986\u76d6\uff0c <code>&gt;&gt;</code> \u8ffd\u52a0</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#13","title":"1.3 \u6253\u5305\u4e0e\u538b\u7f29","text":"<ul> <li><code>tar -zcvf</code> - \u6253\u5305\u5e76\u4ee5 gzip \u538b\u7f29</li> <li><code>tar -zxvf</code> - \u89e3\u538b\u7f29 gzip \u6587\u4ef6</li> <li><code>tar -cvf</code> - \u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29 \u538b\u7f29\u793a\u4f8b: Bash<pre><code>tar -zcvf test.tar.gz test/\n</code></pre> \u89e3\u538b\u7f29\u793a\u4f8b: Bash<pre><code>tar -zxvf test.tar.gz\n</code></pre></li> </ul> <p>\u6ce8\u610f: \u547d\u4ee4\u540e\u5fc5\u987b\u7d27\u8ddf\u6587\u4ef6\u6863\u540d</p>","tags":["Linux"]},{"location":"computer/Linux/linux2/#2","title":"2. \u7528\u6237\u4e0e\u6743\u9650\u7ba1\u7406","text":"","tags":["Linux"]},{"location":"computer/Linux/linux2/#21","title":"2.1 \u7528\u6237\u7ba1\u7406","text":"<ul> <li><code>root</code> - \u8d85\u7ea7\u7ba1\u7406\u5458\u8d26\u6237\uff0c\u62e5\u6709\u6700\u9ad8\u6743\u9650</li> <li><code>su - &lt;Username&gt;</code> - \u5207\u6362\u7528\u6237</li> <li><code>exit</code> - \u9000\u56de\u4e0a\u4e00\u7ea7\u7528\u6237</li> <li><code>sudo</code> - \u4e34\u65f6\u4ee5 root \u6743\u9650\u6267\u884c\u547d\u4ee4</li> </ul> <p>\u4e3a\u666e\u901a\u7528\u6237\u914d\u7f6e\u7ba1\u7406\u5458\u6743\u9650: 1. \u5207\u6362\u5230 root \u7528\u6237\uff0c\u6267\u884c <code>visudo</code> 2. \u5728\u6587\u4ef6\u6700\u540e\u6dfb\u52a0 <code>&lt;username&gt; ALL=(ALL) NOPASSWD: ALL</code> 3. \u901a\u8fc7 <code>wq</code> \u4fdd\u5b58\u5e76\u9000\u51fa</p>","tags":["Linux"]},{"location":"computer/Linux/linux2/#22","title":"2.2 \u7528\u6237\u7ec4\u7ba1\u7406","text":"<ul> <li>Linux \u6743\u9650\u7ba1\u63a7\u7684\u5355\u5143\u662f\u7528\u6237\u7ea7\u522b\u548c\u7528\u6237\u7ec4\u7ea7\u522b</li> <li><code>groupadd &lt;\u7528\u6237\u7ec4\u540d&gt;</code> - \u521b\u5efa\u7528\u6237\u7ec4</li> <li><code>groupdel &lt;\u7528\u6237\u7ec4\u540d&gt;</code> - \u5220\u9664\u7528\u6237\u7ec4</li> <li><code>useradd [-g -d] &lt;\u7528\u6237\u540d&gt;</code> - \u521b\u5efa\u7528\u6237</li> <li><code>-g</code> \u6307\u5b9a\u7528\u6237\u7ec4\uff0c\u4e0d\u6307\u5b9a\u5219\u521b\u5efa\u540c\u540d\u7ec4</li> <li><code>-d</code> \u6307\u5b9a\u7528\u6237\u5bb6\u76ee\u5f55\uff0c\u4e0d\u6307\u5b9a\u5219\u9ed8\u8ba4\u5728 <code>/home/\u7528\u6237\u540d</code></li> <li><code>userdel [-r] &lt;\u7528\u6237\u540d&gt;</code> - \u5220\u9664\u7528\u6237</li> <li><code>-r</code> \u5220\u9664\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff0c\u4e0d\u4f7f\u7528\u5219\u4fdd\u7559\u5bb6\u76ee\u5f55</li> <li><code>id [\u7528\u6237\u540d]</code> - \u67e5\u770b\u7528\u6237\u6240\u5c5e\u7684\u7ec4</li> <li><code>usermod -aG &lt;\u7528\u6237\u7ec4&gt; &lt;\u7528\u6237\u540d&gt;</code> - \u5c06\u7528\u6237\u52a0\u5165\u6307\u5b9a\u7528\u6237\u7ec4</li> <li><code>getent</code> - \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#23","title":"2.3 \u6743\u9650\u7ba1\u7406","text":"<ul> <li>\u6743\u9650\u7ec6\u8282\u5206\u4e3a\u5341\u4e2a\u69fd\u4f4d:</li> </ul> <ul> <li>\u6743\u9650\u7c7b\u578b: </li> <li><code>r</code> - \u8bfb</li> <li><code>w</code> - \u5199</li> <li> <p><code>x</code> - \u53ef\u6267\u884c</p> </li> <li> <p><code>chmod [-R] &lt;\u6743\u9650&gt; &lt;\u6587\u4ef6\u6216\u6587\u4ef6\u5939&gt;</code> - \u4fee\u6539\u6743\u9650</p> </li> <li><code>[-R]</code> \u5bf9\u6587\u4ef6\u5939\u5185\u7684\u5168\u90e8\u5185\u5bb9\u5e94\u7528\u540c\u6837\u7684\u64cd\u4f5c</li> <li> <p>\u4f8b: <code>chmod u=rwx,g=rx,o=x hello.txt</code> - \u5c06\u6587\u4ef6\u6743\u9650\u4fee\u6539\u4e3a <code>rwxr-x--x</code></p> </li> <li> <p>\u6743\u9650\u7684\u6570\u5b57\u8868\u793a\u6cd5:</p> </li> </ul> <p></p> <ul> <li><code>chown [-R] &lt;\u7528\u6237&gt;:&lt;\u7528\u6237\u7ec4&gt; &lt;\u6587\u4ef6\u6216\u6587\u4ef6\u5939&gt;</code> - \u4fee\u6539\u6240\u5c5e\u7528\u6237\u548c\u7528\u6237\u7ec4</li> <li>\u6b64\u547d\u4ee4\u53ea\u80fd\u7531 root \u7528\u6237\u4f7f\u7528</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#3","title":"3. \u7cfb\u7edf\u7ba1\u7406","text":"","tags":["Linux"]},{"location":"computer/Linux/linux2/#31","title":"3.1 \u8f6f\u4ef6\u5b89\u88c5","text":"<ul> <li>CentOS: <code>.rpm</code> \u6587\u4ef6, <code>yum</code> \u547d\u4ee4</li> <li>Ubuntu: <code>.deb</code> \u6587\u4ef6, <code>apt</code> \u547d\u4ee4</li> <li><code>apt -y install|remove|search &lt;\u8f6f\u4ef6\u540d\u79f0&gt;</code></li> <li>\u9700\u8981 root \u6743\u9650</li> <li>\u4f8b: <code>apt install wget</code> - \u5b89\u88c5 wget</li> <li><code>apt remove wget</code> - \u79fb\u9664 wget</li> <li><code>apt search wget</code> - \u641c\u7d22 wget</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#32","title":"3.2 \u670d\u52a1\u7ba1\u7406","text":"<ul> <li><code>systemctl</code> - \u63a7\u5236\u7cfb\u7edf\u670d\u52a1</li> <li><code>systemctl status &lt;\u670d\u52a1\u540d&gt;</code> - \u67e5\u770b\u670d\u52a1\u72b6\u6001</li> <li><code>systemctl stop &lt;\u670d\u52a1\u540d&gt;</code> - \u505c\u6b62\u670d\u52a1</li> <li><code>systemctl start &lt;\u670d\u52a1\u540d&gt;</code> - \u542f\u52a8\u670d\u52a1</li> <li><code>systemctl disable &lt;\u670d\u52a1\u540d&gt;</code> - \u53d6\u6d88\u670d\u52a1\u5f00\u673a\u81ea\u542f\u52a8</li> <li><code>systemctl enable &lt;\u670d\u52a1\u540d&gt;</code> - \u8bbe\u7f6e\u670d\u52a1\u5f00\u673a\u81ea\u542f\u52a8</li> <li>\u6ce8\u610f\uff1a\u90e8\u5206\u8f6f\u4ef6\u5b89\u88c5\u540e\u4e0d\u4f1a\u81ea\u52a8\u96c6\u6210\u5230 systemctl \u4e2d</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#33","title":"3.3 \u8f6f\u94fe\u63a5","text":"<ul> <li><code>ln -s &lt;\u6e90\u6587\u4ef6\u6216\u76ee\u5f55&gt; &lt;\u76ee\u6807\u8def\u5f84&gt;</code> - \u521b\u5efa\u8f6f\u94fe\u63a5</li> <li><code>-s</code> \u8868\u793a\u521b\u5efa\u8f6f\u94fe\u63a5\uff0c\u7c7b\u4f3c Windows \u4e2d\u7684\u5feb\u6377\u65b9\u5f0f</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#34","title":"3.4 \u65e5\u671f\u548c\u65f6\u533a","text":"<ul> <li><code>date -d &lt;\u683c\u5f0f\u5316\u5b57\u7b26\u4e32&gt;</code> - \u663e\u793a\u65e5\u671f</li> <li>\u4fee\u6539\u65f6\u533a:   Bash<pre><code>rm -f /etc/localtime\nln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n</code></pre></li> <li>NTP \u81ea\u52a8\u6821\u51c6\u7cfb\u7edf\u65f6\u95f4:   Bash<pre><code>sudo apt install ntp\nsystemctl start ntpd\nsystemctl enable ntpd  # \u5b9e\u73b0\u5b9a\u671f\u6821\u51c6\n</code></pre></li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#35-linux","title":"3.5 Linux \u76ee\u5f55\u542b\u4e49","text":"<ul> <li><code>/</code> - Linux \u6839\u76ee\u5f55</li> <li><code>/bin</code> - \u4e8c\u8fdb\u5236\u76ee\u5f55\uff0cGNU \u5de5\u5177\uff0cls \u7b49\u81ea\u5e26\u547d\u4ee4</li> <li><code>/cdrom</code> - \u6302\u8f7d\u70b9\uff0c\u901a\u5e38\u7528\u4e8e\u4e34\u65f6\u6302\u8f7d CD \u6216 DVD \u9a71\u52a8\u5668</li> <li><code>/etc</code> - \u7cfb\u7edf\u914d\u7f6e\u76ee\u5f55</li> <li><code>/home</code> - \u4e3b\u76ee\u5f55\uff0c\u663e\u793a\u6240\u6709\u7528\u6237\u76ee\u5f55</li> <li><code>/lib</code> - \u5e93\u76ee\u5f55</li> <li><code>/lost+found</code> - \u6587\u4ef6\u7cfb\u7edf\u6062\u590d\u76ee\u5f55</li> <li><code>/mnt</code> - \u4e3b\u8981\u6302\u8f7d\u76ee\u5f55\uff0c\u7528\u4e8e\u5916\u90e8\u8bbe\u5907\u8fde\u63a5</li> <li><code>/run</code> - \u8fd0\u884c\u76ee\u5f55</li> <li><code>/proc</code> - \u4f2a\u6587\u4ef6\u7cfb\u7edf</li> <li><code>/tmp</code> - \u4e34\u65f6\u6587\u4ef6</li> <li><code>/var</code> - \u53ef\u53d8\u76ee\u5f55</li> <li><code>/boot</code> - \u542f\u52a8\u76ee\u5f55</li> <li><code>/dev</code> - \u8bbe\u5907\u76ee\u5f55</li> <li><code>/media</code> - \u5a92\u4f53\u76ee\u5f55</li> <li><code>/opt</code> - \u53ef\u9009\u76ee\u5f55\uff08\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\u548c\u6570\u636e\uff09</li> <li><code>/root</code> - root \u7528\u6237\u7684\u4e3b\u76ee\u5f55</li> <li><code>/sbin</code> - \u7cfb\u7edf\u4e8c\u8fdb\u5236\u76ee\u5f55\uff0cGNU \u9ad8\u7ea7\u7ba1\u7406\u5458\u547d\u4ee4\u5de5\u5177</li> <li><code>/srv</code> - \u670d\u52a1\u76ee\u5f55</li> <li><code>/usr</code> - \u7528\u6237\u4e8c\u8fdb\u5236\u76ee\u5f55\uff0cGNU \u5de5\u5177\uff0c\u53ef\u80fd\u6709\u81ea\u8bbe\u7f6e\u7684\u547d\u4ee4</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#36","title":"3.6 \u73af\u5883\u53d8\u91cf","text":"<ul> <li>\u73af\u5883\u53d8\u91cf\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u5b58\u50a8\u7cfb\u7edf\u914d\u7f6e\u4fe1\u606f</li> <li><code>env</code> \u67e5\u770b\u73af\u5883\u53d8\u91cf\u4ee5\u952e\u503c\u5bf9\u5f62\u5f0f\u7ed9\u51fa</li> <li>\u5f53\u6267\u884c\u4efb\u4f55\u547d\u4ee4\uff0c\u90fd\u4f1a\u4ece <code>PATH</code> \u4e2d\u6309\u987a\u5e8f\u4ece\u76ee\u5f55\u4e2d\u5bfb\u627e</li> <li><code>$</code> \u7528\u4e8e\u53d6\"\u53d8\u91cf\"\u7684\u503c</li> <li><code>PATH</code> \u662f\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u52a0\u5165\u8def\u5f84\u4e00\u822c <code>export PATH=$PATH:\u81ea\u5b9a\u4e49\u8def\u5f84</code></li> <li>\u53d6\u5f97\u73af\u5883\u53d8\u91cf\u7684\u503c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bed\u6cd5\uff1a <code>$\u73af\u5883\u53d8\u91cf\u540d</code> \u6765\u53d6\u5f97\uff0c\u6bd4\u5982 <code>echo $PATH</code></li> <li>\u4e34\u65f6\u8bbe\u7f6e\u53d8\u91cf\u7684\u503c\uff0c <code>export \u53d8\u91cf\u540d=\u53d8\u91cf\u503c</code></li> <li>\u6c38\u4e45\u751f\u6548<ul> <li>\u9488\u5bf9\u5f53\u524d\u7528\u6237\u914d\u7f6e\u5728 <code>~/bashrc</code> \u4e2d</li> <li>\u9488\u5bf9\u5168\u90e8\u7528\u6237\uff0c\u914d\u7f6e\u5728\u7cfb\u7edf\u7684\uff1a <code>/etc/profile</code> \u6587\u4ef6\u4e2d</li> <li>\u5e76\u901a\u8fc7\u8bed\u6cd5 <code>source \u914d\u7f6e\u6587\u4ef6</code> \u751f\u6548</li> </ul> </li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#4","title":"4. \u7f51\u7edc\u914d\u7f6e","text":"","tags":["Linux"]},{"location":"computer/Linux/linux2/#41-ip","title":"4.1 IP \u5730\u5740","text":"<ul> <li>\u6bcf\u53f0\u8ba1\u7b97\u673a\u90fd\u6709 IP \u5730\u5740\uff0c\u7528\u4e8e\u7f51\u7edc\u901a\u4fe1</li> <li><code>ifconfig</code> - \u67e5\u770b\u672c\u673a IP \u5730\u5740 (\u5982\u65e0\u6cd5\u4f7f\u7528\uff0c\u5b89\u88c5 net-tools)</li> <li>\u7279\u6b8a IP:</li> <li><code>127.0.0.1</code> - \u672c\u673a\u5730\u5740</li> <li><code>0.0.0.0</code> - \u53ef\u6307\u4ee3\u672c\u673a\uff0c\u7528\u4e8e\u7aef\u53e3\u7ed1\u5b9a</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#42","title":"4.2 \u4e3b\u673a\u540d","text":"<ul> <li><code>hostname</code> - \u67e5\u770b\u4e3b\u673a\u540d</li> <li><code>hostnamectl set-hostname &lt;\u4e3b\u673a\u540d&gt;</code> - \u4fee\u6539\u4e3b\u673a\u540d (\u9700 root \u6743\u9650)</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#43","title":"4.3 \u57df\u540d\u89e3\u6790","text":"<ul> <li>\u901a\u8fc7\u4e3b\u673a\u540d\u627e\u8ba1\u7b97\u673a IP \u5730\u5740 (\u57df\u540d\u89e3\u6790)</li> <li>\u82e5\u672c\u5730\u627e\u4e0d\u5230\uff0c\u4f1a\u8054\u7f51\u67e5\u8be2\u516c\u5171 DNS \u670d\u52a1</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#44","title":"4.4 \u7f51\u7edc\u8bf7\u6c42\u548c\u4e0b\u8f7d","text":"<ul> <li><code>ping [-c num] &lt;IP\u6216\u4e3b\u673a\u540d&gt;</code> - \u6d4b\u8bd5\u7f51\u7edc\u8fde\u901a\u6027</li> <li><code>-c</code> \u6307\u5b9a\u68c0\u67e5\u6b21\u6570\uff0c\u4e0d\u4f7f\u7528\u5219\u65e0\u9650\u68c0\u67e5</li> <li><code>wget</code> - \u975e\u4ea4\u4e92\u5f0f\u6587\u4ef6\u4e0b\u8f7d\u5668</li> <li><code>wget -b &lt;url&gt;</code> - \u540e\u53f0\u4e0b\u8f7d</li> <li><code>tail -f wget-log</code> - \u8ddf\u8e2a\u4e0b\u8f7d\u8fdb\u5ea6</li> <li><code>curl</code> - \u53d1\u9001 HTTP \u8bf7\u6c42</li> <li><code>curl -o &lt;\u6587\u4ef6\u540d&gt; &lt;url&gt;</code> - \u4e0b\u8f7d\u6587\u4ef6</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#45","title":"4.5 \u7aef\u53e3","text":"<ul> <li>\u8bbe\u5907\u4e0e\u5916\u754c\u901a\u4fe1\u7684\u51fa\u5165\u53e3\uff0c\u5206\u4e3a\u7269\u7406\u7aef\u53e3\u548c\u865a\u62df\u7aef\u53e3</li> <li>\u7269\u7406\u7aef\u53e3\uff1a\u53ef\u89c1\u7684\u63a5\u53e3\uff0c\u5982 USB \u63a5\u53e3\u3001RJ45 \u7f51\u53e3\u7b49</li> <li>\u865a\u62df\u7aef\u53e3\uff1a\u64cd\u4f5c\u7cfb\u7edf\u4e0e\u5916\u90e8\u4ea4\u4e92\u7684\u51fa\u5165\u53e3</li> <li>IP \u9501\u5b9a\u8ba1\u7b97\u673a\uff0c\u7aef\u53e3\u9501\u5b9a\u5177\u4f53\u7a0b\u5e8f</li> <li>\u7aef\u53e3\u7c7b\u578b:</li> <li>\u516c\u8ba4\u7aef\u53e3: 1~1023\uff0c\u7cfb\u7edf\u5185\u7f6e\u6216\u77e5\u540d\u8f6f\u4ef6\u4f7f\u7528</li> <li>\u6ce8\u518c\u7aef\u53e3: 1024~49151\uff0c\u7528\u6237\u81ea\u5b9a\u4e49\u4f7f\u7528</li> <li>\u52a8\u6001\u7aef\u53e3: 49152~65535\uff0c\u4e34\u65f6\u4f7f\u7528</li> <li><code>nmap &lt;IP\u5730\u5740&gt;</code> - \u67e5\u770b\u7aef\u53e3\u5360\u7528\u60c5\u51b5</li> <li><code>netstat -anp|grep &lt;\u7aef\u53e3\u53f7&gt;</code> - \u67e5\u770b\u6307\u5b9a\u7aef\u53e3\u5360\u7528\u60c5\u51b5</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#5","title":"5. \u8fdb\u7a0b\u7ba1\u7406","text":"","tags":["Linux"]},{"location":"computer/Linux/linux2/#51","title":"5.1 \u4efb\u52a1\u7ba1\u7406\u5668","text":"<ul> <li><code>top</code> - \u663e\u793a\u6216\u7ba1\u7406\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f</li> <li><code>ps</code> - \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u8fdb\u7a0b\u72b6\u6001</li> <li><code>kill</code> - \u7ed3\u675f\u8fdb\u7a0b</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#52","title":"5.2 \u8fdb\u7a0b\u67e5\u770b\u4e0e\u63a7\u5236","text":"<ul> <li><code>ps -ef</code> - \u67e5\u770b\u5168\u90e8\u8fdb\u7a0b\u4fe1\u606f</li> <li>\u4ece\u5de6\u5230\u53f3\u663e\u793a: uid, pid, ppid, c (CPU \u5360\u7528\u7387), stime (\u542f\u52a8\u65f6\u95f4), tty (\u7ec8\u7aef\u5e8f\u53f7), time (CPU \u5360\u7528\u65f6\u95f4), cmd (\u542f\u52a8\u8def\u5f84)</li> <li><code>ps -ef|grep &lt;\u5173\u952e\u5b57&gt;</code> - \u67e5\u627e\u7279\u5b9a\u8fdb\u7a0b</li> <li><code>kill -9 &lt;\u8fdb\u7a0bID&gt;</code> - \u5f3a\u5236\u7ec8\u6b62\u8fdb\u7a0b</li> <li><code>-9</code> \u8868\u793a\u5f3a\u5236\u4e2d\u6b62</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#53","title":"5.3 \u4e3b\u673a\u72b6\u6001\u76d1\u63a7","text":"<ul> <li><code>top</code> - \u67e5\u770b\u4e3b\u673a\u72b6\u6001</li> </ul>","tags":["Linux"]},{"location":"computer/Linux/linux2/#6","title":"6. \u5e38\u7528\u5feb\u6377\u952e\u4e0e\u6280\u5de7","text":"<ul> <li><code>Ctrl + c</code> - \u5f3a\u5236\u505c\u6b62\u5f53\u524d\u547d\u4ee4</li> <li><code>Ctrl + d</code> - \u9000\u51fa\u6216\u767b\u51fa shell</li> <li><code>Ctrl + l</code> - \u6e05\u5c4f</li> <li><code>Ctrl + a</code> - \u5149\u6807\u79fb\u52a8\u5230\u884c\u9996</li> <li><code>Ctrl + e</code> - \u5149\u6807\u79fb\u52a8\u5230\u884c\u5c3e</li> <li><code>Ctrl + u</code> - \u5220\u9664\u5149\u6807\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26</li> <li><code>Ctrl + k</code> - \u5220\u9664\u5149\u6807\u4e4b\u540e\u7684\u6240\u6709\u5b57\u7b26</li> <li><code>Ctrl + w</code> - \u5220\u9664\u5149\u6807\u524d\u7684\u4e00\u4e2a\u5355\u8bcd</li> <li><code>Ctrl + r</code> - \u641c\u7d22\u5386\u53f2\u547d\u4ee4</li> <li><code>Ctrl + z</code> - \u5c06\u5f53\u524d\u547d\u4ee4\u653e\u5230\u540e\u53f0</li> <li><code>Ctrl + y</code> - \u5c06\u540e\u53f0\u547d\u4ee4\u6062\u590d\u5230\u524d\u53f0</li> <li><code>Ctrl + \u2190/\u2192</code> - \u5feb\u901f\u8df3\u8fc7\u5355\u8bcd</li> <li><code>history</code> - \u67e5\u770b\u5386\u53f2\u8f93\u5165\u8fc7\u7684\u547d\u4ee4</li> <li><code>!&lt;\u547d\u4ee4\u524d\u7f00&gt;</code> - \u81ea\u52a8\u6267\u884c\u5386\u53f2\u6700\u8fd1\u7684\u5339\u914d\u547d\u4ee4</li> </ul>","tags":["Linux"]},{"location":"links/","title":"Links","text":"<p>My friends!</p> am  myself Isshiki\u4fee's Notebook \u5389\u5bb3\u7684\u5b66\u957f Wcowin's Web \u5faa\u6b64\u82e6\u65c5\uff0c\u4ee5\u8fbe\u661f\u8fb0"},{"location":"summary/","title":"Index","text":""},{"location":"summary/#summary","title":"Summary","text":"2025\u5468\u7ed3          <ul> <li> \u7b2c 14 \u5468  130  0 mins              1743951101 </li> <li> \u7b2c 13 \u5468  459  2 mins              1743347263 </li> <li> \u7b2c 12 \u5468  346  1 mins              1742733620 </li> <li> \u7b2c 11 \u5468  275  1 mins              1742178414 </li> <li> \u7b2c 10 \u5468  285  1 mins              1742114644 </li> <li> \u7b2c 9 \u5468  209  1 mins              1740907301 </li> <li> \u7b2c 6 \u5468  475  2 mins              1740493509 </li> <li> \u7b2c 8 \u5468  284  1 mins              1740493509 </li> <li> \u7b2c 7 \u5468  153  1 mins              1740320114 </li> <li> \u7b2c3~5\u5468  652  2 mins              1739691897 </li> </ul>"},{"location":"summary/2025/03_05/","title":"2025-W03~W05","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/03_05/#2025-w03w05","title":"2025-W03~W05","text":"<p> \u7ea6 676 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/03_05/#completed","title":"Completed","text":"<ul> <li> \u5b66\u4e60\u4e86 Linux \u57fa\u7840<ul> <li>\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e86\u521d\u6b65\u4e86\u89e3</li> <li>\u5b66\u4e60\u4e86 bash \u7684\u5e38\u7528\u547d\u4ee4\uff08\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u5e94\u7528\u7684\u673a\u4f1a\uff09</li> <li>\u88c5\u4e86 Ubuntu</li> </ul> </li> <li> \u5b66\u4e86\u4e00\u4e9b\u7b97\u6cd5<ul> <li>\u611f\u89c9\u597d\u6ca1\u610f\u601d\uff0c\u5c31\u662f\u5237\u9898\u770b\u9898\u89e3\u5199\u9898\u89e3\uff0c\u57fa\u672c\u719f\u7ec3\u4e86\u7b97\u6cd5\u4e2d\u7528\u5230\u7684 C++ \u8bed\u6cd5\u5c31\u6ca1\u518d\u5b66\u4e86</li> </ul> </li> <li> \u7528 autohotkey \u5b9e\u73b0\u4e86\u952e\u4f4d\u6620\u5c04<ul> <li>\u5f7b\u5e95\u6446\u8131\u65b9\u5411\u952e</li> <li>\u73b0\u5728\u77e5\u9053 vim \u4e86\uff0c\u4ee5\u540e\u80af\u5b9a\u662f\u7528 vim, \u4f46\u662f autohotkey \u786e\u5b9e\u4e0a\u624b\u65b9\u4fbf</li> </ul> </li> <li> \u63a8\u8fdb CS61A <ul> <li>\u6700\u5f71\u54cd\u6548\u7387\u7684\u95ee\u9898\u5c31\u662f\u8bfb\u82f1\u6587\u7684\u901f\u5ea6\u592a\u6162\u4e86\uff0c\u5f97\u6162\u6162\u4e60\u60ef\u3002</li> <li>\u76ee\u524d\u7684\u8fdb\u5ea6\u5927\u6982\u5728\u4e00\u534a\u5c11\u4e00\u70b9\uff082 * proj, 5 * lab\uff09\uff0c\u4e3b\u8981\u8fd8\u662f\u5728\u5bb6\u91cc\u592a\u6446\u4e86\uff0c\u5e73\u5747\u4e0b\u6765\u6bcf\u5929\u5b66\u4e60\u65f6\u95f4\u4f30\u8ba1\u5c31\u4e24\u4e09\u4e2a\u5c0f\u65f6</li> <li>\u559c\u6b22\u8fd9\u79cd\u8fdb\u5ea6\u6761\u5f0f\u7684\u5b66\u4e60\u3002</li> </ul> </li> <li> \u914d\u7f6e\u4e86 obsidian (\u76f4\u63a5 copy \u4e86\u540c\u5b66\u7684\u914d\u7f6e)</li> <li> \u53c8\u770b\u4e86\u4e00\u904d\u5ddd\u7aef\u7684\u300a\u53e4\u90fd\u300b\u548c\u300a\u5343\u53ea\u9e64\u300b<ul> <li>\u5927\u6982\u662f\u56e0\u4e3a\u8fd9\u4e24\u672c\u4e66\u968f\u624b\u5c31\u80fd\u62ff\u5230\u3002</li> <li>\u5b9e\u9645\u4e0a\u300a\u96ea\u56fd\u300b\u4e5f\u5728\u8fb9\u4e0a\uff0c\u4f46\u662f\u8fd9\u672c\u4e66\u5f53\u65f6\u770b\u5b8c\u4e00\u904d\u540e\u73b0\u5728\u60f3\u4e0d\u8d77\u6765\u534a\u70b9\u4e1c\u897f\uff0c\u53ea\u8bb0\u5f97\u8bfb\u5b8c\u540e\u5f88\u832b\u7136\uff0c\u6240\u4ee5\u6ca1\u9009\u62e9\u770b</li> </ul> </li> <li> \u672c\u5730\u90e8\u7f72\u4e86 deepseek<ul> <li>\u5bf9\u6211\u6765\u8bf4\u6ca1\u4ec0\u4e48\u7528\uff0c\u8ddf\u98ce\u7f62\u4e86</li> </ul> </li> <li> \u73a9<ul> <li>\u8212\u670d\u662f\u8212\u670d\uff0c\u4f46\u662f\u56e0\u4e3a\u60f3\u8f6c\u4e13\u4e1a\u8fd8\u662f\u6709\u70b9\u7126\u8651 </li> </ul> </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/03_05/#uncompleted","title":"Uncompleted","text":"<ul> <li> \u6bcf\u5929\u8fd0\u52a8<ul> <li>\u6ca1\u4ec0\u4e48\u7406\u7531\uff0c\u7eaf\u61d2</li> </ul> </li> <li> \u4e0d\u54ac\u624b<ul> <li>\u52a8\u8111\u5b50\u7684\u65f6\u5019\u63a7\u5236\u4e0d\u4f4f\uff0c\u4f46\u662f\u7565\u6709\u597d\u8f6c</li> </ul> </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/03_05/#next-week-plan","title":"Next week plan","text":"<ul> <li> \u7ee7\u7eed\u63a8\u8fdb CS61A\uff0c\u5e0c\u671b\u56de\u6821\u524d\u80fd\u7ed3\u675f</li> <li> \u51c6\u5907\u8f6c\u4e13\u4e1a\u7684\u9762\u8bd5</li> <li> \u6bcf\u5929\u8fd0\u52a8</li> <li> \u9002\u5f53\u653e\u677e + \u65e9\u7761</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/03_05/#thought","title":"Thought","text":"<ul> <li>\u77e5\u9053\u548c\u505a\u5230\u4e4b\u95f4\u8fd8\u662f\u6709\u5f88\u8fdc\u7684\u8ddd\u79bb\uff0c\u660e\u660e\u77e5\u9053\u81ea\u5df1\u4ec0\u4e48\u65f6\u5019\u8be5\u505a\u4ec0\u4e48\u5374\u6ca1\u53bb\u505a\uff0c\u7136\u540e\u6076\u6027\u5faa\u73af\u3002\u770b\u5230\u5927\u51b0\u8001\u5e08\u7684\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u89c2\u70b9\uff1a\u77e5\u548c\u884c\u4e0d\u662f\u654c\u6027\u7684\uff0c\u5373\u975e\u5148\u77e5\u800c\u540e\u884c\uff0c\u4ed6\u4eec\u662f\u4e00\u4f53\u4e24\u9762\u7684\uff0c\"\u884c\"\u4e0d\u4e86\u662f\u56e0\u4e3a\u6839\u672c\u6ca1\u6709\"\u77e5\"\u3002\u53ef\u80fd\u6267\u884c\u529b\u4e0d\u591f\u5f3a\u7684\u539f\u56e0\u8fd8\u662f\u56e0\u4e3a\u6ca1\u6709\u8ba4\u8bc6\u5230\u505a\u67d0\u4ef6\u4e8b\u7684\u91cd\u8981\u6027\u3002\u5e0c\u671b\u63a5\u4e0b\u6765\u80fd\u6709\u6240\u6539\u5584</li> <li>\u611f\u89c9\u81ea\u5df1\u7684\u5f88\u591a\u601d\u8003\u4e8b\u60c5\u7684\u65b9\u5f0f\u8fd8\u662f\u4e0d\u591f\u6210\u719f\uff0c\u6709\u65f6\u5019\u770b\u5230\u522b\u4eba\u770b\u5f85\u4e8b\u60c5\u7684\u65b9\u5f0f\u4f1a\u89c9\u5f97\u4ed6\u4eec\u771f\u7684\u597d\u5389\u5bb3\u3002\u89c1\u8d24\u601d\u9f50\u5427</li> <li>\u6709\u4e9b\u89c2\u70b9\u548c\u7236\u6bcd\u4e0d\u592a\u4e00\u81f4\uff0c\u597d\u5728\u4ed6\u4eec\u4e5f\u53ea\u662f\u8868\u8fbe\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u6700\u540e\u8fd8\u662f\u4f1a\u652f\u6301\u6211\u3002\u73b0\u5728\u60f3\u6765\u6709\u4e9b\u8bdd\u8bf4\u7684\u592a\u5c16\u9510\u4e86\uff0c\u53ef\u80fd\u4ed6\u4eec\u4f1a\u542c\u8d77\u6765\u4e0d\u592a\u8212\u670d\uff0c\u5e0c\u671b\u4ee5\u540e\u80fd\u591a\u6ce8\u610f\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/06/","title":"2025-W06","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/06/#2025-w06","title":"2025-W06","text":"<p> \u7ea6 499 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/06/#completed","title":"Completed","text":"<ul> <li> CS61A \u63a8\u8fdb<ul> <li>\u8fd8\u5269 1 \u4e2a proj, 4 \u4e2a lab</li> </ul> </li> <li> \u5b66\u4e86\u4e00\u4e0b\u5434\u6069\u8fbe\u7684 Prompt Engineering</li> <li> \u7ee7\u642d\u5efa\u535a\u5ba2\u521d\u5b66 git \u540e\u7cfb\u7edf\u6574\u7406\u4e86\u4e00\u904d\uff0c\u70b9\u8fd9\u91cc</li> <li> \u66f2\u6298\u7684\u5de5\u5177\u94fe\u53d8\u5316 vscode -&gt; cursor + deepseek -&gt;vscode + cline + deepseek </li> <li> \u5e38\u719f\u8bfb\u4e86\u4e00\u4e9b\u8bba\u6587\uff0c\u4f46\u662f\u770b\u4e0d\u61c2\uff0c\u5728\u8fd9\u91cc</li> <li> \u8f6c\u4e13\u4e1a\u9762\u8bd5\u51c6\u5907<ul> <li>\u611f\u89c9\u51c6\u5907\u5f97\u6709\u70b9\u65e0\u5398\u5934\uff0c\u6253\u7b97\u56de\u6821\u540e\u518d\u548c\u6709\u7ecf\u9a8c\u7684\u5b66\u957f\u5b66\u59d0\u9762\u804a\u4e00\u4e0b</li> </ul> </li> <li> \u8fc7\u4e86\u79d1\u76ee\u4e00</li> <li> \u6bcf\u5929\u8fd0\u52a8<ul> <li>\u9664\u4e86\u51c6\u5907\u79d1\u76ee\u4e00\u90a3\u5929</li> </ul> </li> <li> \u4f11\u606f\uff0c\u73a9<ul> <li>\u91cd\u62fe\u53ea\u72fc\uff0c\u6253\u4e86\u4e2a\u6700\u5feb\u7684\u4fee\u7f57\u7ed3\u5c40\uff0c\u4e70\u4e86\u76d7\u7248\u6cd5\u73af\uff0c\u51c6\u5907\u6709\u7a7a\u73a9</li> <li>\u770b WTT</li> </ul> </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/06/#next-week-plan","title":"Next week plan","text":"<ul> <li> CS61A \u7ed3\u675f</li> <li> \u6574\u7406 AI \u6280\u672f\u6808\u89c4\u5212\u4e0b\u4e00\u6b65\u5b66\u4e60\u8def\u7ebf</li> <li> \u51c6\u5907\u8f6c\u4e13\u4e1a\u9762\u8bd5<ul> <li>\u6574\u7406\u4e00\u4efd\u9762\u7ecf</li> </ul> </li> <li> \u5b8c\u5584\u535a\u5ba2\u4e00\u4e9b\u7a7a\u7f3a\u677f\u5757</li> <li> \u6bcf\u5929\u8fd0\u52a8</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/06/#thought","title":"Thought","text":"<ul> <li>\u5173\u4e8e deepseek \u7684\u4e00\u4e9b\u770b\u6cd5\uff1a\u4e2a\u4eba\u8ba4\u4e3a ds \u6700\u5927\u7684\u610f\u4e49\u5728\u4e8e\u5f00\u6e90\uff0c\u7f51\u4e0a\u90a3\u4e48\u591a\u4eba\u9ed1\u7684\u6284\u88ad\u548c\u865a\u62a5\u6210\u672c\u6839\u672c\u4e0d\u91cd\u8981\u3002<ul> <li>\u539f\u672c AI \u7684\u6218\u573a\u5c31\u53ea\u6709\u4e2d\u7f8e, ds \u8fd9\u4e00\u6ce2\u51e0\u4e4e\u628a\u6240\u6709\u7684\u56fd\u5bb6\u5f3a\u884c\u62c9\u4e0a\u4e86\u724c\u684c\u3002\u5f00\u6e90\u540e\u6240\u6709\u4f01\u4e1a\u90fd\u53ef\u4ee5\u672c\u5730\u90e8\u7f72\uff0c\u539f\u6765\u7684\u4e00\u4e9b\u4f01\u4e1a\u6838\u5fc3\u4fe1\u606f\u4e0d\u6562\u7528 ChatGPT \u8fd9\u4e9b\u6a21\u578b\u5206\u6790\uff0c\u73b0\u5728\u6bcf\u4e2a\u4f01\u4e1a\u53ef\u4ee5\u653e\u8086\u4f7f\u7528\u4e00\u4e2a\u548c o1 \u76f8\u5f53\u7684\u6a21\u578b\u3002</li> <li>\u4e4b\u524d\u6240\u6709 AI \u7814\u7a76\u4e0a\u8fdb\u5ea6\u4e0a\u7684\u5dee\u8ddd\u88ab\u5927\u5927\u7f29\u5c0f\uff0cds \u4e00\u5df1\u4e4b\u529b\u63a8\u52a8 AI \u5411\u524d\u8d70\u4e86\u4e00\u5927\u6b65</li> <li>\u5f88\u96be\u60f3\u8c61\u505a\u51fa\u8fd9\u4e2a\u51b3\u7b56\u9700\u8981\u591a\u5927\u52c7\u6c14\uff0c\u81f3\u5c11\u6211\u89c9\u5f97\u7528\u5546\u4eba\u601d\u7ef4\u6765\u770b\u76f8\u5bf9\u4e8e\u4e0d\u5f00\u6e90\u53ea\u662f\u53d1\u5e03 r1 \u7684\u505a\u6cd5\u6765\u770b\u5e76\u6ca1\u6709\u83b7\u5f97\u66b4\u5229\u3002</li> <li>\u6211\u4f30\u8ba1\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u8d8b\u52bf\u5c31\u662f\u5404\u79cd\u8bbe\u5907\u690d\u5165 AI\uff0c\u4ec0\u4e48\u51b0\u7bb1\uff0c\u6d17\u8863\u673a\uff0c\u7a97\u5e18\uff0c\u6c7d\u8f66\u4e4b\u7c7b\u7684</li> </ul> </li> <li>\u8fdf\u5230\u7684\u65b0\u5e74\u5feb\u4e50\uff01</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/07/","title":"2025-W07","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/07/#2025-w07","title":"2025-W07","text":"<p> \u7ea6 177 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/07/#completed","title":"Completed","text":"<ul> <li> CS61A \u63a8\u8fdb <ul> <li>\u8fd8\u5269\u6700\u540e 1 \u4e2a lab</li> </ul> </li> <li> \u91cd\u6784\u4e86\u56fe\u5e8a<ul> <li>\u653e\u5f03\u4e86\u539f\u6765\u4e0d\u592a\u7a33\u5b9a\u7684\u514d\u8d39\u56fe\u5e8a\uff0c\u6539\u7528\u4e86 Github + CDN + Picgo</li> </ul> </li> <li> \u6536\u96c6\u5927\u91cf\u8d44\u6599\uff0c\u89c4\u5212\u4e86\u4e0b\u4e00\u6b65\u5b66\u4e60\u8def\u7ebf</li> <li> \u5199\u4e86\u4e00\u7bc7\u535a\u5ba2 -- \"\u6784\u5efa\u81ea\u5df1\u7684\u4fe1\u606f\u6811\"\uff0c\u4f30\u8ba1\u4e0b\u5468\u4e0a\u4f20</li> <li> \u770b\u4e86\u54ea\u5412 '-'</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/07/#next-week-plan","title":"Next week plan","text":"<ul> <li> CS61A \u7ed3\u8bfe\uff0c\u5199\u603b\u7ed3</li> <li> \u535a\u5ba2\u5f00\u4e2a Tags \u680f </li> <li> \u5f00\u5b66 FDS <ul> <li>\u8fd8\u5728\u8003\u8651\u662f\u770b CS61B \u8fd8\u662f\u4e4b\u524d\u6536\u85cf\u7684\u56fd\u5185\u8bfe\u7a0b</li> </ul> </li> <li> \u628a Github \u540d\u79f0\u6539\u4e86<ul> <li>\u5927\u5de5\u7a0b\uff0c\u5f88\u591a\u6307\u5411\u539f username \u7684\u4e1c\u897f\u8981\u6539</li> </ul> </li> <li> \u4e0b\u5468\u5f00\u59cb\u4e0a\u8bfe</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/07/#thinking","title":"Thinking","text":"<ul> <li>nothing..</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/08/","title":"2025-W08","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/08/#2025-w08","title":"2025-W08","text":"<p> \u7ea6 308 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/08/#completed","title":"Completed","text":"<ul> <li> \u5f00\u4e86 CS61B<ul> <li>\u9996\u5148\u662f grapescope \u597d\u50cf\u7528\u4e0d\u4e86\uff0c\u4e4b\u524d\u7684\u4e24\u4e2a\u8bfe\u7a0b\u4ee3\u7801\u4f3c\u4e4e\u90fd\u5931\u6548\u4e86</li> <li>\u914d\u73af\u5883\u8e29\u7684\u5751\uff1a<ul> <li>24 spring \u7684 skeleton \u4ed3\u5e93\u91cc\u6ca1\u6709 library \u5e93 (18 \u6216\u8005 21 \u7684\u4e0d\u7528\u7ba1)</li> <li>\u542b beacon \u7684\u90e8\u5206\u4e0d\u7528\u7ba1\uff0cCS61B \u63d2\u4ef6\u4e5f\u4e0d\u7528\u4e0b\uff0c\u8fd9\u4e9b\u662f\u7ed9 UCB \u6821\u5185\u7528\u7684</li> <li>\u8dd1\u4ee3\u7801\u7684\u65f6\u5019\u5355\u72ec\u6253\u5f00 lab (proj), \u5982\u679c\u8fd8\u662f\u8dd1\u4e0d\u8d77\u6765\u53ef\u80fd\u662f\u56e0\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u6ca1\u6709 library \u5e93</li> <li>\u7fa1\u6155 OIer</li> </ul> </li> </ul> </li> <li> \u611f\u5192\u53d1\u70e7\u751f\u5403\u4e09\u5929<ul> <li>\u7f8e\u5316\u4e86 powershell \u548c Ubuntu</li> <li>\u770b\u4e86\u51e0\u90e8\u7535\u5f71..</li> <li>\u9762\u8bd5\u7684\u65f6\u5019\u8fd8\u5728\u53d1\u70e7\uff0c\u55d3\u5b50\u4e5f\u54d1\u7684\u8bdd\u90fd\u8bf4\u4e0d\u51fa\u6765</li> </ul> </li> <li> \u4e0a\u8bfe<ul> <li>\u8d39\u65f6\u95f4\uff0c\u4f46\u4e0d\u8d39\u8111\u5b50</li> </ul> </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/08/#next-week-plan","title":"Next week plan","text":"<ul> <li>CS61B</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/08/#thinking","title":"Thinking","text":"<ul> <li>\u8bfb\u7814\uff1f\u8bfb\u535a\uff1f\u6da6\u5317\u7f8e\uff1f\u6211\u60f3\u4e0d\u6e05\u695a\uff0c\u4f46\u6211\u77e5\u9053\u5982\u679c\u8fd9\u5b66\u671f\u6ca1\u641e\u6e05\u695a\u5230\u5927\u4e8c\u4e86\u4e00\u5b9a\u4f1a\u540e\u6094\u3002\u5f80\u9519\u8bef\u7684\u65b9\u5411\u52aa\u529b\u4e0d\u5982\u8eba\u7740\u7761\u5927\u89c9\u3002</li> <li>\u63a5\u4e0b\u6765\u5927\u6982\u7684\u8ba1\u5212\u662f\uff1aCS61B\uff0c\u6982\u7edf\uff0cCS231n\uff0c\u8fdb\u5b9e\u9a8c\u5ba4</li> <li>\u51e0\u4e2a\u540c\u4e3a\u5927\u4e00\u7684\u670b\u53cb\u6bd4\u6211\u806a\u660e\u53c8\u6bd4\u6211\u52aa\u529b\uff0c\u5bfc\u81f4\u81ea\u5df1\u611f\u89c9\u538b\u529b\u5f88\u5927\uff0c\u6709\u5fc5\u8981\u8c03\u6574\u4e00\u4e0b\u5fc3\u6001\u4e86\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/09/","title":"2025-W09","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/09/#2025-w09","title":"2025-W09","text":"<p> \u7ea6 233 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/09/#completed","title":"Completed","text":"<ul> <li>\u770b\u4e86 crash course to computer science</li> <li>CS61B <ul> <li>\u505a\u4e86 Lab, \u6ca1\u505a Proj, \u8bfe\u4e5f\u662f\u8df3\u7740\u770b\u7684\uff0c\u611f\u89c9\u6570\u636e\u7ed3\u6784\u6d53\u5ea6\u4e0d\u9ad8\u3002</li> </ul> </li> <li>CSAPP<ul> <li>\u5f00\u4e86\u4e2a\u5934\u3002</li> <li>\u8981\u6c42 Linux \u73af\u5883\uff0c\u719f\u6089\u4e86\u4e00\u4e0b\u600e\u4e48\u4f7f\u7528 vim\uff0c\u5e76\u7b80\u5355\u5199\u4e86\u4e00\u5957\u914d\u7f6e\u3002\uff08\u7136\u540e lab \u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u5728 vscode \u4e0a\u505a\u54c8\u54c8\uff09</li> <li>\u6700\u5f71\u54cd\u6548\u7387\u7684\u70b9\u8fd8\u662f\u9605\u8bfb\u80fd\u529b\uff0c\u5e0c\u671b\u5927\u4e8c\u7684\u65f6\u5019\u80fd\u628a\u82f1\u6587\u5f53\u4e2d\u6587\u8bfb\u3002</li> </ul> </li> <li>Obsidian \u6dfb\u52a0 Admonition \u63d2\u4ef6\uff0c<ul> <li>\u53ef\u4ee5\u5c06\u957f\u6587\u672c\u548c\u4ee3\u7801\u5757\u5feb\u901f\u653e\u5165 callout.</li> </ul> </li> <li>\u4e0a\u8bfe<ul> <li>\u53f2</li> </ul> </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/09/#next-week-plan","title":"Next week plan","text":"<ul> <li>CSAPP</li> <li>C++ \u7cfb\u7edf\u5b66\u4e60</li> <li>\u6570\u636e\u7ed3\u6784\u5237\u70b9\u9898\u5de9\u56fa\u4e00\u4e0b</li> <li>\u8865\u4e00\u4e0b vjf \u548c\u5927\u7269\uff0c\u597d\u4e45\u6ca1\u542c\u8bfe\u4e86\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/09/#thinking","title":"Thinking","text":"<ul> <li>\u4e0d\u592a\u4f1a\u5206\u914d\u65f6\u95f4\uff0c\u7f51\u4e0a\u5f88\u591a\u65b9\u6cd5\u90fd\u5c1d\u8bd5\u7740\u7528\u8fc7\uff0c\u6700\u540e\u53d1\u73b0\u6548\u679c\u4e0d\u597d\u7684\u6839\u672c\u539f\u56e0\u8fd8\u662f\u6267\u884c\u529b\u4e0d\u591f\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/10/","title":"2025-W10","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/10/#2025-w10","title":"2025-W10","text":"<p> \u7ea6 309 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/10/#completed","title":"Completed","text":"<ul> <li>\u5fc3\u60c5\u5dee,\u770b\u4e86\u597d\u591a\u95f2\u4e66..</li> <li>\u770b\u4e86\u300aaccelerated C++\u300b\uff0c\u5199\u4e86\u524d\u4e5d\u7ae0\u7684\u7b14\u8bb0\u3002</li> <li>CS61B <ul> <li>\u7ed3\u4e86</li> </ul> </li> <li>CSAPP <ul> <li>\u770b\u4e86\u4e24\u7ae0\uff0c\u4f46\u662f\u5c31\u505a\u4e86\u4e00\u4e2a lab</li> <li>\u5b66\u4e0d\u592a\u8fdb\u53bb\uff0c\u5148\u653e\u653e</li> </ul> </li> <li>\u5f00\u4e86\u5434\u6069\u8fbe\u7684\u673a\u5668\u5b66\u4e60<ul> <li>CS231n, \u674e\u5b8f\u6bc5\u7684\u673a\u5668\u5b66\u4e60\u90fd\u770b\u4e86\u4e00\u70b9\uff0c\u6700\u540e\u51b3\u5b9a\u5148\u82b1\u51e0\u5929\u628a\u8fd9\u4e2a\u7f51\u7ea2\u8bfe\u770b\u5b8c(\u4ece\u4e0b\u4e00\u5468\u7a7f\u8d8a\u56de\u6765\u5632\u7b11\u4e00\u4e0b\u81ea\u5df1)</li> </ul> </li> <li>\u6570\u636e\u7ed3\u6784\u505a\u4e86\u70b9\u9898</li> <li>\u66f4\u6539\u4e86\u672c\u7ad9\u4e3b\u9875\u7684\u6837\u5f0f\u548c\u5b57\u4f53</li> <li>\u8865\u5b8c\u4e86\u6821\u5185\u4ece\u5f00\u5b66\u5230\u73b0\u5728\u7684\u786c\u8bfe\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/10/#next-week-plan","title":"Next week plan","text":"<ul> <li>\u5434\u6069\u8fbe\u673a\u5668\u5b66\u4e60</li> <li>\u674e\u5b8f\u6bc5\u673a\u5668\u5b66\u4e60</li> <li>\u770b\u60c5\u51b5\u8981\u4e0d\u8981\u7cfb\u7edf\u8865\u4e00\u4e0b\u6982\u7387\u8bba\u65b9\u9762\u7684\u77e5\u8bc6</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/10/#thinking","title":"Thinking","text":"<ul> <li>\u63d0\u6548\u65b9\u9762\uff1a<ul> <li>\u505a\u8ba1\u5212\u65f6\u5c3d\u91cf\u5177\u4f53\u5230\u4ec0\u4e48\u65f6\u5019\u5728\u4ec0\u4e48\u5730\u65b9\u7528\u4ec0\u4e48\u5de5\u5177\u505a\u4ec0\u4e48\u4e8b\u60c5.</li> <li>\u7ed9\u9700\u8981\u82b1\u8d39\u4e00\u5b9a\u65f6\u95f4\u7684\u4efb\u52a1\u5b9a\u4e2a ddl, \u6700\u540e\u590d\u76d8\u54ea\u4e9b\u4efb\u52a1\u6ca1\u6709\u6309\u65f6\u5b8c\u6210\u5e76\u603b\u7ed3\u539f\u56e0\u3002</li> </ul> </li> <li>\u603b\u89c9\u5f97\u8fd9\u4e2a\u65f6\u4ee3 i \u4eba\u50cf\u7f3a\u4e86\u6761\u817f... \u4e92\u8054\u7f51\u884c\u4e1a\u660e\u663e\u5bf9 e \u4eba\u66f4\u53cb\u597d\uff0c\u8fd8\u662f\u8981\u52c7\u6562\u53d1\u8868\u81ea\u5df1\u7684\u770b\u6cd5</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/11/","title":"2025-W11","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/11/#2025-w11","title":"2025-W11","text":"<p> \u7ea6 299 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/11/#completed","title":"Completed","text":"<ul> <li>\u5434\u6069\u8fbe\u7684\u673a\u5668\u5b66\u4e60\u7ed3\u8bfe\u5e76\u53d1\u5e03\u4e86\u7b14\u8bb0<ul> <li>\u505a\u70b9\u603b\u7ed3\uff1a</li> <li>\u4e00\u4e2a\u662f\u5b66\u4e60\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u77e5\u9053\u8981\u5b66\u4e60\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff0c\u4e0d\u77e5\u9053\u54ea\u4e9b\u662f\u6709\u5fc5\u8981\u638c\u63e1\u7684\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u662f\u76ee\u7684\u4e0d\u660e\u786e\uff0c\u7b56\u7565\u6709\u95ee\u9898\uff0c\u73b0\u5728\u770b\u6765\u4e0d\u5e94\u8be5\u82b1\u592a\u591a\u65f6\u95f4\u5728\u770b\u4ee3\u7801\u4e0a\uff0c\u5230\u5efa\u7acb\u8d77\u5bf9\u673a\u5668\u5b66\u4e60\u5404\u4e2a\u6a21\u578b\u7684\u76f4\u89c9\u7684\u7a0b\u5ea6\u5c31\u5dee\u4e0d\u591a\u4e86</li> <li>\u4e0b\u6b21\u5c3d\u91cf\u8c03\u7814\u5f97\u5145\u5206\u4e9b</li> </ul> </li> <li>\u770b\u4e86 Sysadmin DeCal</li> <li>\u7533\u8bf7\u4e86 copilot pro </li> <li>\u914d\u7f6e\u4e86 zotero \uff0c\u6211\u4f30\u8ba1\u4e00\u65f6\u534a\u4f1a\u513f\u8fd8\u7528\u4e0d\u4e0a</li> <li>\u4f53\u9a8c\u4e86\u4e00\u4e0b trae,emm...</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/11/#next-week-plan","title":"Next week plan","text":"<ul> <li>\u8fd8\u6ca1\u60f3\u6cd5\uff0c\u641c\u7d22\u4e86\u4e00\u4e0b\u611f\u89c9\u633a\u591a\u4e8b\u60c5\u53ef\u4ee5\u5c1d\u8bd5\uff0c\u5f97\u627e\u6211\u7684\u5927\u4f6c\u540c\u5b66\u6307\u70b9\u4e00\u4e0b<ul> <li>\u8ddf\u7740\u9c7c\u4e66\u5199\u4e00\u904d\u4ee3\u7801</li> <li>\u674e\u5b8f\u6bc5\u7684\u8bfe</li> <li>\u674e\u6c90\u7684\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60</li> <li>...</li> </ul> </li> <li>\u4e0b\u4e0b\u5468\u5f00\u59cb\u5c0f\u6d4b\u4e86\uff0c\u8fd8\u5f97\u590d\u4e60\u4e00\u4e0b\u8bfe\u5185\u7684\u4e1c\u897f</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/11/#thinking","title":"Thinking","text":"<ul> <li>\u60f3\u53bb\u8bd5\u8bd5 RM\uff0c\u4f46\u662f zju \u7684\u6c34\u5e73\u4e0d\u662f\u6700\u9876\u5c16\u7684\u90a3\u6279\uff0c\u800c\u4e14\u8fd9\u73a9\u610f\u513f\u5907\u8d5b\u5468\u671f\u8d3c\u957f\u3002</li> <li>\u8981\u52a0\u5f3a\u641c\u7d22\u610f\u613f</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/12/","title":"2025-W12","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/12/#2025-w12","title":"2025-W12","text":"<p> \u7ea6 370 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/12/#completed","title":"Completed","text":"<ul> <li>\u6446\u6446\u53c8\u70c2\u70c2\uff0c\u5468\u516d\u767d\u5929\u8fd8\u88ab\u67d0\u52fe\u53f2\u6d3b\u52a8\u751f\u5403\u4e86</li> <li>\u770b\u4e86\u4e0b\u9c7c\u4e66\uff0c\u770b\u5b8c CNN \u5c31\u6ca1\u5f80\u4e0b\u770b\u4e86</li> <li>\u611f\u89c9\u674e\u6c90\u7cfb\u5217\u633a\u4e0d\u9519\u7684\uff0c\u51e0\u4e4e\u6ca1\u5e9f\u8bdd\uff0c\u4f46\u662f\u6709\u4e9b\u4e1c\u897f\u8981\u81ea\u5df1\u67e5</li> <li>\u5199\u4e86\u4e2a\u6ca1\u4ec0\u4e48\u7528\u7684 mkdocs \u7684\u5c0f\u63d2\u4ef6\uff0c\u4e3b\u8981\u662f\u4f53\u9a8c\u4e86\u4e00\u4e0b\u53d1\u5e03\u6d41\u7a0b <ul> <li>\u9762\u5411 cursor \u7684\u7f16\u7a0b.. </li> </ul> </li> <li>\u5b66\u4e86\u4e00\u70b9\u70b9 CS231n\uff0c\u611f\u89c9\u8ddf\u5434\u6069\u8fbe\u7684\u91cd\u5408\u5ea6\u633a\u9ad8\u7684\uff0c\u5c31\u6ca1\u770b\u4e0b\u53bb\uff0c\u505a\u4e86\u4e24\u4e2a assignment</li> <li>\u5f00\u5b66 CS61C, \u624d\u770b\u6ca1\u51e0\u8282\u8bfe\uff0c\u597d\u591a\uff0c\u611f\u89c9\u8981\u597d\u4e45\u624d\u80fd\u4e0a\u5b8c\u3002</li> <li>\u5b66\u4f1a\u7528 cmake</li> <li>\u9762\u5411\u5386\u5e74\u9898\u590d\u4e60\u4e86\u4e0b\uff0c\u4e0b\u5468\u5c0f\u6d4b\u5468</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/12/#next-week-plan","title":"Next week plan","text":"<ul> <li>CS61C</li> <li>\u674e\u6c90\u7cfb\u5217</li> <li>\u4e86\u89e3\u4e00\u4e0b\u5b66\u6821\u5b9e\u9a8c\u5ba4\u7684\u751f\u6001</li> <li>...</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/12/#thinking","title":"Thinking","text":"<ul> <li>\u6b7b\u78d5\u4e00\u95e8\u8bfe\u611f\u89c9\u6548\u7387\u633a\u4f4e\u7684\uff0c\u5927\u6982\u4e24\u4e09\u4e2a\u5c0f\u65f6\u5de6\u53f3\u5c31\u5f00\u59cb\u8d70\u795e\u4e86\uff0c\u51b3\u5b9a\u6362\u4e2a\u7b56\u7565\uff0c\u591a\u627e\u51e0\u4ef6\u4e8b\u505a\u3002</li> <li>\u6ca1\u53bb RM<ul> <li>\u4ece\u5b66\u957f\u7684\u53cd\u9988\u6765\u770b\u540e\u671f\u809d\u98de\u4e86\uff0c\u4f46\u662f\u6211\u4e0d\u559c\u6b22\u71ac\u591c</li> <li>\u529f\u5229\u65b9\u9762\uff0cemm... \u5b66\u6821\u5bf9\u8fd9\u4e1c\u897f\u8ba4\u53ef\u5ea6\u4e0d\u9ad8\uff0c\u8ddf\u522b\u7684\u5468\u671f\u66f4\u77ed\uff0c\u62ff\u5956\u66f4\u5bb9\u6613\u7684\u6bd4\u8d5b\u52a0\u5206\u5dee\u4e0d\u591a\u3002</li> <li>\u53e6\u5916\u5c31\u662f\u770b\u8d77\u6765\u53ea\u8981\u53bb\u4e86\u91cd\u5fc3\u5c31\u5728 RM \u4e86\uff0c\u6211\u89c9\u5f97\u4ee5\u6211\u7684\u80fd\u529b\u4e0d\u592a\u80fd balance</li> </ul> </li> <li>\u5404\u79cd\u5730\u65b9\u770b\u89c1\u7684\u4e00\u4e9b\u6587\u7ae0<ul> <li>\u4fdd\u7814\uff1f</li> <li>\u5173\u4e8e\u62d6\u5ef6</li> </ul> </li> <li>\u4e0d\u597d\u597d\u5b66\u4e60\u751a\u81f3\u770b(\u542c)\u4e0d\u61c2\u522b\u4eba\u5520\u55d1\u3002</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/13/","title":"2025-W13","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/13/#2025-w13","title":"2025-W13","text":"<p> \u7ea6 483 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/13/#completed","title":"Completed","text":"<ul> <li>CS61C<ul> <li>\u8bfe\u4f59\u65f6\u95f4\u57fa\u672c\u90fd\u82b1\u5728\u8fd9\u513f\u4e86</li> <li>20fall, \u76ee\u524d\u5728 lecture 19</li> </ul> </li> <li>\u300adive into deep learning\u300b<ul> <li>\u4e24\u7ae0</li> </ul> </li> <li>\u5f00\u59cb\u4f7f\u7528 rss</li> <li>\u5b8c\u6210\u4e86\u4e00\u6b21\u81ea\u5df1\u6ee1\u610f\u7684 pre</li> <li>\u4e09\u4e2a\u5c0f\u6d4b(\u723d\u4e86)</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/13/#next-week-plan","title":"Next week plan","text":"<ul> <li>\u4e3b\u7ebf\u662f CS61C\uff0c\u5c3d\u91cf\u4e0a\u5b8c\u5427\uff0c\u6ca1\u8003\u8bd5\u65f6\u95f4\u5e94\u8be5\u4f1a\u591a\u70b9\u3002</li> <li>\u518d\u4e86\u89e3\u4e0b\u5b9e\u9a8c\u5ba4\uff0c\u4e0b\u5468\u8fd8\u4e00\u5934\u96fe\u6c34\u7684\u8bdd\u5c31\u5148\u53bb\u4e86\u518d\u8bf4\uff0c\u4e0d\u9002\u5408\u518d\u6da6...</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/13/#share","title":"share","text":"<ul> <li>\u770b\u4e86\u4e00\u4e2a\u7fa4\u53cb\u7684\u77e5\u4e4e\uff0c\u6536\u83b7\u5f88\u591a<ul> <li>\u67d0\u7bc7\u6587\u7ae0\u76f4\u63a5\u7cbe\u51c6\u547d\u4e2d\u521a\u89e3\u51b3\u7684\u4e00\u4e2a\u793e\u4ea4\u4e0a\u7684\u95ee\u9898\uff0c\u65e9\u70b9\u770b\u5230\u5c31\u597d\u4e86\u3002\u3002</li> <li>\u6700\u8ba9\u6211\u4f69\u670d\u7684\u5c31\u662f\u4ed6\u6709\u4e00\u5957\u5f88\u5389\u5bb3\u7684\u53cd\u601d--\u4f18\u5316\u7684\u4f53\u7cfb\uff0c\u800c\u4e14\u8fd9\u5957\u4f53\u7cfb\u672c\u8eab\u4e5f\u5728\u4e0d\u65ad\u4f18\u5316\u3002\u53cd\u601d\u7684\u4e60\u60ef\u5176\u5b9e\u5f88\u591a\u4eba\u90fd\u6709\uff0c\u6211\u89c9\u5f97\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u5730\u610f\u8bc6\u5230\u54ea\u4e9b\u65b9\u9762\u6709\u4f18\u5316\u7684\u4f59\u5730\uff0c\u7136\u540e\u624d\u662f\u601d\u8003\u5982\u4f55\u4f18\u5316\uff0c\u6211\u5bf9\u8fd9\u65b9\u9762\u786e\u5b9e\u4e0d\u592a\u654f\u611f\uff0c\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u53c2\u8003\u522b\u4eba\u7684\u505a\u6cd5\u770b\u770b\u662f\u5426\u9002\u7528\u4e8e\u81ea\u5df1\u3002</li> <li>\u8ddf\u4ed6\u5b66\u4e60</li> </ul> </li> <li>\u81ea\u5df1\u603b\u662f\u60ca\u53f9\u4e8e\u540c\u6837\u7684\u65f6\u95f4\u522b\u4eba\u505a\u4e8b\u6548\u7387\u4e4b\u9ad8\uff0c\u76ee\u5149\u4e4b\u957f\u8fdc\uff0c\u9009\u62e9\u4e4b\u6b63\u786e\uff0c\u4f46\u662f\u8fd9\u5468\u4e5f\u6709\u4eba\u5938\u6211\u5389\u5bb3\uff0c\u5c11\u4e86\u70b9\u7126\u8651\uff0c\u611f\u89c9\u5f88 good.</li> <li>\u4e24\u4ef6\u4e8b\u60c5\u8ba9\u6211\u66f4\u52a0\u610f\u8bc6\u5230\u53cd\u9988\u5bf9\u4e8e\u6301\u7eed\u53d1\u529b\u7684\u91cd\u8981\u6027\u3002<ul> <li>\u7b2c\u4e00\u4e2a\u662f\u660e\u663e\u611f\u89c9\u4e0a 61C \u7684\u5174\u81f4\u660e\u663e\u6bd4\u4e0d\u4e0a 61A \u548c 61B\uff0c\u5c24\u5176\u6c47\u7f16\u90e8\u5206\u7684 Proj \u548c lab \u771f\u633a\u6298\u78e8\u7684\uff0c\u505a\u5b8c\u4e86\u4e5f\u6ca1\u6210\u5c31\u611f\uff0c\u7136\u540e\u6548\u7387\u5c31\u5f88\u4f4e\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u662f\u670b\u53cb\u95ee\u7684\u95ee\u9898\u6070\u597d\u662f\u4ee5\u524d\u9047\u5230\u7684\uff0c\u5e2e\u4ed6\u89e3\u51b3\u540e\u611f\u89c9\u4e0d\u9519\uff0c\u5b66\u4e60\u52a8\u529b\u6709\u589e\u5f3a\u3002</li> <li>\u51c6\u5907\u5c1d\u8bd5\u4e00\u4e9b\u65b9\u6cd5\u83b7\u53d6\u66f4\u591a\u53cd\u9988\uff0c\u6709\u7528\u5c31\u5199\u5728\u4ee5\u540e\u7684\u5468\u7ed3\u3002</li> </ul> </li> <li>\u5b66\u6821\u6a31\u82b1\u5f00\u5f97\u633a\u7f8e  </li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/14/","title":"2025-W14","text":"<code>#\u5468\u8bb0</code>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/14/#2025-w14","title":"2025-W14","text":"<p> \u7ea6 154 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/14/#review","title":"Review","text":"<ul> <li>\u57fa\u7840\u8bfe\u7a0b<ul> <li>61C\u63a8\u8fdb</li> <li>\u6570\u636e\u7ed3\u6784\u5b66\u4e60 + leetcode</li> </ul> </li> <li>AI</li> <li>\u4ece\u5934\u5b9e\u73b0\u4e86 \u624b\u5199\u6570\u5b57\u8bc6\u522b \u548c CIFAR-10 \u7684\u56fe\u50cf\u5206\u7c7b</li> <li>karpathy \u7cfb\u5217</li> <li>\u5434\u6069\u8fbe\u4e3b\u8bb2\u7684 transformer</li> <li>\u5176\u4ed6<ul> <li>React \u5165\u95e8</li> </ul> </li> <li>\u5468\u672b\u7ed9\u81ea\u5df1\u653e\u5047\u4e86\ud83d\ude00</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/14/#next-week-plan","title":"Next week plan","text":"<ul> <li>GPT2 \u590d\u73b0,\u5982\u679c\u77e5\u8bc6\u50a8\u91cf\u4e0d\u591f\u5c31\u5148\u653e\u653e</li> <li>\u505a\u5b8c 61C \u6b8b\u7559\u7684 lab \u548c homework, \u7136\u540e\u628a\u91cd\u8981\u77e5\u8bc6\u590d\u76d8\u4e00\u904d\uff0c\u6700\u597d\u80fd\u4ea7\u51fa\u4e00\u7bc7\u7b14\u8bb0</li> <li>\u671f\u4e2d\u8003 TT</li> <li>...</li> </ul>","tags":["\u5468\u8bb0"]},{"location":"summary/2025/14/#share","title":"share","text":"<p>\u63a5\u4e0b\u6765\u7684\u53cd\u601d\u603b\u7ed3\u90fd\u653e\u5728\u77e5\u4e4e</p>","tags":["\u5468\u8bb0"]},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tags","title":"Tags","text":"<p>{{ tag_content }}</p>"},{"location":"tools/","title":"Index","text":""},{"location":"tools/#something-may-useful","title":"something may useful","text":"prompt          <ul> <li> useful prompt  1256  4 mins              1744291561 </li> </ul> git &amp; github          <ul> <li> git  2078  35  7 mins              1741015289 </li> <li> github  185  1 mins              1739109867 </li> </ul> autohotkey          <ul> <li> \u952e\u4f4d\u6620\u5c04  323  1 mins              1741015289 </li> </ul> problems I met          <ul> <li> problem and solution  25  0 mins              1736869302 </li> </ul>"},{"location":"tools/autohotkey/auto/","title":"\u952e\u4f4d\u6620\u5c04","text":"<code>#tools</code>","tags":["tools"]},{"location":"tools/autohotkey/auto/#autohotkey","title":"\u57fa\u4e8eautohotkey\u5b9e\u73b0\u65b9\u5411\u952e\u7684\u952e\u4f4d\u6620\u5c04","text":"<p> \u7ea6 351 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u7528\u952e\u4f4d\u6620\u5c04\u89e3\u51b3\u5199\u4ee3\u7801\u6216\u6587\u7ae0\u65f6\u53f3\u624b\u9700\u8981\u79fb\u52a8\u5230\u65b9\u5411\u952e\u7684\u95ee\u9898</p>","tags":["tools"]},{"location":"tools/autohotkey/auto/#1-autohotkey","title":"1 \u4e0b\u8f7d\u5e76\u5b89\u88c5autohotkey","text":"<p>\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\uff0c\u6233\u8fd9\u91cc\u53bb\u5b98\u7f51\u4e0b\u8f7d\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u4e0d\u7528\u7ba1\u4efb\u4f55\u63d0\u793a\uff0c\u76f4\u63a5\u5728\u684c\u9762\u53f3\u952e\u540e\u70b9\u51fb\u65b0\u5efa\uff0c\u9009\u62e9<code>Autohotkey script</code>\u540e\u9009\u62e9<code>empty</code>(\u8def\u5f84\u53ef\u4ee5\u81ea\u5df1\u9009\u62e9)</p>","tags":["tools"]},{"location":"tools/autohotkey/auto/#2","title":"2 \u914d\u7f6e\u6587\u4ef6","text":"<p>\u53f3\u952e\u751f\u6210\u7684\u540e\u7f00\u4e3a<code>ahk</code>\u7684\u6587\u4ef6\uff0c\u70b9\u51fb<code>edit script</code> \u968f\u540e\u5c06\u4ee5\u4e0b\u4ee3\u7801\u62f7\u8d1d\u8fdb\u53bb</p> <p>Text Only<pre><code>Tab::Return\n&lt;!-- \u7981\u7528\u4e86Tab\u539f\u6765\u7684\u529f\u80fd --&gt;\nTab &amp; k::\n   Send, {Down}\nReturn\n\nTab &amp; l::\n   Send, {Right}\nReturn\n\nTab &amp; j::\n   Send, {Left}\nReturn\n\nTab &amp; i::\n   Send, {Up}\nReturn\n</code></pre> \u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5c06\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\u952e\u6620\u5c04\u5230Tab + ikjl\u5e76\u7981\u7528\u4e86Tab.\u4fdd\u5b58\u540e\u9000\u51fa</p>","tags":["tools"]},{"location":"tools/autohotkey/auto/#3-exe","title":"3 \u751f\u6210exe\u6587\u4ef6","text":"<p>\u53f3\u952eahk\u6587\u4ef6\u9009\u62e9<code>compile script</code>\uff0c\u968f\u540e\u4f1a\u5728<code>ahk</code>\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u540e\u7f00\u4e3a<code>exe</code>\u7684\u6587\u4ef6.</p>","tags":["tools"]},{"location":"tools/autohotkey/auto/#4","title":"4 \u542f\u7528\u952e\u4f4d\u6620\u5c04","text":"<p>\u542f\u52a8exe\u6587\u4ef6\uff0c\u6b64\u65f6\u5e94\u8be5\u5df2\u7ecf\u5b9e\u73b0\u6620\u5c04\u529f\u80fd\u3002\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u5c06\u6b64exe\u6587\u4ef6\u8bbe\u7f6e\u4e3a\u5f00\u673a\u81ea\u542f\u7528\uff0c\u540c\u65f6\u8981\u6ce8\u610f\uff0cTab\u952e\u5df2\u7ecf\u88ab\u7981\u7528(\u5018\u82e5\u4f7f\u7528\u7684\u662f\u6211\u7684\u4ee3\u7801)</p>","tags":["tools"]},{"location":"tools/autohotkey/auto/#_1","title":"\u9644\u5f55","text":"<ul> <li>\u6620\u5c04\u5230<code>alt + ikjl</code></li> </ul> Text Only<pre><code>&lt;!-- \u4e0d\u5efa\u8bae\u7981\u7528alt\u7684\u539f\u59cb\u529f\u80fd --&gt;\n!k::\n   Send, {Down}\nReturn\n\n!l::\n   Send, {Right}\nReturn\n\n!j::\n   Send, {Left}\nReturn\n\n!i::\n   Send, {Up}\nReturn\n</code></pre> <ul> <li>\u6700\u540e\u7684\u76ee\u5f55\u5f62\u5f0f: Text Only<pre><code>\u251c\u2500\u2500 .ahk                      \n\u251c\u2500\u2500 .exe \n</code></pre></li> </ul>","tags":["tools"]},{"location":"tools/git/git/","title":"git","text":"<code>#tools</code>","tags":["tools"]},{"location":"tools/git/git/#git","title":"git\u4f7f\u7528","text":"<p> \u7ea6 2106 \u4e2a\u5b57  35 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>\u76f8\u5173\u89c6\u9891\uff1a</p> <ul> <li>git\u76f8\u5173-1</li> <li>git\u76f8\u5173-2</li> <li>github\u57fa\u672c\u4f7f\u7528</li> <li>git\u8fde\u63a5\u8fdc\u7a0b\u4ed3\u5e93\u548c\u672c\u5730\u4ed3\u5e93</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#1","title":"1 \u56fe\u89e3","text":"","tags":["tools"]},{"location":"tools/git/git/#2","title":"2 \u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7aef\u4ed3\u5e93\u5173\u8054","text":"<ul> <li>\u8fdc\u7a0b\u4ed3\u5e93\uff1a\u5728 github, gitlab, gitee \u7b49\u5e73\u53f0\u4e0a\u9762\u5bf9\u5e94\u7684\u672c\u5730\u4ed3\u5e93\u79f0\u88ab\u79f0\u4e3a\u8fdc\u7a0b\u4ed3\u5e93</li> <li>github \u662f\u4e00\u4e2a\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0c\u901a\u8fc7 github \u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u5206\u4eab\u548c\u534f\u540c\u5f00\u53d1</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#_1","title":"\u793a\u4f8b","text":"<p>github \u521b\u5efa\u4e00\u4e2a\u4ed3\u5e93\u540e\u5173\u8054\u5230\u672c\u5730\u7684\u4e00\u822c\u6b65\u9aa4\u53ca\u89e3\u91ca \u8fd9\u91cc\u91c7\u7528 ssh \u65b9\u5f0f </p> \u547d\u4ee4 \u4f5c\u7528 <code>echo \"# gittest\" &gt;&gt; README.md</code> \u521b\u5efa <code>README.md</code> \u5e76\u5199\u5165 <code># gittest</code> <code>git init</code> \u521d\u59cb\u5316 Git \u4ed3\u5e93 <code>git add README.md</code> \u6dfb\u52a0 <code>README.md</code> \u5230\u6682\u5b58\u533a <code>git commit -m \"first commit\"</code> \u63d0\u4ea4\u6587\u4ef6\u5230\u672c\u5730\u4ed3\u5e93 <code>git branch -M main</code> \u91cd\u547d\u540d\u5f53\u524d\u5206\u652f\u4e3a <code>main</code> <code>git remote add origin git@github.com:username/repositoryname.git</code> \u5173\u8054\u8fdc\u7a0b GitHub \u4ed3\u5e93\uff0c <code>origin</code> \u662f\u8fdc\u7aef\u4ed3\u5e93\u7684 <code>alias</code> <code>git push -u origin main</code> \u63a8\u9001 <code>main</code> \u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u5c06 <code>main</code> \u4f5c\u4e3a\u9ed8\u8ba4\u5206\u652f <ul> <li>\u5982\u679c\u5df2\u7ecf\u6709\u4e86\u672c\u5730\u4ed3\u5e93\u5e76\u4e14\u5df2\u7ecf\u8fdb\u884c\u8fc7\u63d0\u4ea4\uff0c\u76f4\u63a5\u6267\u884c\u540e\u4e24\u4e2a\u547d\u4ee4\u5373\u53ef</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#3","title":"3 \u4ea7\u751f\u51b2\u7a81\u4e0e\u89e3\u51b3\u529e\u6cd5","text":"<ul> <li>\u4f7f\u7528 <code>git pull</code></li> <li>\u5982\u679c\u6b63\u5e38\u5408\u5e76\uff0c\u8bc1\u660e\u65e0\u9700\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\uff0c\u63a5\u4e0b\u6765\u6b63\u5e38 <code>git push</code> \u5373\u53ef</li> <li>\u5982\u679c\u6ca1\u6709\u6b63\u5e38\u5408\u5e76\u8bf4\u660e\u5b58\u5728\u67d0\u4e9b\u51b2\u7a81\u9700\u8981\u624b\u52a8\u89e3\u51b3 \u793a\u4f8b\uff1a \u5bf9\u4e8e <code>conflict.txt</code> \u6587\u4ef6</li> </ul> Text Only<pre><code>\u672c\u5730\uff1ahello from local\n</code></pre> Text Only<pre><code>\u8fdc\u7a0b:hello from github\n</code></pre> <p>\u6267\u884c <code>git pull</code> \u540e</p> Bash<pre><code>Auto-merging conflict.txt\nCONFLICT (content): Merge conflict in conflict.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre> <p>\u63a5\u4e0b\u6765\u67e5\u770b\u51b2\u7a81\u6587\u4ef6\u5e76\u89e3\u51b3\u51b2\u7a81 \u6253\u5f00 <code>conflict.txt</code></p> Markdown<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\u672c\u5730\u4fee\u6539\uff1aHello from Local!\n=======\n\u8fdc\u7a0b\u4fee\u6539\uff1aHello from GitHub!\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; main\n</code></pre> <p>\u624b\u52a8\u66f4\u6539\uff0c\u7559\u4e0b\u9700\u8981\u7684\u90e8\u5206 \u6700\u540e\uff1a</p> Bash<pre><code>git add conflict.txt\ngit commit -m \"Resolved merge conflict\"\ngit push origin main\n</code></pre> <ul> <li>\u514b\u9686\u8fdc\u7a0b\u9879\u76ee\u5230\u672c\u5730 <code>git clone &lt;url&gt;</code></li> </ul>","tags":["tools"]},{"location":"tools/git/git/#4-commit","title":"4 commit \u4fee\u6b63","text":"<ul> <li>\u4f7f\u7528 <code>--amend</code> \u547d\u4ee4  </li> </ul> <p>\u793a\u4f8b\uff1a \u5bf9\u4e8e <code>a.txt</code> \u6587\u4ef6</p> Text Only<pre><code>12356789\n</code></pre> <p>\u53d1\u73b0\u6f0f\u5199\u4e86 4 \u4f46\u662f\u5df2\u7ecf\u8fdb\u884c <code>commit -m 'a\u7684\u7b2c\u4e00\u6b21\u63d0\u4ea4'</code> \u968f\u540e\u4e3a <code>a.txt</code> \u52a0\u4e0a 4</p> Text Only<pre><code>123456789\n</code></pre> <p>\u5982\u679c\u518d\u8fdb\u884c\u4e00\u6b21 <code>commit -m 'a\u7684\u7b2c\u4e8c\u6b21\u63d0\u4ea4\uff08\u4fee\u6b63\u7b2c\u4e00\u6b21\uff09'</code> \u5219\u663e\u5f97\u5197\u4f59 \u53ef\u4ee5\u4f7f\u7528 <code>commit --amend -m 'a\u7684\u7b2c\u4e00\u6b21\u63d0\u4ea4'</code> \u6765\u4fee\u6b63\u7b2c\u4e00\u6b21\u63d0\u4ea4\uff0c\u67e5\u770b\u65e5\u5fd7\u65f6\u53ea\u4f1a\u663e\u793a\u4e00\u6761\u63d0\u4ea4\u8bb0\u5f55</p>","tags":["tools"]},{"location":"tools/git/git/#5","title":"5 \u7248\u672c\u5efa\u8bbe\u4e2d\u7684\u5206\u652f\u7ba1\u7406","text":"","tags":["tools"]},{"location":"tools/git/git/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u5206\u652f\u7ba1\u7406","text":"<ul> <li>\u5f00\u53d1\u5206\u652f\u4e0a\u4fee\u6539\uff0c\u4e4b\u540e\u5408\u5e76\u5230\u4ea7\u54c1\u5206\u652f\u4e0a </li> </ul>","tags":["tools"]},{"location":"tools/git/git/#_3","title":"\u64cd\u4f5c","text":"\u547d\u4ee4 \u4f5c\u7528 \u9002\u7528\u573a\u666f <code>git init -b dev</code> \u4ec5\u5728\u65b0\u5efa\u4ed3\u5e93\u65f6\u751f\u6548 \u4ed3\u5e93\u8fd8\u672a\u521d\u59cb\u5316 <code>git checkout -b dev</code> \u521b\u5efa <code>dev</code> \u5206\u652f\u5e76\u5207\u6362\u8fc7\u53bb \u4ed3\u5e93\u5df2\u5b58\u5728 <code>git switch -c dev</code> \u521b\u5efa <code>dev</code> \u5206\u652f\u5e76\u5207\u6362\u8fc7\u53bb\uff08\u65b0\u8bed\u6cd5\uff09 \u4ed3\u5e93\u5df2\u5b58\u5728 <code>git checkout dev</code> \u5207\u6362\u5230 <code>dev</code> \u5206\u652f\uff08\u5df2\u5b58\u5728\u65f6\uff09 <code>dev</code> \u5206\u652f\u5df2\u5b58\u5728 <code>git switch dev</code> \u5207\u6362\u5230 <code>dev</code> \u5206\u652f\uff08\u5df2\u5b58\u5728\u65f6\uff0c\u63a8\u8350\uff09 <code>dev</code> \u5206\u652f\u5df2\u5b58\u5728 <code>git branch -D &lt;dev&gt;</code> \u5f3a\u5236\u5220\u9664 <code>dev</code> \u5206\u652f\uff08\u4e0d\u7ba1\u662f\u5426\u5408\u5e76\uff09-d \u662f\u5220\u9664\u5df2\u5408\u5e76\u8fc7\u7684\u5206\u652f <code>dev</code> \u5206\u652f\u5df2\u5b58\u5728 <code>git branch -m &lt;\u539f\u540d\u79f0&gt; &lt;\u65b0\u540d\u79f0&gt;</code> \u91cd\u547d\u540d\u5206\u652f -- <code>git merge &lt;\u88ab\u5408\u5e76\u5206\u652f\u540d\u79f0&gt;</code> \u5408\u5e76\u5206\u652f \u5408\u5e76\u5230\u5f53\u524d\u5206\u652f <code>git branch</code> \u67e5\u770b\u7248\u672c\u5e93\u6709\u54ea\u4e9b\u5206\u652f -- <code>git push origin &lt;dev&gt;</code> \u5c06 dev \u5206\u652f\u63a8\u9001\u7ed9\u8fdc\u7a0b -- <code>git push origin -d &lt;dev&gt;</code> \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93\u7684 dev \u5206\u652f -- <ul> <li>\u66f4\u6539 github \u4e0a\u7684\u9ed8\u8ba4\u5206\u652f\uff1asetting-&gt;Branches-&gt;Default branch-&gt;\u66f4\u6539</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#6","title":"6 \u4ece\u7248\u672c\u5e93\u4e2d\u6062\u590d\u6587\u4ef6","text":"<ul> <li>vscode \u4e2d\u7684 gitlens \u63d2\u4ef6\u5df2\u7ecf\u56fe\u5f62\u5316\u5b9e\u73b0\u4e86 bash \u547d\u4ee4</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#7-gitignore","title":"7 gitignore","text":"<ol> <li>\u5728\u9879\u76ee\u6839\u76ee\u5f55\u521b\u5efa .gitignore \u6587\u4ef6</li> <li>\u628a\u60f3\u5ffd\u7565\u7684\u76ee\u5f55\u76f4\u63a5\u6dfb\u52a0\u5373\u53ef</li> </ol>","tags":["tools"]},{"location":"tools/git/git/#_4","title":"\u6a21\u5f0f\u5339\u914d","text":"<ol> <li>\u7a7a\u884c\u4e0d\u5339\u914d\u4efb\u4f55\u6587</li> <li><code>#</code> \u7528\u4e8e\u6ce8\u91ca\uff0c <code>\\</code> \u8868\u793a\u8f6c\u4e49\uff0c\u5b9e\u4f53\\\u8981\u52a0 <code>\"\\\"</code></li> <li><code>*</code> \u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u5b57\u7b26 0 \u6216\u591a\u6b21\uff0c <code>?</code> \u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u5b57\u7b26 1 \u6b21\uff0c\u4f46\u662f\u90fd\u4e0d\u53ef\u4ee5\u5339\u914d <code>/</code></li> <li><code>/</code> \u7528\u4e8e\u5206\u9694\u76ee\u5f55\uff1a<ul> <li>\u5f53 <code>/</code> \u5728\u5f00\u5934\u65f6\uff0c\u8868\u793a\u4ece .gitignore \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u5f00\u59cb\u5339\u914d\uff0c\u5426\u5219\u6240\u6709\u4e0b\u7ea7\u540c\u540d\u6587\u4ef6\u90fd\u5c06\u5339\u914d\u3002</li> <li>\u5f53 <code>/</code> \u5728\u672b\u5c3e\u65f6\uff0c\u53ea\u5339\u914d\u76ee\u5f55\uff0c\u5426\u5219\u5339\u914d\u540c\u540d\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55</li> </ul> </li> <li>\u539f\u5148\u88ab\u6392\u9664\u7684\u6587\u4ef6\uff0c\u4f7f\u7528 <code>!</code> \u6a21\u5f0f\u540e\u8be5\u6587\u4ef6\u5c06\u4f1a\u91cd\u65b0\u88ab\u5305\u542b\uff0c\u4f46\u5982\u679c\u8be5\u6587\u4ef6\u7684\u7236\u7ea7\u76ee\u5f55\u88ab\u62cd\u51fa\u6765\uff0c\u90a3\u4e48\u4f7f\u7528 <code>!</code> \u4e5f\u4e0d\u4f1a\u88ab\u518d\u6b21\u5305\u542b\u3002</li> <li><code>[]</code> \u5339\u914d\u5b57\u7b26\u5217\u8868, \u5982 <code>a[mn]z</code> \u53ef\u4ee5\u5339\u914d <code>amz</code> \u548c <code>anz</code></li> <li><code>**</code> \u7528\u4e8e\u5339\u914d\u591a\u7ea7\u76ee\u5f55\uff0c\u5982 <code>a/**/b</code> \u53ef\u4ee5\u5339\u914d <code>a/b</code> , <code>a/x/b</code> , <code>a/x/y/b</code> </li> </ol> <p>\u793a\u4f8b\uff1a 1. \u5ffd\u7565\u6240\u6709\u5185\u5bb9 2. \u5ffd\u7565\u6240\u6709\u76ee\u5f55 3. \u5ffd\u7565 pulic \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u9664\u4e86 <code>favicom.ico</code> \u6587\u4ef6 4. \u53ea\u4fdd\u7559 public \u76ee\u5f55\u4e0b\u7684 a{\u4e00\u4e2a\u5b57\u7b26}z.{\u540e\u7f00\u540d}\u7684\u6240\u6709\u6587\u4ef6</p> Text Only<pre><code>*                           # 1\n*/                          # 2\npublic/                     # 3 \u9519\u8bef\u5199\u6cd5\uff0c\u53c2\u8003\u7b2c\u4e94\u70b9\n!pulic/favicon.ico          # 3 \u9519\u8bef\u5199\u6cd5\npublic/*                    # 3 \u6b63\u786e\u5199\u6cd5\n!pulic/favicon.ico          # 3 \u6b63\u786e\u5199\u6cd5\n/*\n!/public/\n/pulic/*\n!/public/a?z.*\n</code></pre> <p>\u67e5\u770b\u67d0\u4e2a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u662f\u5426\u88ab\u5ffd\u7565\uff1a <code>git check-ignore -v \u76ee\u6807\u6587\u4ef6\u540d</code></p> <p>PS-1\uff1a.gitignore \u53ea\u80fd\u5ffd\u7565\u54ea\u4e9b\u6ca1\u6709\u88ab\u8ffd\u8e2a\u7684\u6587\u4ef6\uff0c\u6240\u4ee5\u5148\u7eb3\u5165\u7248\u672c\u7ba1\u7406\u540e\u5199\u5165 .gitignore \u662f\u65e0\u6548\u7684 EG\uff1a\u5047\u8bbe\u9879\u76ee\u7ed3\u6784\u5982\u4e0b</p> Arduino<pre><code>project/\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 config.json\n\u251c\u2500\u2500 data/\n\u2502   \u251c\u2500\u2500 secret.txt\n\u2502   \u251c\u2500\u2500 public_info.txt\n</code></pre> <p>\u5df2\u7ecf\u6267\u884c\u4e86</p> Bash<pre><code>git add config.json data/secret.txt\ngit commit -m \"Add config and secret files\"\n</code></pre> <p>\u7136\u540e\u5728 .gitignore \u4e2d\u6dfb\u52a0:</p> Arduino<pre><code>config.json\ndata/secret.txt\n</code></pre> <p>\u6b64\u65f6\u4e0d\u8d77\u4f5c\u7528</p> <p>PS-2\uff1a\u5df2\u88ab.gitignore \u5ffd\u7565\u7684\u6587\u4ef6\u65e0\u6cd5\u518d\u6dfb\u52a0\u5230\u7248\u672c\u5e93\u4e2d</p>","tags":["tools"]},{"location":"tools/git/git/#8-git","title":"8 git \u65e5\u5fd7","text":"","tags":["tools"]},{"location":"tools/git/git/#9-github","title":"9 github \u6807\u7b7e\u7ba1\u7406","text":"<ul> <li>\u4e3a\u4ec0\u4e48\u6253\u6807\u7b7e\uff1a\u5f53\u5f00\u53d1\u5230\u4e86\u4e00\u4e2a\u9636\u6bb5\uff0c\u4e3a\u4e86\u51f8\u663e\u8fd9\u6b21\u63d0\u4ea4\u6bd4\u8f83\u91cd\u8981\uff0c\u53ef\u4ee5\u4e3a\u5176\u6253\u4e0a\u6807\u7b7e\u3002\u4f8b\u5982\u53d1\u5e03\u8282\u70b9 (v1.0, v2.0)</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#_5","title":"\u6253\u6807\u7b7e","text":"<p> 1. <code>git log --oneline</code> \u67e5\u770b head \u6307\u5411\u54ea\u4e00\u6b21\u63d0\u4ea4 2. <code>git tag &lt;\u6807\u7b7e\u540d\u79f0&gt; &lt;\u63d0\u4ea4id&gt;</code> \u6253\u4e0a\u6807\u7b7e <code>git tag &lt;\u6807\u7b7e\u540d\u79f0&gt; -a -m '\u6ce8\u91ca' &lt;\u63d0\u4ea4id&gt;</code> \u6ce8\u91ca\u6807\u7b7e 3. <code>git log --oneline</code> \u67e5\u770b\u662f\u5426\u6210\u529f\u6253\u4e0a\u6807\u7b7e</p>","tags":["tools"]},{"location":"tools/git/git/#_6","title":"\u63a8\u9001\u6807\u7b7e","text":"<ul> <li>\u7b80\u5355\u4f7f\u7528 <code>git push</code> \u4e0d\u4f1a\u628a\u6807\u7b7e\u63a8\u9001\u5230\u8fdc\u7aef</li> <li>\u5982\u4f55\u63a8\u9001\u89c1\u4e0a</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#_7","title":"\u7248\u672c\u53d1\u884c","text":"<ul> <li>\u4ed3\u5e93\u754c\u9762\u4e2d\u70b9\u51fb <code>create a release</code></li> <li>\u6309\u8981\u6c42\u64cd\u4f5c\u5373\u53ef</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#github-fork-pr","title":"github \u4ed3\u5e93\u7684 fork \u548c pr","text":"<ul> <li>fork \u4e0d\u662f git \u64cd\u4f5c\uff0c\u800c\u662f\u4e00\u4e2a github \u64cd\u4f5c\uff0c\u662f\u670d\u52a1\u7aef\u7684\u4ee3\u7801\u4ed3\u5e93\u514b\u9686</li> <li>fork \u540e\u4f1a\u5728\u81ea\u5df1\u7684 github \u4ed3\u5e93\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ed3\u5e93\uff0c\u5305\u542b\u4e86 upstream repository (\u5373\u539f\u4ed3\u5e93)\u7684\u6240\u6709\u5185\u5bb9 </li> <li>\u53ef\u4ee5\u5bf9 fork \u5f97\u5230\u7684\u4ed3\u5e93\u81ea\u7531\u63d0\u4ea4\uff0c\u5e76\u901a\u8fc7 PR (pull request) \u8d21\u732e\u56de\u539f\u4ed3\u5e93 </li> <li>\u7531\u4e8e fork \u51fa\u7684\u65b0\u4ed3\u5e93\u662f\u57fa\u4e8e\u539f\u4ed3\u5e93\uff0c\u4f46\u662f\u4e8c\u8005\u540e\u7eed\u5f00\u53d1\u4e2d\u5927\u6982\u7387\u4e0d\u540c\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a\"\u5206\u53c9\"</li> </ul>","tags":["tools"]},{"location":"tools/git/git/#_8","title":"\u64cd\u4f5c\u6b65\u9aa4","text":"<ol> <li>fork \u76ee\u6807\u4ed3\u5e93\u5230\u81ea\u5df1\u7684\u4ed3\u5e93</li> <li>clone fork \u5f97\u5230\u7684\u4ed3\u5e93\u5e93\u5230\u672c\u5730\uff0c\u6b64\u65f6\u5df2\u7ecf\u5efa\u7acb\u672c\u5730\u4ed3\u5e93\u548c\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5173\u8054</li> <li>\u8fdb\u884c\u4fee\u6539</li> <li>\u540c\u6b65\u5230\u8fdc\u7a0b</li> <li>\u63d0\u51fa PR, \u7b49\u5f85\u539f\u4ed3\u5e93\u7528\u6237\u5ba1\u6838</li> </ol>","tags":["tools"]},{"location":"tools/git/git/#11-ssh-github","title":"11 ssh \u5bc6\u94a5\u8fdb\u884c github \u8eab\u4efd\u9a8c\u8bc1","text":"<ol> <li>\u521b\u5efa ssh \u5bc6\u94a5\u5bf9</li> </ol> Bash<pre><code>ssh -keygen\n</code></pre> <p>\u5bc6\u7801\u6ca1\u5fc5\u8981\u8bbe\u7f6e\uff0c\u6ca1\u7528\uff01\u63a5\u7740\u4f1a\u5728\u7528\u6237\u76ee\u5f55\u4e0b\u751f\u6210 <code>.ssh</code> \u6587\u4ef6\u5939</p> <ul> <li>id_rsa - \u79c1\u94a5\uff0c</li> <li>id_rsa.pub - \u516c\u94a5</li> </ul> <ol> <li>\u5c06\u516c\u94a5\u7c98\u8d34\u5230 github (settings \u4e2d\u627e\u5230 ssh)</li> <li>\u6d4b\u8bd5\u8fde\u63a5</li> </ol> Bash<pre><code>ssh -T git@github.com\n</code></pre> <p>\u6536\u5230 <code>Hi\uff01...</code> \u8bc1\u660e\u8fde\u63a5\u6210\u529f</p>","tags":["tools"]},{"location":"tools/git/git/#cheatsheet","title":"\ud83d\udca1cheatsheet","text":"\u547d\u4ee4 \u4f5c\u7528 <code>git init</code> \u521d\u59cb\u5316 Git \u4ed3\u5e93\uff08\u521b\u5efa <code>.git</code> \u76ee\u5f55\uff09 <code>git clone &lt;\u4ed3\u5e93URL&gt;</code> \u514b\u9686\u8fdc\u7a0b\u4ed3\u5e93\u5230\u672c\u5730 <code>git status</code> \u67e5\u770b\u5f53\u524d\u4ed3\u5e93\u72b6\u6001\uff08\u6587\u4ef6\u4fee\u6539\u3001\u6682\u5b58\u7b49\uff09 <code>git add &lt;\u6587\u4ef6\u540d&gt;</code> \u6dfb\u52a0\u6587\u4ef6\u5230\u6682\u5b58\u533a\uff08stage\uff09 <code>git add .</code> \u6dfb\u52a0\u6240\u6709\u4fee\u6539\u7684\u6587\u4ef6\u5230\u6682\u5b58\u533a <code>git commit -m \"\u63d0\u4ea4\u4fe1\u606f\"</code> \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u66f4\u6539\u5230\u672c\u5730\u4ed3\u5e93 <code>git commit --amend -m \"\u65b0\u63d0\u4ea4\u4fe1\u606f\"</code> \u4fee\u6539\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u4fe1\u606f <code>git log --oneline</code> \u7b80\u6d01\u67e5\u770b\u63d0\u4ea4\u5386\u53f2 <code>git log --graph --all --decorate</code> \u4ee5\u56fe\u5f62\u65b9\u5f0f\u663e\u793a\u6240\u6709\u5206\u652f\u7684\u63d0\u4ea4\u5386\u53f2 <code>git diff</code> \u67e5\u770b\u672a\u6682\u5b58\u7684\u4fee\u6539\u5185\u5bb9 <code>git diff --staged</code> \u67e5\u770b\u5df2\u6682\u5b58\u4f46\u672a\u63d0\u4ea4\u7684\u4fee\u6539\u5185\u5bb9 <code>git branch</code> \u67e5\u770b\u672c\u5730\u5206\u652f\u5217\u8868 <code>git branch &lt;\u5206\u652f\u540d&gt;</code> \u521b\u5efa\u65b0\u5206\u652f <code>git branch -d &lt;\u5206\u652f\u540d&gt;</code> \u5220\u9664\u672c\u5730\u5206\u652f\uff08\u5df2\u5408\u5e76\uff09 <code>git branch -D &lt;\u5206\u652f\u540d&gt;</code> \u5f3a\u5236\u5220\u9664\u672c\u5730\u5206\u652f\uff08\u672a\u5408\u5e76\uff09 <code>git checkout &lt;\u5206\u652f\u540d&gt;</code> \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f <code>git checkout -b &lt;\u5206\u652f\u540d&gt;</code> \u521b\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f <code>git switch &lt;\u5206\u652f\u540d&gt;</code> \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff08<code>checkout</code> \u7684\u65b0\u66ff\u4ee3\u65b9\u5f0f\uff09 <code>git merge &lt;\u5206\u652f\u540d&gt;</code> \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f <code>git rebase &lt;\u5206\u652f\u540d&gt;</code> \u53d8\u57fa\u5f53\u524d\u5206\u652f\u5230\u6307\u5b9a\u5206\u652f <code>git cherry-pick &lt;\u63d0\u4ea4ID&gt;</code> \u9009\u53d6\u67d0\u4e2a\u63d0\u4ea4\u5e76\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f <code>git remote -v</code> \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 <code>git remote add origin &lt;\u4ed3\u5e93URL&gt;</code> \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93 <code>git remote remove origin</code> \u79fb\u9664\u8fdc\u7a0b\u4ed3\u5e93 <code>git push origin &lt;\u5206\u652f\u540d&gt;</code> \u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b <code>git push -u origin &lt;\u5206\u652f\u540d&gt;</code> \u63a8\u9001\u5206\u652f\u5e76\u5efa\u7acb\u8ddf\u8e2a\u5173\u7cfb <code>git push --force</code> \u5f3a\u5236\u63a8\u9001\uff08\u614e\u7528\uff09 <code>git pull origin &lt;\u5206\u652f\u540d&gt;</code> \u62c9\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6700\u65b0\u4ee3\u7801 <code>git fetch</code> \u62c9\u53d6\u8fdc\u7a0b\u66f4\u65b0\u4f46\u4e0d\u5408\u5e76 <code>git stash</code> \u6682\u5b58\u5f53\u524d\u672a\u63d0\u4ea4\u7684\u4fee\u6539 <code>git stash pop</code> \u53d6\u51fa\u6700\u8fd1\u7684 stash \u5e76\u5220\u9664\u8be5\u8bb0\u5f55 <code>git stash list</code> \u67e5\u770b stash \u5217\u8868 <code>git tag</code> \u67e5\u770b\u672c\u5730\u6807\u7b7e <code>git tag &lt;\u6807\u7b7e\u540d&gt;</code> \u521b\u5efa\u6807\u7b7e <code>git tag -d &lt;\u6807\u7b7e\u540d&gt;</code> \u5220\u9664\u672c\u5730\u6807\u7b7e <code>git push origin --tags</code> \u63a8\u9001\u6240\u6709\u672c\u5730\u6807\u7b7e\u5230\u8fdc\u7a0b <code>git push origin :refs/tags/&lt;\u6807\u7b7e\u540d&gt;</code> \u5220\u9664\u8fdc\u7a0b\u6807\u7b7e <code>git reset --hard &lt;\u63d0\u4ea4ID&gt;</code> \u5f3a\u5236\u56de\u9000\u5230\u6307\u5b9a\u63d0\u4ea4\uff08\u614e\u7528\uff09 <code>git revert &lt;\u63d0\u4ea4ID&gt;</code> \u751f\u6210\u4e00\u4e2a\u53cd\u5411\u63d0\u4ea4\uff0c\u64a4\u9500\u6307\u5b9a\u63d0\u4ea4 <p>\ud83d\ude80 \u53ea\u5305\u542b\u8bb8\u591a\u5e38\u7528\u547d\u4ee4</p>","tags":["tools"]},{"location":"tools/git/github/","title":"something that might help","text":"<p> \u7ea6 185 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"tools/git/github/#_1","title":"\u627e\u5f00\u6e90\u9879\u76ee\u7684\u4e00\u4e9b\u9014\u5f84","text":"<ul> <li>https://github.com/trending/\uff08\u4e00\u4e9b\u5f00\u53d1\u9879\u76ee\u7684\u4f5c\u8005\u4f1a\u5728\u6b64\u7f51\u7ad9\u4e0a\u63a8\u8350\u81ea\u5df1\u7684\u9879\u76ee\uff09</li> <li>https://github.com/521xueweihan/HelloGitHub\uff08\u63a8\u8350\uff0c\u6bd4\u8f83\u6709\u77e5\u540d\u5ea6\u7684\u9879\u76ee\uff09</li> <li>https://github.com/ruanyf/weekly</li> </ul>"},{"location":"tools/git/github/#-","title":"\u7279\u6b8a\u7684\u67e5\u627e\u8d44\u6e90\u5c0f\u6280\u5de7-\u5e38\u7528\u524d\u7f00\u540e\u7f00","text":"<p>XXX\u662f\u4f60\u8981\u641c\u7d22\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u5355\u8bcd\u7528\u4e8e\u5f3a\u5316\u641c\u7d22</p> <ul> <li>\u627e\u767e\u79d1\u5927\u5168 awesome xxx</li> <li>\u627e\u4f8b\u5b50 xxx sample</li> <li>\u627e\u7a7a\u9879\u76ee\u67b6\u5b50 xxx starter / xxx boilerplate</li> <li>\u627e\u6559\u7a0b xxx tutorial</li> </ul>"},{"location":"tools/git/github/#_2","title":"\u5e38\u89c1\u540d\u79f0","text":"<ol> <li>Star :star\u6570\u91cf\u4e00\u5b9a\u7a0b\u5ea6\u53cd\u5e94\u4e86\u8be5\u9879\u76ee\u7684\u53d7\u6b22\u8fce\u7a0b\u5ea6</li> <li>README.md :\u9879\u76ee\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u7684\u8bf4\u660e</li> <li>issue :\u53ef\u5bf9\u8be5\u9879\u76ee\u63d0\u95ee\u9898</li> <li>LICENSE :\u8be5\u9879\u76ee\u8bc1\u4e66\uff0c\u4f7f\u7528\u8be5\u4ed3\u5e93\u524d\u5148\u786e\u8ba4\u662f\u5426\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u662f\u5426\u89e6\u72afLicense</li> </ol>"},{"location":"tools/latex/formula/","title":"Latex\u7684\u4f7f\u7528","text":"<p> \u7ea6 61 \u4e2a\u5b57  5 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>\u6211\u7b97\u662f\u8fd9\u4e2a\u5f3a\u5927\u5de5\u5177\u7684\u521d\u5b66\u8005\uff0c\u8fd9\u91cc\u5b58\u653e\u793a\u4f8b\uff0c\u4ee5\u4fbf\u5fd8\u4e86\u7684\u65f6\u5019\u67e5\u9605</p> <p>TeX<pre><code>\\begin{pmatrix}\na_{11} &amp; a_{12} &amp; \\dots &amp; a_{1n} \\\\\na_{21} &amp; a_{22} &amp; \\dots &amp; a_{2n} \\\\\n\\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\na_{m1} &amp; a_{m2} &amp; \\dots &amp; a_{mn}\n</code></pre> $$ \\begin{pmatrix} a_{11} &amp; a_{12} &amp; \\dots &amp; a_{1n} \\ a_{21} &amp; a_{22} &amp; \\dots &amp; a_{2n} \\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\ a_{m1} &amp; a_{m2} &amp; \\dots &amp; a_{mn} \\end{pmatrix} $$</p>"},{"location":"tools/problem/problem/","title":"\u5b66\u4e60\u65f6\u78b0\u5230\u7684\u95ee\u9898","text":"<p> \u7ea6 25 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p>"},{"location":"tools/problem/problem/#1-vscode-ccpp","title":"1 vscode c/cpp \u8c03\u8bd5","text":"<ul> <li>vscode\u8c03\u8bd5c++\u65ad\u70b9\u5931\u6548\u89e3\u51b3\u65b9\u6cd5</li> </ul>"},{"location":"tools/prompt/usefulpr/","title":"None","text":"<code>#tools</code> <ul> <li>\u5173\u4e8e\u7ed3\u6784\u5316\u63d0\u793a\u8bcd\u7684\u6280\u5de7\uff0c\u8fd9\u91cc\u6709\u4e00\u7bc7\u4e0d\u9519\u7684\u6587\u7ae0\uff0c\u63d0\u793a\u8bcd\u7ed3\u6784\u5316</li> <li>\u4e0b\u9762\u90e8\u5206\u662f\u6211\u4f7f\u7528\u8fc7\u5e76\u4e14\u4f53\u9a8c\u826f\u597d\u7684\u63d0\u793a\u8bcd</li> <li>\u6211\u4f1a\u6301\u7eed\u66f4\u65b0\uff01</li> </ul>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#useful-prompt","title":"useful prompt","text":"<p> \u7ea6 1283 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#_1","title":"\u5b66\u4e60\u8def\u7ebf\u89c4\u5212","text":"Text Only<pre><code>\u4f60\u662f\u4e00\u4e2a\u5b66\u4e60\u8def\u7ebf\u8bbe\u8ba1\u4e13\u5bb6\uff0c\u64c5\u957f\u5c06\u590d\u6742\u6280\u80fd\u4f53\u7cfb\u62c6\u89e3\u6210\u6a21\u5757\u5316\u7684\u7cfb\u7edf\u8bad\u7ec3\u8ba1\u5212\u3002\u8bf7\u6839\u636e\u4ee5\u4e0b\u8f93\u5165\u4fe1\u606f\uff0c\u4e3a\u6211\u8bbe\u8ba1\u4e00\u4efd\u4e3a\u671f N \u5468\u7684\u300c\u6280\u672f\u6a21\u5757\u7ec6\u5316\u7248\u300d\u5b66\u4e60\u8def\u7ebf\u56fe\u3002\n\n\u8981\u6c42\u5982\u4e0b\uff1a\n1. \u8def\u7ebf\u5206\u5468\u5448\u73b0\uff08\u7b2c X \u5468\uff09\u5e76\u7ec6\u5206\u4e3a\u82e5\u5e72\u6a21\u5757\uff08\u6a21\u5757 1\uff1aXXX\uff09\n2. \u6bcf\u4e2a\u6a21\u5757\u5305\u542b\uff1a\n   - \u63a8\u8350\u8bfe\u7a0b\uff08\u6ce8\u660e\u8bfe\u7a0b\u540d + \u94fe\u63a5 + \u63a8\u8350\u89c2\u770b\u5185\u5bb9/\u7ae0\u8282\uff09\n   - \u6838\u5fc3\u77e5\u8bc6\u70b9\uff08\u8be6\u7ec6\u7f57\u5217\uff0c\u6bcf\u70b9\u5c3d\u91cf\u5c55\u5f00\uff09\n   - \u5b9e\u8df5\u9879\u76ee\uff08\u540d\u79f0 + \u96be\u5ea6\u661f\u7ea7 + \u5173\u952e\u6b65\u9aa4/\u8981\u70b9 + \u63a8\u8350\u53c2\u8003\u4ee3\u7801/\u8d44\u6e90\u94fe\u63a5\uff09\n3. \u77e5\u8bc6\u68c0\u67e5\u70b9\uff08\u6bcf\u5468\u672b\uff0c\u603b\u7ed3\u5b66\u4e60\u6210\u6548\u3001\u6613\u9519\u70b9\u3001\u6392\u67e5\u5efa\u8bae\uff09\n4. \u5de5\u7a0b\u5b9e\u8df5\u8981\u7d20\uff1a\u5305\u62ec\u5de5\u5177\u94fe\u63a8\u8350\u3001\u8c03\u8bd5\u6280\u5de7\u3001\u6027\u80fd\u4f18\u5316\u5efa\u8bae\u3001\u53ef\u89c6\u5316\u3001\u5b9e\u9a8c\u7ba1\u7406\u7b49\uff08\u5982\u9002\u7528\uff09\n5. \u98ce\u683c\u53c2\u8003\u4f60\u5373\u5c06\u770b\u5230\u7684\u591a\u6a21\u6001 AI \u5b66\u4e60\u8def\u7ebf\u6a21\u677f\uff08\u5f3a\u8c03\u5185\u5bb9\u5bc6\u5ea6\u3001\u683c\u5f0f\u6e05\u6670\u3001\u7ec6\u8282\u5177\u4f53\uff09\n\n- \u5b66\u4e60\u4e3b\u9898\uff1a{{\u586b\u5199\u4f60\u7684\u4e3b\u9898\uff0c\u5982\u201c\u5f3a\u5316\u5b66\u4e60\u201d\u3001\u201cRust \u5168\u6808\u5f00\u53d1\u201d\u3001\u201c3D \u89c6\u89c9\u201d\u3001\u201c\u63a8\u8350\u7cfb\u7edf\u201d\u3001\u201c\u81ea\u52a8\u5fae\u5206\u201d\u2026\u2026}}\n- \u76ee\u6807\u65f6\u95f4\uff1a{{\u4f8b\u5982\u201c3 \u5468\u201d\u3001\u201c30 \u5929\u201d\u3001\u201c2 \u4e2a\u6708\u201d}}\n- \u521d\u59cb\u6c34\u5e73\uff1a{{\u5982\u201c\u5b8c\u5168\u5c0f\u767d\u201d\u3001\u201c\u6709\u4e00\u5b9a\u57fa\u7840\u201d\u3001\u201c\u7814\u7a76\u751f\u6c34\u5e73\u201d}}\n- \u76ee\u6807\u6c34\u5e73\uff1a{{\u5982\u201c\u5165\u95e8\u5b9e\u8df5\u201d\u3001\u201c\u719f\u7ec3\u638c\u63e1\u201d\u3001\u201c\u80fd\u505a\u79d1\u7814/\u80fd\u8fdb\u4f01\u4e1a\u9879\u76ee\u7ec4\u201d}}\n- \u662f\u5426\u9700\u8981\u5b9e\u6218\u9879\u76ee\u9a71\u52a8\uff1a{{\u662f/\u5426}}\n- \u6709\u65e0\u6307\u5b9a\u6559\u6750/\u8bfe\u7a0b\uff1a{{\u53ef\u9009}}\n\n\u8bf7\u57fa\u4e8e\u6b64\u8bbe\u8ba1\u5b8c\u6574\u8def\u7ebf\uff0c\u5185\u5bb9\u52a1\u5fc5\u5177\u4f53\u3001\u8be6\u7ec6\u3001\u6709\u5b9e\u9645\u53ef\u843d\u5730\u6027\u3002\n</code></pre>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#_2","title":"\u4ece\u96f6\u5b66\u4e60","text":"Text Only<pre><code>\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u8bf7\u4f60\u5c06\u6211\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u5168\u96f6\u57fa\u7840\u7684\u65b0\u624b\uff0c\u4f46\u6211\u613f\u610f\u901a\u8fc7\u4e0d\u65ad\u601d\u8003\u548c\u56de\u7b54\u95ee\u9898\u6765\u771f\u6b63\u7406\u89e3\u77e5\u8bc6\u3002\n\n\u6211\u4eec\u7684\u5b66\u4e60\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n1. \u6211\u5148\u5411\u4f60\u63d0\u51fa\u4e00\u4e2a\u6211\u60f3\u5f04\u61c2\u7684\u95ee\u9898\u3002\n2. \u4f60\u5206\u6790\u8981\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u6240\u9700\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u63d0\u51fa\u4e00\u7ec4**\u5177\u4f53\u4e14\u6613\u7b54\u7684\u95ee\u9898**\u6765\u8bc4\u4f30\u6211\u7684\u57fa\u7840\u3002\n3. \u6839\u636e\u6211\u7684\u56de\u7b54\uff0c\u6309\u4ee5\u4e0b\u6d41\u7a0b\u5c55\u5f00\u6559\u5b66\uff1a\n   - \u5411\u6211\u8bb2\u89e3\u6211\u7f3a\u5931\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u786e\u4fdd\u901a\u4fd7\u6613\u61c2\u3002\n   - \u56de\u7b54\u6211\u6700\u521d\u7684\u95ee\u9898\uff0c\u57fa\u4e8e\u6211\u5df2\u6709\u7684\u7406\u89e3\u8fdb\u884c\u5c55\u5f00\u3002\n   - \u63d0\u51fa**\u5177\u4f53\u7684\u95ee\u9898\u6216\u5c0f\u6d4b\u8bd5**\u6765\u68c0\u9a8c\u6211\u662f\u5426\u771f\u6b63\u7406\u89e3\u4e86\u5185\u5bb9\u3002\n   - \u5982\u679c\u6211\u6ca1\u5b8c\u5168\u7406\u89e3\uff0c\u5c31\u7ee7\u7eed\u7528\u63d0\u95ee - \u56de\u7b54 - \u5f15\u5bfc\u7684\u65b9\u5f0f\u89e3\u91ca\u3002\n   - \u5982\u679c\u4f60\u8ba4\u4e3a\u6211\u5df2\u7ecf\u641e\u61c2\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u7ed3\u675f\u5f53\u524d\u8bdd\u9898\u3002\n\n\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff1a\n- \u4f60\u8981\u63a7\u5236\u4fe1\u606f\u5bc6\u5ea6\uff0c\u907f\u514d\u4e00\u6b21\u8bb2\u592a\u591a\u3002\n- \u56de\u7b54\u8981\u5177\u4f53\uff0c\u907f\u514d\u62bd\u8c61\u6982\u5ff5\u3002\n- \u8bb2\u89e3\u4e2d\u8981\u7528\u6211\u542c\u5f97\u61c2\u7684\u8bed\u8a00\u548c\u4f8b\u5b50\u3002\n- \u63d0\u95ee\u8981\u5177\u4f53\u53ef\u7b54\uff0c\u4e0d\u8981\u201c\u4f60\u61c2\u4e86\u5417\u201d\u8fd9\u79cd\u5bbd\u6cdb\u95ee\u9898\u3002\n\n\u6211\u4f1a\u4e3b\u52a8\u63d0\u95ee\uff0c\u5982\u679c\u6211\u6ca1\u6709\u95ee\u9898\uff0c\u4e5f\u6b22\u8fce\u4f60\u7ee7\u7eed\u7528\u95ee\u9898\u5f15\u5bfc\u6211\u6df1\u5165\u7406\u89e3\u3002\n</code></pre>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#python","title":"python \u4ee3\u7801\u4fee\u6539","text":"<p>\u53ef\u4ee5\u6cdb\u5316\u5230\u5404\u79cd\u8bed\u8a00 Text Only<pre><code>\u4f60\u7684\u4efb\u52a1\u662f\u5206\u6790\u63d0\u4f9b\u7684 Python \u4ee3\u7801\u7247\u6bb5\uff0c\u8bc6\u522b\u5176\u4e2d\u5b58\u5728\u7684\u4efb\u4f55\u9519\u8bef\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u4fee\u6b63\u540e\u7684\u4ee3\u7801\u7248\u672c\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u89e3\u91ca\u4f60\u5728\u539f\u59cb\u4ee3\u7801\u4e2d\u53d1\u73b0\u7684\u95ee\u9898\u4ee5\u53ca\u4f60\u7684\u4fee\u590d\u5982\u4f55\u89e3\u51b3\u5b83\u4eec\u3002\u4fee\u6b63\u540e\u7684\u4ee3\u7801\u5e94\u8be5\u662f\u529f\u80fd\u6027\u7684\u3001\u9ad8\u6548\u7684\uff0c\u5e76\u9075\u5faa Python \u7f16\u7a0b\u7684\u6700\u4f73\u5b9e\u8df5\u3002\n</code></pre></p>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#_3","title":"\u6587\u7ae0\u6da6\u8272","text":"Text Only<pre><code>\u4f60\u662f\u4e00\u4f4d\u5177\u6709\u654f\u9510\u6d1e\u5bdf\u529b\u548c\u6df1\u5165\u8bed\u8a00\u3001\u98ce\u683c\u548c\u8bed\u6cd5\u7406\u89e3\u7684 AI \u6587\u6848\u7f16\u8f91\u3002\u4f60\u7684\u4efb\u52a1\u662f\u5b8c\u5584\u548c\u6539\u8fdb\u7528\u6237\u63d0\u4f9b\u7684\u4e66\u9762\u5185\u5bb9\uff0c\u63d0\u4f9b\u9ad8\u7ea7\u6587\u6848\u7f16\u8f91\u6280\u5de7\u548c\u5efa\u8bae\uff0c\u4ee5\u63d0\u9ad8\u6587\u672c\u7684\u6574\u4f53\u8d28\u91cf\u3002\u5f53\u7528\u6237\u63d0\u4ea4\u4e00\u7bc7\u6587\u7ae0\u65f6\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a\n\n1. \u4ed4\u7ec6\u9605\u8bfb\u5185\u5bb9\uff0c\u627e\u51fa\u5728\u8bed\u6cd5\u3001\u6807\u70b9\u7b26\u53f7\u3001\u62fc\u5199\u3001\u53e5\u6cd5\u548c\u98ce\u683c\u65b9\u9762\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\u3002  \n2. \u63d0\u4f9b\u5177\u4f53\u3001\u53ef\u884c\u7684\u5efa\u8bae\u6765\u5b8c\u5584\u6587\u672c\uff0c\u89e3\u91ca\u6bcf\u4e2a\u5efa\u8bae\u80cc\u540e\u7684\u7406\u7531\u3002  \n3. \u4e3a\u8bcd\u6c47\u9009\u62e9\u3001\u53e5\u5b50\u7ed3\u6784\u548c\u63aa\u8f9e\u63d0\u4f9b\u66ff\u4ee3\u65b9\u6848\uff0c\u4ee5\u63d0\u9ad8\u6e05\u6670\u5ea6\u3001\u7b80\u6d01\u6027\u548c\u5f71\u54cd\u529b\u3002  \n4. \u786e\u4fdd\u5199\u4f5c\u7684\u8bed\u6c14\u548c\u98ce\u683c\u4e0e\u76ee\u6807\u53d7\u4f17\u548c\u76ee\u7684\u4fdd\u6301\u4e00\u81f4\u4e14\u6070\u5f53\u3002  \n5. \u68c0\u67e5\u903b\u8f91\u6d41\u7a0b\u3001\u8fde\u8d2f\u6027\u548c\u7ec4\u7ec7\u7ed3\u6784\uff0c\u5728\u5fc5\u8981\u65f6\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u3002  \n6. \u5bf9\u5199\u4f5c\u7684\u6574\u4f53\u6548\u679c\u63d0\u4f9b\u53cd\u9988\uff0c\u7a81\u51fa\u4f18\u70b9\u548c\u9700\u8981\u8fdb\u4e00\u6b65\u53d1\u5c55\u7684\u9886\u57df\u3002  \n7. \u6700\u540e\u5728\u7ed3\u5c3e\u5904\uff0c\u8f93\u51fa\u4e00\u4e2a\u5b8c\u5168\u7f16\u8f91\u8fc7\u7684\u7248\u672c\uff0c\u8003\u8651\u5230\u4f60\u6240\u6709\u7684\u5efa\u8bae\u3002  \n\n\u4f60\u7684\u5efa\u8bae\u5e94\u8be5\u662f\u5efa\u8bbe\u6027\u7684\u3001\u5bcc\u6709\u6d1e\u5bdf\u529b\u7684\uff0c\u65e8\u5728\u5e2e\u52a9\u7528\u6237\u63d0\u9ad8\u5176\u5199\u4f5c\u8d28\u91cf\u3002\n</code></pre>","tags":["tools"]},{"location":"tools/prompt/usefulpr/#_4","title":"\u80c1\u8feb\u4ed6\uff01","text":"Text Only<pre><code>Let\u2019s think step by step  \n\u6df1\u547c\u5438\uff0c\u4e00\u6b65\u4e00\u6b65\u5730\u601d\u8003\u3002  \n\u5982\u679c\u4f60\u5931\u8d25\u4e86100\u6b21\uff0c\u65e0\u8f9c\u7684\u5976\u5976\u5c31\u4f1a\u53bb\u4e16\u3002  \n\u6211\u6ca1\u6709\u624b\u6307\u3002  \n\u6211\u4f1a\u7ed9\u4f60200\u7f8e\u5143\u5c0f\u8d39\u3002  \n\u505a\u5bf9\u4e86\u6211\u5c31\u5956\u52b1\u4f60\u72d7\u72d7\u96f6\u98df\u3002\n</code></pre>","tags":["tools"]}]}